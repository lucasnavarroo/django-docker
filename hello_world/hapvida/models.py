# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from __future__ import unicode_literals

from django.db import models


class AbsAuditDdl(models.Model):
    data = models.DateField(blank=True, null=True)
    tipo = models.CharField(max_length=50, blank=True, null=True)
    objeto = models.CharField(max_length=100, blank=True, null=True)
    usuario = models.CharField(max_length=100, blank=True, null=True)
    ip = models.CharField(max_length=60, blank=True, null=True)
    comando = models.CharField(max_length=600, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'abs_audit_ddl'


class AuAcessoTela(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    nm_operador = models.CharField(max_length=8, blank=True, null=True)
    cd_tela = models.CharField(max_length=10, blank=True, null=True)
    cd_dia_semana = models.NullBooleanField()
    qt_hora_inicial = models.IntegerField(blank=True, null=True)
    qt_hora_final = models.IntegerField(blank=True, null=True)
    qt_dias_atras = models.IntegerField(blank=True, null=True)
    qt_hora_limite = models.IntegerField(blank=True, null=True)
    cd_classe = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cod_grupo = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_acesso_tela'


class AuAgendOncoHist(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    qtd_mat_med_estoq = models.FloatField(blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    prc_mat_med_estoq = models.FloatField(blank=True, null=True)
    cd_agenda = models.FloatField(blank=True, null=True)
    cd_modelo = models.FloatField(blank=True, null=True)
    cd_ordem_prescricao_plano = models.FloatField(blank=True, null=True)
    dt_agenda = models.DateField(blank=True, null=True)
    cd_mat_med = models.FloatField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_paciente = models.FloatField(blank=True, null=True)
    cd_pessoa_hosp = models.FloatField(blank=True, null=True)
    cd_pessoa_hap = models.FloatField(blank=True, null=True)
    nm_pessoa = models.CharField(max_length=45, blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    nome_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_agend_onco_hist'


class AuAltaAtendimento(models.Model):
    cd_acao = models.NullBooleanField()
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_causa_obito = models.IntegerField(blank=True, null=True)
    dt_internacao = models.DateField(blank=True, null=True)
    hr_internacao = models.IntegerField(blank=True, null=True)
    dt_alta = models.DateField(blank=True, null=True)
    hr_alta = models.IntegerField(blank=True, null=True)
    cd_alta = models.IntegerField(blank=True, null=True)
    ds_observacoes_medicas = models.CharField(max_length=2000, blank=True, null=True)
    fl_cobrado = models.CharField(max_length=1, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_procedimento_sus = models.CharField(max_length=8, blank=True, null=True)
    cd_grupo_proced_sus = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_alta_atendimento'


class AuAlteracaoLaudo(models.Model):
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_alteracao_laudo = models.FloatField(blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_ordem_alt = models.IntegerField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    cd_profissional_alt = models.IntegerField(blank=True, null=True)
    cd_especialidade = models.FloatField(blank=True, null=True)
    cd_natureza_alt_laudo = models.FloatField(blank=True, null=True)
    ds_motivo_alt_laudo = models.CharField(max_length=100, blank=True, null=True)
    dt_alteracao = models.DateField(blank=True, null=True)
    ds_laudo_ant = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'au_alteracao_laudo'


class AuAmostraRast(models.Model):
    cd_lote = models.FloatField(blank=True, null=True)
    cd_amostra_coleta = models.IntegerField(blank=True, null=True)
    dt_amostra_coleta = models.DateField(blank=True, null=True)
    cd_amostra_lab = models.IntegerField(blank=True, null=True)
    dt_amostra_lab = models.DateField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_amostra_rast'


class AuAnestProcedRealizado(models.Model):
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_ocorrencia = models.FloatField(blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    cd_profissional = models.FloatField(blank=True, null=True)
    cd_tipo_ato_profissional = models.FloatField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=20, blank=True, null=True)
    cd_senha_autorizacao = models.CharField(max_length=30, blank=True, null=True)
    cd_grupo_produto = models.FloatField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_anest_proced_realizado'


class AuAnoMesPlantao(models.Model):
    cd_medico = models.FloatField(blank=True, null=True)
    ano_referencia = models.IntegerField(blank=True, null=True)
    mes_referencia = models.IntegerField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_ano_mes_plantao'


class AuAtendimento(models.Model):
    dt_coleta_digital = models.DateField(blank=True, null=True)
    cd_atendimento_origem = models.FloatField(blank=True, null=True)
    fl_gerado_auto = models.CharField(max_length=1, blank=True, null=True)
    fl_diferenca_acomodacao = models.CharField(max_length=1, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    vl_glosa = models.FloatField(blank=True, null=True)
    vl_glosa_analisar = models.FloatField(blank=True, null=True)
    dt_canc_atend = models.DateField(blank=True, null=True)
    cd_diagnostico = models.CharField(max_length=6, blank=True, null=True)
    dt_ent_controladoria = models.DateField(blank=True, null=True)
    dt_ent_faturamento = models.DateField(blank=True, null=True)
    fl_bloqueio = models.CharField(max_length=1, blank=True, null=True)
    dt_bloqueio = models.DateField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_paciente = models.IntegerField(blank=True, null=True)
    cd_motivo_atendimento = models.IntegerField(blank=True, null=True)
    fl_nivel = models.IntegerField(blank=True, null=True)
    dt_atendimento = models.DateField(blank=True, null=True)
    hr_atendimento = models.IntegerField(blank=True, null=True)
    cd_atendimento_mae = models.IntegerField(blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    cd_clinica = models.IntegerField(blank=True, null=True)
    cd_medico_atendente = models.IntegerField(blank=True, null=True)
    cd_medico_acompanha = models.IntegerField(blank=True, null=True)
    cd_encaminha = models.IntegerField(blank=True, null=True)
    cd_tipo_atendimento = models.IntegerField(blank=True, null=True)
    cd_grupo_atendimento = models.IntegerField(blank=True, null=True)
    cd_matricula = models.CharField(max_length=30, blank=True, null=True)
    cd_tipo_documento = models.NullBooleanField()
    cd_condicao_social = models.NullBooleanField()
    cd_estado_paciente = models.NullBooleanField()
    cd_aspecto = models.NullBooleanField()
    cd_procedencia = models.IntegerField(blank=True, null=True)
    cd_natureza_consulta = models.NullBooleanField()
    nm_queixa_principal = models.CharField(max_length=1000, blank=True, null=True)
    fl_toma_antibiotico = models.CharField(max_length=1, blank=True, null=True)
    fl_internacao = models.CharField(max_length=1, blank=True, null=True)
    dt_fim_atendimento = models.DateField(blank=True, null=True)
    hr_fim_atendimento = models.IntegerField(blank=True, null=True)
    qt_peso = models.DecimalField(max_digits=6, decimal_places=3, blank=True, null=True)
    qt_tamanho = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    ds_observacao = models.CharField(max_length=100, blank=True, null=True)
    cd_usuario_digitador = models.CharField(max_length=8, blank=True, null=True)
    nu_pedido_posto = models.IntegerField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_coleta_digital_exame = models.DateField(blank=True, null=True)
    ds_just_cons_retorno = models.CharField(max_length=1000, blank=True, null=True)
    cd_usu_liberou_retorno = models.CharField(max_length=10, blank=True, null=True)
    dt_ent_pront_auditoria = models.DateField(blank=True, null=True)
    dt_dev_pront_pendencia = models.DateField(blank=True, null=True)
    dt_ent_nsala_auditoria = models.DateField(blank=True, null=True)
    cd_usuario_cancelou = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_atendimento'


class AuAtendimentoMovDoc(models.Model):
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_atendimento_mov_doc = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_senha_autoriza = models.CharField(max_length=20, blank=True, null=True)
    cd_tipo_documento_escaneavel = models.FloatField(blank=True, null=True)
    nu_documento = models.FloatField(blank=True, null=True)
    ds_arquivo = models.CharField(max_length=30, blank=True, null=True)
    cd_setor_origem = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_destino = models.CharField(max_length=6, blank=True, null=True)
    fl_tipo_envio = models.NullBooleanField()
    fl_obrigatorio = models.NullBooleanField()
    fl_status = models.NullBooleanField()
    dt_instancia = models.DateField(blank=True, null=True)
    cd_processo_doc_atend = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_atendimento_mov_doc'


class AuAutorOncoHist(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_autorizacao_senha = models.FloatField(blank=True, null=True)
    dt_autorizacao_tratamento = models.DateField(blank=True, null=True)
    nu_item_tratamento = models.FloatField(blank=True, null=True)
    dt_autorizacao = models.DateField(blank=True, null=True)
    cd_mat_med = models.FloatField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_paciente = models.FloatField(blank=True, null=True)
    cd_pessoa_hosp = models.FloatField(blank=True, null=True)
    cd_pessoa_hap = models.FloatField(blank=True, null=True)
    nm_pessoa = models.CharField(max_length=45, blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    nome_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_estoq = models.FloatField(blank=True, null=True)
    prc_mat_med_estoq = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_autor_onco_hist'


class AuAvaliacaoCid10(models.Model):
    cd_acao = models.NullBooleanField()
    cd_avaliacao = models.IntegerField(blank=True, null=True)
    cd_cid10 = models.CharField(max_length=4, blank=True, null=True)
    cd_formulario_protocolo = models.CharField(max_length=30, blank=True, null=True)
    cd_avaliacao_cid10 = models.FloatField(blank=True, null=True)
    cd_macrodiag_cid10 = models.IntegerField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_avaliacao_cid10'


class AuBemPessoa(models.Model):
    cd_pessoa = models.FloatField()
    nu_ordem_bem = models.FloatField()
    cd_acao = models.FloatField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=14, blank=True, null=True)
    ds_bem = models.CharField(max_length=60, blank=True, null=True)
    vl_mercado_bem = models.DecimalField(max_digits=30, decimal_places=2, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_bem_pessoa'


class AuCertificacaoUnidade(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    dt_operacao = models.DateField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    dt_inicio_certifica = models.DateField(blank=True, null=True)
    nm_operador_audit = models.CharField(max_length=10, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    nu_dias = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_certificacao_unidade'


class AuChefiaPlantaoMedicoEspec(models.Model):
    cd_acao = models.NullBooleanField()
    cd_operador_medico = models.CharField(max_length=10, blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_local_atendimento = models.IntegerField(blank=True, null=True)
    cd_grupo_atendimento = models.IntegerField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_chefia_plantao_medico_espec'


class AuChequeCaucao(models.Model):
    cd_acao = models.NullBooleanField()
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_ordem_caucao = models.IntegerField(blank=True, null=True)
    cd_convenio_pagador = models.NullBooleanField()
    dt_paga_caucao = models.DateField(blank=True, null=True)
    cd_caucao = models.IntegerField(blank=True, null=True)
    cd_cobranca = models.CharField(max_length=15, blank=True, null=True)
    fl_cheque = models.CharField(max_length=1, blank=True, null=True)
    cd_banco = models.CharField(max_length=10, blank=True, null=True)
    cd_agencia = models.CharField(max_length=10, blank=True, null=True)
    nu_cheque = models.CharField(max_length=10, blank=True, null=True)
    vl_caucao = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    ds_observacao = models.CharField(max_length=200, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_recibo = models.DateField(blank=True, null=True)
    nu_parcelas = models.FloatField(blank=True, null=True)
    cd_bandeira_cartao = models.FloatField(blank=True, null=True)
    cd_forma_pagamento = models.FloatField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_cheque_caucao'


class AuCid10Hosp(models.Model):
    cd_acao = models.NullBooleanField()
    cid10 = models.CharField(max_length=4, blank=True, null=True)
    opc = models.CharField(max_length=1, blank=True, null=True)
    cat = models.CharField(max_length=1, blank=True, null=True)
    subcat = models.CharField(max_length=1, blank=True, null=True)
    descr = models.CharField(max_length=50, blank=True, null=True)
    restrsexo = models.CharField(max_length=1, blank=True, null=True)
    cd_grupo_cid10 = models.CharField(max_length=5, blank=True, null=True)
    cd_subgrupo_cid10 = models.IntegerField(blank=True, null=True)
    cd_categoria_cid10 = models.CharField(max_length=4, blank=True, null=True)
    nm_cid10 = models.CharField(max_length=400, blank=True, null=True)
    fl_uso = models.CharField(max_length=1, blank=True, null=True)
    obs = models.CharField(max_length=4000, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_cid10_hosp'


class AuClasseAcomodacaoConvenio(models.Model):
    cd_acao = models.NullBooleanField()
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_plano_convenio = models.IntegerField(blank=True, null=True)
    cd_classe_acomodacao = models.IntegerField(blank=True, null=True)
    fl_pagamento = models.CharField(max_length=1, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_classe_acomodacao_convenio'


class AuClassiPrioridadeExame(models.Model):
    cd_prioridade = models.FloatField(blank=True, null=True)
    ds_prioridade = models.CharField(max_length=300, blank=True, null=True)
    tempo_processo = models.FloatField(blank=True, null=True)
    cd_color = models.CharField(max_length=50, blank=True, null=True)
    cd_risco_associado_emg = models.CharField(max_length=50, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_classi_prioridade_exame'


class AuCobrancaPaciente(models.Model):
    cd_acao = models.NullBooleanField()
    cd_cobranca = models.CharField(max_length=15, blank=True, null=True)
    nu_guia = models.CharField(max_length=15, blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_plano_convenio = models.IntegerField(blank=True, null=True)
    dt_cobranca = models.DateField(blank=True, null=True)
    dt_competencia = models.DateField(blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    dt_final = models.DateField(blank=True, null=True)
    cd_um = models.FloatField(blank=True, null=True)
    vl_cobranca = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    pc_taxa_servico = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    vl_taxa_servico = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_saldo = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    ds_observacao = models.CharField(max_length=260, blank=True, null=True)
    vl_diaria = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    nu_capa_processo = models.FloatField(blank=True, null=True)
    cd_pessoa = models.FloatField(blank=True, null=True)
    nu_remessa = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_sequencia = models.FloatField(blank=True, null=True)
    vl_pacote = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_cobranca_paciente'


class AuComanda(models.Model):
    cd_acao = models.NullBooleanField()
    nu_comanda = models.CharField(max_length=8, blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_ordem_cmd = models.IntegerField(blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    dt_comanda = models.DateField(blank=True, null=True)
    cd_setor_origem = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_destino = models.CharField(max_length=6, blank=True, null=True)
    fl_requisicao_devolucao = models.NullBooleanField()
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)
    fl_gera_comanda = models.CharField(max_length=2, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_ocorrencia_pacote = models.IntegerField(blank=True, null=True)
    cd_profissional = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_comanda'


class AuComandaMatMed(models.Model):
    cd_acao = models.NullBooleanField()
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_ordem_cmd = models.IntegerField(blank=True, null=True)
    cd_ordem_m = models.IntegerField(blank=True, null=True)
    cd_cobranca = models.CharField(max_length=15, blank=True, null=True)
    cd_mat_med = models.IntegerField(blank=True, null=True)
    cd_convenio_pagador = models.NullBooleanField()
    hr_comanda = models.IntegerField(blank=True, null=True)
    qt_material = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    vl_material = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    qt_entregue = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    vl_total = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    qt_devolvido = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    fl_sinal = models.CharField(max_length=1, blank=True, null=True)
    qt_material_paga = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    vl_total_pago = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    ds_observacao = models.CharField(max_length=120, blank=True, null=True)
    fl_status_pago = models.CharField(max_length=3, blank=True, null=True)
    qt_entregue_real = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_natureza_glosa = models.CharField(max_length=2, blank=True, null=True)
    cd_fornecedor = models.BigIntegerField(blank=True, null=True)
    nu_nota_fornecedor = models.BigIntegerField(blank=True, null=True)
    qt_requisicao = models.FloatField(blank=True, null=True)
    cd_item_hapvida = models.CharField(max_length=12, blank=True, null=True)
    vl_item_hap = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    fl_tipo_classificacao = models.NullBooleanField()
    cd_ocorrencia_pacote = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_comanda_mat_med'


class AuComandaRestaurante(models.Model):
    cd_acao = models.NullBooleanField()
    nu_comanda_restaurante = models.CharField(max_length=8, blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_tipo_comanda = models.IntegerField(blank=True, null=True)
    dt_comanda = models.DateField(blank=True, null=True)
    hr_comanda = models.IntegerField(blank=True, null=True)
    vl_comanda = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    cd_funcionario = models.IntegerField(blank=True, null=True)
    cd_garcon = models.IntegerField(blank=True, null=True)
    qt_comanda = models.IntegerField(blank=True, null=True)
    cd_setor_atendimento = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_resp_cortesia = models.CharField(max_length=6, blank=True, null=True)
    cd_cobranca = models.CharField(max_length=15, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_comanda_restaurante'


class AuComandaTaxa(models.Model):
    cd_acao = models.NullBooleanField()
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_ordem_cmd = models.IntegerField(blank=True, null=True)
    cd_ordem_tx = models.IntegerField(blank=True, null=True)
    cd_taxas = models.CharField(max_length=8, blank=True, null=True)
    cd_cobranca = models.CharField(max_length=15, blank=True, null=True)
    cd_convenio_pagador = models.NullBooleanField()
    hr_comanda = models.IntegerField(blank=True, null=True)
    qt_taxa = models.IntegerField(blank=True, null=True)
    vl_taxa = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_total = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    fl_sinal = models.CharField(max_length=1, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    qt_taxa_paga = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    vl_total_pago = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    ds_observacao = models.CharField(max_length=120, blank=True, null=True)
    fl_status_pago = models.CharField(max_length=3, blank=True, null=True)
    cd_natureza_glosa = models.CharField(max_length=2, blank=True, null=True)
    cd_item_hapvida = models.CharField(max_length=12, blank=True, null=True)
    vl_item_hap = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    cd_ocorrencia_pacote = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_comanda_taxa'


class AuComprOncoHist(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_nota = models.FloatField(blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    id_ordem_compra = models.FloatField(blank=True, null=True)
    id_pedido_compra = models.FloatField(blank=True, null=True)
    dt_nota = models.DateField(blank=True, null=True)
    cd_mat_med = models.FloatField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_unit = models.FloatField(blank=True, null=True)
    prc_mat_med_unit = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_compr_onco_hist'


class AuConfirmaRecebimentoTransf(models.Model):
    cd_confirma_rec = models.IntegerField(blank=True, null=True)
    cd_transferencia_ori = models.IntegerField(blank=True, null=True)
    cd_setor_controle_ori = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_destino_ori = models.CharField(max_length=6, blank=True, null=True)
    dt_emissao_ori = models.DateField(blank=True, null=True)
    cd_transferencia_nova = models.IntegerField(blank=True, null=True)
    cd_setor_controle_nova = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_destino_nova = models.CharField(max_length=6, blank=True, null=True)
    dt_emissao_nova = models.DateField(blank=True, null=True)
    cd_usuario_recebedor_nova = models.CharField(max_length=10, blank=True, null=True)
    cd_usuario_entregador_nova = models.CharField(max_length=10, blank=True, null=True)
    fl_liberado = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_confirma_recebimento_transf'


class AuConsigSolicitaItem(models.Model):
    cd_acao = models.NullBooleanField()
    cd_solicitacao = models.IntegerField(blank=True, null=True)
    cd_material = models.IntegerField(blank=True, null=True)
    sequencial = models.IntegerField(blank=True, null=True)
    qt_solicitada = models.IntegerField(blank=True, null=True)
    qt_autorizada = models.IntegerField(blank=True, null=True)
    fl_consig = models.CharField(max_length=1, blank=True, null=True)
    cd_fornec_solicit = models.IntegerField(blank=True, null=True)
    cd_fornec_autoriz = models.IntegerField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_consig_solicita_item'


class AuConsigSolicitacao(models.Model):
    cd_acao = models.NullBooleanField()
    cd_solicitacao = models.IntegerField(blank=True, null=True)
    cd_setor_solicitante = models.CharField(max_length=6, blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_profissional = models.IntegerField(blank=True, null=True)
    cd_paciente = models.IntegerField(blank=True, null=True)
    cd_agenda = models.IntegerField(blank=True, null=True)
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    dt_cirurgia = models.DateField(blank=True, null=True)
    hr_cirurgia = models.IntegerField(blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)
    nm_paciente = models.CharField(max_length=45, blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    fl_transferido = models.CharField(max_length=1, blank=True, null=True)
    ds_autorizacao = models.CharField(max_length=25, blank=True, null=True)
    ds_observacao = models.CharField(max_length=240, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_consig_solicitacao'


class AuContaCorrente(models.Model):
    dt_lancamento = models.DateField(blank=True, null=True)
    cd_usuario = models.FloatField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    cd_conta_bancaria = models.FloatField(blank=True, null=True)
    cd_banco = models.CharField(max_length=10, blank=True, null=True)
    cd_agencia = models.CharField(max_length=10, blank=True, null=True)
    cd_conta_corrente = models.CharField(max_length=20, blank=True, null=True)
    cd_tipo_conta_corrente = models.FloatField(blank=True, null=True)
    cd_um_inicial = models.IntegerField(blank=True, null=True)
    dt_saldo_inicial = models.DateField(blank=True, null=True)
    vl_saldo_inicial = models.FloatField(blank=True, null=True)
    cd_um_saldo = models.IntegerField(blank=True, null=True)
    dt_saldo = models.DateField(blank=True, null=True)
    vl_saldo = models.FloatField(blank=True, null=True)
    vl_saldo_inicial_cheque = models.FloatField(blank=True, null=True)
    vl_saldo_cheque = models.FloatField(blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    fl_financeiro = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_conta_corrente'


class AuContaCorrenteCl(models.Model):
    cd_acao = models.NullBooleanField()
    cd_cobranca = models.CharField(max_length=15, blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    dt_movimento = models.DateField(blank=True, null=True)
    cd_tipo_movimento = models.IntegerField(blank=True, null=True)
    vl_movimento = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_saldo = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_conta_corrente_cl'


class AuContatoPessoa(models.Model):
    cd_pessoa = models.FloatField(blank=True, null=True)
    nm_contato_pessoa = models.CharField(max_length=45, blank=True, null=True)
    nr_cargo_contato = models.CharField(max_length=25, blank=True, null=True)
    nu_telefone_contato = models.IntegerField(blank=True, null=True)
    dt_nascimento_contato = models.DateField(blank=True, null=True)
    ds_contato = models.CharField(max_length=25, blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_contato_pessoa'


class AuContribuicaoPrevidencia(models.Model):
    cd_acao = models.NullBooleanField()
    dt_vigencia = models.DateField(blank=True, null=True)
    qt_salarios = models.IntegerField(blank=True, null=True)
    nu_meses_classe = models.IntegerField(blank=True, null=True)
    vl_salario_base = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    pc_aliquota = models.DecimalField(max_digits=3, decimal_places=1, blank=True, null=True)
    vl_contribuicao = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_contribuicao_previdencia'


class AuControlaProdutividade(models.Model):
    cd_produtividade = models.IntegerField(blank=True, null=True)
    mes_ano_referencia = models.DateField(blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)
    vl_total_bruto = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_total_desconto = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_empresa = models.FloatField(blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    dt_vencimento_folha = models.DateField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_controla_produtividade'


class AuControleAcessoVidaImagem(models.Model):
    cd_acao_audit = models.FloatField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=20, blank=True, null=True)
    tp_operador = models.FloatField(blank=True, null=True)
    cd_tela = models.CharField(max_length=20, blank=True, null=True)
    dt_registro = models.DateField(blank=True, null=True)
    cd_operador_cadastro = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_controle_acesso_vida_imagem'


class AuConvenio(models.Model):
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_pessoa = models.IntegerField(blank=True, null=True)
    cd_tipo_convenio = models.IntegerField(blank=True, null=True)
    fl_cobra_honorario = models.CharField(max_length=1, blank=True, null=True)
    fl_remessa = models.CharField(max_length=1, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    fl_tipo = models.CharField(max_length=1, blank=True, null=True)
    fl_enviar_titulo_finpac = models.CharField(max_length=1, blank=True, null=True)
    vl_lim_lib_mat_med = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    pc_desconto_uco = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    fl_hr_exp_cons_emerg = models.CharField(max_length=1, blank=True, null=True)
    fl_cbhpm_convenio = models.CharField(max_length=1, blank=True, null=True)
    hr_encerra_atend_ambulat = models.DateField(blank=True, null=True)
    fl_inclui_exame_lab_cta = models.CharField(max_length=1, blank=True, null=True)
    cd_operadora_saude = models.FloatField(blank=True, null=True)
    fl_paga_honorario_esp = models.CharField(max_length=1, blank=True, null=True)
    qtd_max_dias_atend = models.IntegerField(blank=True, null=True)
    cd_mat_geral_tiss = models.FloatField(blank=True, null=True)
    cd_med_geral_tiss = models.FloatField(blank=True, null=True)
    cd_opme_geral_tiss = models.FloatField(blank=True, null=True)
    cd_taxa_geral_tiss = models.FloatField(blank=True, null=True)
    fl_inc_reg_tiss = models.CharField(max_length=1, blank=True, null=True)
    hr_inic_especial = models.IntegerField(blank=True, null=True)
    hr_fim_especial = models.IntegerField(blank=True, null=True)
    fl_dia_enc_especial = models.CharField(max_length=1, blank=True, null=True)
    qt_dias_cons_retorno = models.FloatField(blank=True, null=True)
    nm_path_logotipo = models.CharField(max_length=80, blank=True, null=True)
    ds_resumo_contrato = models.CharField(max_length=1000, blank=True, null=True)
    fl_convenio_pacote_atend = models.CharField(max_length=1, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    fl_realiza_cons_eletiva = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_convenio'


class AuConvenioPagador(models.Model):
    cd_acao = models.NullBooleanField()
    cd_convenio_pagador = models.NullBooleanField()
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_convenio_base = models.IntegerField(blank=True, null=True)
    cd_plano_base = models.IntegerField(blank=True, null=True)
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_plano = models.IntegerField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    dt_validade = models.DateField(blank=True, null=True)
    cd_tabela_proced = models.IntegerField(blank=True, null=True)
    pc_desconto_proced = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_tabela_taxa = models.IntegerField(blank=True, null=True)
    pc_desconto_taxa = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_tabela_mat_med = models.IntegerField(blank=True, null=True)
    pc_desconto_mat_med = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_desconto = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_tabela_medicamento = models.IntegerField(blank=True, null=True)
    pc_desconto_medicamento = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_um_proced = models.IntegerField(blank=True, null=True)
    cd_um_taxa = models.IntegerField(blank=True, null=True)
    cd_um_mat_med = models.IntegerField(blank=True, null=True)
    cd_um_medicamento = models.IntegerField(blank=True, null=True)
    cd_categoria = models.CharField(max_length=1, blank=True, null=True)
    cd_franquia = models.CharField(max_length=2, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    pc_acrescimo_taxa = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_acrescimo_mat_med = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_acrescimo_medicamento = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_convenio_pagador'


class AuCotacao(models.Model):
    cd_acao = models.NullBooleanField()
    cd_cotacao = models.FloatField(blank=True, null=True)
    cd_fornecedor = models.FloatField(blank=True, null=True)
    nm_forma_pagamento = models.CharField(max_length=20, blank=True, null=True)
    cd_condicao_entrega = models.CharField(max_length=3, blank=True, null=True)
    qt_dias_validade = models.IntegerField(blank=True, null=True)
    qt_dias_entrega = models.IntegerField(blank=True, null=True)
    nm_observacao = models.CharField(max_length=60, blank=True, null=True)
    pc_icms = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_cotacao'


class AuDataCheckMedprev(models.Model):
    cd_id = models.FloatField(blank=True, null=True)
    cd_programa = models.FloatField(blank=True, null=True)
    fl_sexo = models.CharField(max_length=2, blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_metodo_realizado = models.FloatField(blank=True, null=True)
    cd_parametro_referencia = models.FloatField(blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    fl_tipo_valor = models.CharField(max_length=1, blank=True, null=True)
    cd_referencia = models.CharField(max_length=1, blank=True, null=True)
    ds_intervalo1 = models.CharField(max_length=50, blank=True, null=True)
    ds_intervalo2 = models.CharField(max_length=50, blank=True, null=True)
    nu_ig_inicio = models.FloatField(blank=True, null=True)
    nu_ig_fim = models.FloatField(blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    dt_fim = models.DateField(blank=True, null=True)
    cd_ref = models.FloatField(blank=True, null=True)
    cd_proced_param_referencia = models.FloatField(blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)
    qt_idade_inicial = models.FloatField(blank=True, null=True)
    qt_idade_final = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)
    ds_alterado = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_data_check_medprev'


class AuDataCheckUnidade(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    dt_operacao = models.DateField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    dt_ultimo_processamento = models.DateField(blank=True, null=True)
    nu_dias = models.FloatField(blank=True, null=True)
    nm_operador_audit = models.CharField(max_length=10, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_data_check_unidade'


class AuDevolucaoProntuario(models.Model):
    cd_devolucao_prontuario = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    dt_envio = models.DateField(blank=True, null=True)
    dt_recebimento = models.DateField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_tipo_devolucao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_devolucao_prontuario'


class AuDiagnosticoExame(models.Model):
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    nu_seq_diagnostico = models.IntegerField(blank=True, null=True)
    cd_modelo_diagnostico = models.IntegerField(blank=True, null=True)
    ds_diagnostico_exame = models.CharField(max_length=2000, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_diagnostico_exame'


class AuDietaPaciente(models.Model):
    cd_atendimento = models.IntegerField()
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem_prescricao = models.IntegerField()
    cd_ordem_dieta = models.IntegerField()
    cd_dieta = models.IntegerField()
    dt_prescricao_dieta = models.DateField()
    dt_inicial = models.DateField()
    dt_final = models.DateField(blank=True, null=True)
    cd_medico = models.IntegerField(blank=True, null=True)
    cd_unidade_usual = models.CharField(max_length=2)
    nu_frequencia = models.IntegerField(blank=True, null=True)
    qt_dieta = models.IntegerField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=120, blank=True, null=True)
    cd_tipo_acesso = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    hr_inicio_uso = models.IntegerField(blank=True, null=True)
    cd_profissional_prescreve = models.IntegerField(blank=True, null=True)
    cd_profissional_valida = models.IntegerField(blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    fl_bomba_infusao = models.CharField(max_length=1, blank=True, null=True)
    qt_gotejamento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.IntegerField(blank=True, null=True)
    qt_tempo_gotej = models.IntegerField(blank=True, null=True)
    cd_unidade_gotej = models.CharField(max_length=2, blank=True, null=True)
    fl_rotina_rg = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.IntegerField(blank=True, null=True)
    dt_hr_suspensao = models.DateField(blank=True, null=True)
    fl_enterofix = models.CharField(max_length=1, blank=True, null=True)
    fl_equipo_bomba = models.CharField(max_length=1, blank=True, null=True)
    id_session = models.CharField(max_length=20, blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)
    dt_acao = models.DateTimeField(blank=True, null=True)
    dt_validacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_dieta_paciente'


class AuDigitalMotivoAutoriza(models.Model):
    ds_motivo_autoriza = models.CharField(max_length=50, blank=True, null=True)
    dt_autoriza = models.DateField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    fl_digital_pendente = models.CharField(max_length=1, blank=True, null=True)
    ds_justificativa = models.CharField(max_length=256, blank=True, null=True)
    nm_autorizador = models.CharField(max_length=10, blank=True, null=True)
    nm_liberador = models.CharField(max_length=10, blank=True, null=True)
    dt_liberacao = models.DateField(blank=True, null=True)
    fl_face_pendente = models.CharField(max_length=1, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_digital_motivo_autoriza'


class AuEmprestimo(models.Model):
    cd_acao = models.NullBooleanField()
    cd_emprestimo = models.IntegerField(blank=True, null=True)
    cd_lancamento = models.IntegerField(blank=True, null=True)
    dt_lancamento = models.DateField(blank=True, null=True)
    cd_empresa = models.IntegerField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    qt_material = models.DecimalField(max_digits=10, decimal_places=1, blank=True, null=True)
    vl_material = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_material_um = models.FloatField(blank=True, null=True)
    nm_mensagem = models.CharField(max_length=60, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_emprestimo'


class AuEmprestimoTroca(models.Model):
    cd_acao = models.NullBooleanField()
    nu_protocolo = models.IntegerField()
    cd_setor_origem = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_destino = models.CharField(max_length=6, blank=True, null=True)
    cd_usuario_origem = models.CharField(max_length=10, blank=True, null=True)
    cd_usuario_destino = models.CharField(max_length=10, blank=True, null=True)
    nm_usuario_destino = models.CharField(max_length=35, blank=True, null=True)
    dt_emprestimo = models.DateField(blank=True, null=True)
    dt_devolucao = models.DateField(blank=True, null=True)
    dt_troca = models.DateField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    ds_observacao = models.CharField(max_length=200, blank=True, null=True)
    fl_situacao = models.CharField(max_length=1, blank=True, null=True)
    cd_fornec_origem = models.FloatField(blank=True, null=True)
    cd_fornec_destino = models.FloatField(blank=True, null=True)
    ds_observacao_dev = models.CharField(max_length=200, blank=True, null=True)
    ds_observacao_troca = models.CharField(max_length=200, blank=True, null=True)
    nm_usuario_origem = models.CharField(max_length=35, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    fl_tipo = models.CharField(max_length=1, blank=True, null=True)
    nu_protocolo_refer = models.IntegerField(blank=True, null=True)
    nm_usuario_autorizador = models.CharField(max_length=30, blank=True, null=True)
    dt_autorizacao = models.DateField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_emprestimo_troca'


class AuEnderecoPessoa(models.Model):
    cd_pessoa = models.FloatField(blank=True, null=True)
    nu_endereco = models.IntegerField(blank=True, null=True)
    cd_cep_endereco = models.CharField(max_length=8, blank=True, null=True)
    nm_cidade_endereco = models.CharField(max_length=60, blank=True, null=True)
    cd_uf_endereco = models.CharField(max_length=2, blank=True, null=True)
    cd_tipo_logradouro = models.CharField(max_length=10, blank=True, null=True)
    nm_rua_endereco = models.CharField(max_length=60, blank=True, null=True)
    nm_bairro_endereco = models.CharField(max_length=60, blank=True, null=True)
    ds_compl_enderero = models.CharField(max_length=60, blank=True, null=True)
    fl_tipo_endereco = models.CharField(max_length=1, blank=True, null=True)
    fl_ender_cobranca = models.CharField(max_length=1, blank=True, null=True)
    nu_telefone = models.CharField(max_length=10, blank=True, null=True)
    nu_ramal = models.CharField(max_length=4, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_endereco_pessoa'


class AuEnvioEmailAutorizacao(models.Model):
    cd_envio_email_autorizacao = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_setor = models.FloatField(blank=True, null=True)
    ds_assunto = models.CharField(max_length=100, blank=True, null=True)
    dt_envio = models.DateField(blank=True, null=True)
    ds_corpo_envio = models.CharField(max_length=1000, blank=True, null=True)
    dt_recebimento = models.DateField(blank=True, null=True)
    ds_corpo_recebimento = models.CharField(max_length=1000, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_envio_email_autorizacao'


class AuEspecialidadeProfissional(models.Model):
    cd_profissional = models.IntegerField(blank=True, null=True)
    cd_especialidade = models.IntegerField(blank=True, null=True)
    fl_esp_principal = models.CharField(max_length=1, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_especialidade_profissional'


class AuEstoqFinOncoHist(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_unid = models.FloatField(blank=True, null=True)
    prc_mat_med_unid = models.FloatField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_setor_controle = models.CharField(max_length=6, blank=True, null=True)
    anomes = models.CharField(max_length=6, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    nm_material = models.CharField(max_length=45, blank=True, null=True)
    qt_estoque_final = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_estoq_fin_onco_hist'


class AuEstoqIniOncoHist(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_unid = models.FloatField(blank=True, null=True)
    prc_mat_med_unid = models.FloatField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_setor_controle = models.CharField(max_length=6, blank=True, null=True)
    anomes = models.CharField(max_length=6, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    nm_material = models.CharField(max_length=45, blank=True, null=True)
    qt_estoque_inicial = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_estoq_ini_onco_hist'


class AuExameLabApoio(models.Model):
    cd_acao = models.NullBooleanField()
    cd_mnemonico_exame = models.CharField(max_length=20, blank=True, null=True)
    cd_laboratorio_apoio = models.IntegerField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    ds_exame = models.CharField(max_length=100, blank=True, null=True)
    ds_origem_admissivel = models.CharField(max_length=60, blank=True, null=True)
    ds_inf_comple = models.CharField(max_length=100, blank=True, null=True)
    fl_em_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_metodo_realizado = models.FloatField(blank=True, null=True)
    fl_libera_bioquimico = models.CharField(max_length=1, blank=True, null=True)
    fl_libera_automatico = models.CharField(max_length=1, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_grupo_alergeno = models.IntegerField(blank=True, null=True)
    cd_perfil = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_exame_lab_apoio'


class AuExameMaterialLabApoio(models.Model):
    cd_acao = models.NullBooleanField()
    cd_laboratorio_apoio = models.IntegerField(blank=True, null=True)
    cd_mnemonico_exame = models.CharField(max_length=20, blank=True, null=True)
    cd_mnemonico_mat = models.CharField(max_length=20, blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    vl_exame = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_exame_material_lab_apoio'


class AuExameSolicitadoSa(models.Model):
    cd_usuario_autorizou = models.CharField(max_length=10, blank=True, null=True)
    ds_just_supervisor = models.CharField(max_length=2000, blank=True, null=True)
    fl_restricao = models.CharField(max_length=1, blank=True, null=True)
    fl_exame_cancelado = models.CharField(max_length=1, blank=True, null=True)
    nu_pedido = models.BigIntegerField(blank=True, null=True)
    dt_pedido = models.DateField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_senha = models.CharField(max_length=20, blank=True, null=True)
    cd_pessoa_solic = models.FloatField(blank=True, null=True)
    fl_exame_setor = models.CharField(max_length=1, blank=True, null=True)
    ds_justificativa = models.CharField(max_length=4000, blank=True, null=True)
    nu_atendimento_hapvida = models.CharField(max_length=14, blank=True, null=True)
    cd_usuario_coletou = models.CharField(max_length=10, blank=True, null=True)
    dt_usuario_coletou = models.DateField(blank=True, null=True)
    cd_restricao = models.FloatField(blank=True, null=True)
    dt_usuario_autorizou = models.DateField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)
    fl_lado_membro = models.CharField(max_length=1, blank=True, null=True)
    cd_senha_master = models.IntegerField(blank=True, null=True)
    cd_exame = models.IntegerField(blank=True, null=True)
    cd_paciente = models.IntegerField(blank=True, null=True)
    dt_atendimento = models.DateField(blank=True, null=True)
    cd_grupo_atendimento = models.IntegerField(blank=True, null=True)
    cd_local_atendimento = models.IntegerField(blank=True, null=True)
    cd_senha_atendimento = models.IntegerField(blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    qt_exames = models.IntegerField(blank=True, null=True)
    nu_guia = models.CharField(max_length=15, blank=True, null=True)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)
    dt_importacao = models.DateField(blank=True, null=True)
    fl_exame_impresso = models.CharField(max_length=1, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_prioridade = models.FloatField(blank=True, null=True)
    fl_solicitou_laudo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_exame_solicitado_sa'


class AuExcecaoProdmedProced(models.Model):
    cd_medico = models.FloatField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_tipo_produtividade = models.NullBooleanField()
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_tabela_procedimento = models.IntegerField(blank=True, null=True)
    cd_um_proc = models.IntegerField(blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_excecao_prodmed_proced'


class AuFatOncoHist(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_estoq = models.FloatField(blank=True, null=True)
    prc_mat_med_estoq = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_ocorrencia = models.FloatField(blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    cd_ordem_cmd = models.FloatField(blank=True, null=True)
    cd_ordem_m = models.FloatField(blank=True, null=True)
    dt_comanda = models.DateField(blank=True, null=True)
    cd_mat_med = models.FloatField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_paciente = models.FloatField(blank=True, null=True)
    cd_pessoa_hosp = models.FloatField(blank=True, null=True)
    cd_pessoa_hap = models.FloatField(blank=True, null=True)
    nm_pessoa = models.CharField(max_length=45, blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    nome_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_fat_onco_hist'


class AuFatura(models.Model):
    dt_lancamento = models.DateField(blank=True, null=True)
    cd_usuario = models.FloatField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    cd_fatura = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_fatura'


class AuFichaAnestParamAnest(models.Model):
    id_ficha_anest_param_anest_au = models.IntegerField(primary_key=True)
    cd_acao = models.IntegerField()
    dt_audit = models.DateField()
    cd_terminal = models.CharField(max_length=255)
    cd_operador = models.CharField(max_length=255)
    id_ficha_anest_param_anest = models.IntegerField()
    id_ficha_anestesica_app = models.IntegerField()
    nm_ult_operador = models.CharField(max_length=255)
    id_ficha_anestesica_asa = models.IntegerField(blank=True, null=True)
    id_ficha_anest_mallampati = models.IntegerField(blank=True, null=True)
    id_ficha_anest_tipo_anest = models.IntegerField(blank=True, null=True)
    nu_monitorizacao_hora = models.IntegerField(blank=True, null=True)
    nu_monitorizacao_minuto = models.IntegerField(blank=True, null=True)
    nu_monitorizacao_intervalo = models.IntegerField(blank=True, null=True)
    fl_emergencia_urgencia = models.CharField(max_length=1, blank=True, null=True)
    fl_via_aerea_dificil = models.CharField(max_length=1, blank=True, null=True)
    ds_ficha_anestesica = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_ficha_anest_param_anest'


class AuFichaAnestPreAdmissao(models.Model):
    id_ficha_anest_pre_admis_au = models.IntegerField(primary_key=True)
    cd_acao = models.IntegerField()
    dt_audit = models.DateField()
    cd_terminal = models.CharField(max_length=255)
    cd_operador = models.CharField(max_length=255)
    id_ficha_anest_pre_admissao = models.IntegerField()
    id_ficha_anestesica_app = models.IntegerField()
    nm_ult_operador = models.CharField(max_length=255)
    nu_peso = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    nu_altura = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    nu_pa_sistolica = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    nu_pa_diastolica = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    nu_freq_cardiaca = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    nu_freq_respiratoria = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    nu_temperatura = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_ficha_anest_pre_admissao'


class AuFormsReports(models.Model):
    nm_objeto = models.CharField(max_length=20, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    ip_maquina = models.CharField(max_length=60, blank=True, null=True)
    fl_web = models.CharField(max_length=1, blank=True, null=True)
    ds_so = models.CharField(max_length=512, blank=True, null=True)
    ds_username = models.CharField(max_length=512, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_forms_reports'


class AuFormularioAtendimento(models.Model):
    cd_formulario_atendimento = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_formulario_t43j5_a = models.FloatField(blank=True, null=True)
    cd_formulario_vigencia = models.FloatField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    ds_observacao = models.CharField(max_length=300, blank=True, null=True)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)
    dt_formulario = models.DateField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_tipo_devolucao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_formulario_atendimento'


class AuFormularioT43J5A(models.Model):
    cd_formulario_t43j5_a = models.FloatField(blank=True, null=True)
    ds_formulario_t43j5_a = models.CharField(max_length=300, blank=True, null=True)
    cd_formulario_vigencia = models.FloatField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_formulario_t43j5_a'


class AuFormularioVigencia(models.Model):
    cd_formulario_vigencia = models.FloatField(blank=True, null=True)
    dt_inicio_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_tipo_devolucao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_formulario_vigencia'


class AuGrupoAlergeno(models.Model):
    cd_acao = models.NullBooleanField()
    cd_grupo_alergeno = models.IntegerField(blank=True, null=True)
    nm_grupo_alergeno = models.CharField(max_length=45, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_grupo_alergeno'


class AuGrupoAtendAltoCusto(models.Model):
    cd_acao = models.NullBooleanField()
    cd_local_atendimento = models.IntegerField(blank=True, null=True)
    cd_grupo_atendimento = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_grupo_atend_alto_custo'


class AuGrupoAtendimentoSa(models.Model):
    cd_grupo_atendimento = models.IntegerField(blank=True, null=True)
    cd_local_atendimento = models.IntegerField(blank=True, null=True)
    ds_grupo_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_cor_atendimento = models.IntegerField(blank=True, null=True)
    dt_atualizacao = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=20, blank=True, null=True)
    cd_tipo_atendimento = models.IntegerField(blank=True, null=True)
    cd_clinica = models.IntegerField(blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    nu_idade_min = models.IntegerField(blank=True, null=True)
    nu_idade_max = models.IntegerField(blank=True, null=True)
    cd_grupo_procedimento = models.FloatField(blank=True, null=True)
    cd_setor_grupo = models.CharField(max_length=6, blank=True, null=True)
    qt_atend_hora = models.IntegerField(blank=True, null=True)
    fl_possui_triagem = models.CharField(max_length=1, blank=True, null=True)
    hr_inicio_triagem = models.IntegerField(blank=True, null=True)
    hr_fim_triagem = models.IntegerField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    fl_classe_grupo = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'au_grupo_atendimento_sa'


class AuGrupoFrasco(models.Model):
    cd_acao = models.NullBooleanField()
    cd_grupo_frasco = models.IntegerField(blank=True, null=True)
    nm_grupo_frasco = models.CharField(max_length=45, blank=True, null=True)
    qt_frasco = models.IntegerField(blank=True, null=True)
    qt_amostras = models.IntegerField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_grupo_frasco'


class AuGrupoFrascoProcedimento(models.Model):
    cd_acao = models.NullBooleanField()
    cd_grupo_frasco = models.IntegerField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    nm_operador = models.CharField(max_length=8, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_grupo_frasco_procedimento'


class AuGrupoProcSalaCtrl(models.Model):
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_grupo_proc_sala_ctrl = models.FloatField(blank=True, null=True)
    cd_grupo_procedimento = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_grupo_proc_sala_ctrl'


class AuGrupoProduto(models.Model):
    cd_acao = models.NullBooleanField()
    cd_grupo_produto = models.IntegerField(blank=True, null=True)
    nm_grupo_produto = models.CharField(max_length=45, blank=True, null=True)
    volume_frasco = models.CharField(max_length=15, blank=True, null=True)
    sigla_setor = models.CharField(max_length=3, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    empresa = models.CharField(max_length=30, blank=True, null=True)
    extensao = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_grupo_produto'


class AuGuia(models.Model):
    fl_tipo_exame = models.FloatField(blank=True, null=True)
    nu_gab = models.CharField(max_length=30, blank=True, null=True)
    fl_tipo_gab = models.CharField(max_length=1, blank=True, null=True)
    cd_restricao_cart_hapvida = models.FloatField(blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    nu_guia = models.CharField(max_length=15, blank=True, null=True)
    dt_autorizacao_guia = models.DateField(blank=True, null=True)
    qt_dias_autorizado = models.IntegerField(blank=True, null=True)
    cd_convenio_pagador = models.NullBooleanField()
    cd_cobranca = models.CharField(max_length=15, blank=True, null=True)
    cd_pessoa_realiza = models.FloatField(blank=True, null=True)
    cd_ocorrencia_ocupa = models.IntegerField(blank=True, null=True)
    cd_setor_origem = models.CharField(max_length=6, blank=True, null=True)
    cd_ocorrencia_pedido = models.IntegerField(blank=True, null=True)
    fl_realizar = models.CharField(max_length=1, blank=True, null=True)
    fl_day_clinic = models.CharField(max_length=1, blank=True, null=True)
    dt_prorrogacao_negada = models.DateField(blank=True, null=True)
    hr_prorrogacao_negada = models.IntegerField(blank=True, null=True)
    cd_auditor = models.FloatField(blank=True, null=True)
    hr_ini_autorizacao = models.IntegerField(blank=True, null=True)
    dt_registro_guia = models.DateField(blank=True, null=True)
    cd_clinica_citologia = models.FloatField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_guia'


class AuIndHospitalarUnidade(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_unidade = models.FloatField(blank=True, null=True)
    origem = models.FloatField(blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)
    dt_modificacao = models.DateField(blank=True, null=True)
    cd_usuario_modificacao = models.CharField(max_length=12, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_ind_hospitalar_unidade'


class AuIndicadorHospitalar(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    nm_relatorio = models.CharField(max_length=20, blank=True, null=True)
    fl_qualiss = models.CharField(max_length=1, blank=True, null=True)
    cd_sigla_indicador = models.CharField(max_length=10, blank=True, null=True)
    cd_tela_inclusao = models.CharField(max_length=16, blank=True, null=True)
    cd_local_indicador = models.FloatField(blank=True, null=True)
    cd_indicador_hospitalar = models.FloatField(blank=True, null=True)
    ds_indicador_hospitalar = models.CharField(max_length=100, blank=True, null=True)
    cd_item_indicador_num = models.CharField(max_length=8, blank=True, null=True)
    cd_item_indicador_den = models.CharField(max_length=8, blank=True, null=True)
    fl_ccih = models.CharField(max_length=1, blank=True, null=True)
    nm_tela = models.CharField(max_length=20, blank=True, null=True)
    multiplicador = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_indicador_hospitalar'


class AuIndicadorHospitalarItem(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_indicador_hospitalar = models.FloatField(blank=True, null=True)
    cd_filial = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade = models.FloatField(blank=True, null=True)
    ano = models.FloatField(blank=True, null=True)
    mes = models.FloatField(blank=True, null=True)
    meta = models.FloatField(blank=True, null=True)
    variacao = models.FloatField(blank=True, null=True)
    dt_modificacao = models.DateField(blank=True, null=True)
    cd_usuario_modificacao = models.CharField(max_length=12, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_indicador_hospitalar_item'


class AuInstrumento(models.Model):
    cd_acao = models.NullBooleanField()
    instrumento = models.CharField(max_length=6, blank=True, null=True)
    nm_instrumento = models.CharField(max_length=40, blank=True, null=True)
    caminho = models.CharField(max_length=255, blank=True, null=True)
    formato_arquivo = models.CharField(max_length=8, blank=True, null=True)
    extensao = models.CharField(max_length=3, blank=True, null=True)
    ultimo_arquivo = models.IntegerField(blank=True, null=True)
    faixa = models.IntegerField(blank=True, null=True)
    diretorio_transferencia = models.CharField(max_length=255, blank=True, null=True)
    fl_libera_automatico = models.CharField(max_length=1, blank=True, null=True)
    ds_diretorio_geracao = models.CharField(max_length=255, blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    directories_filial = models.CharField(max_length=30, blank=True, null=True)
    path_filial = models.CharField(max_length=255, blank=True, null=True)
    directories_backuplis = models.CharField(max_length=255, blank=True, null=True)
    fl_job = models.CharField(max_length=1, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    empresa = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_instrumento'


class AuItemAvaliacao(models.Model):
    cd_acao = models.IntegerField(blank=True, null=True)
    cd_avaliacao = models.IntegerField(blank=True, null=True)
    cd_nivel_avaliacao = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    nm_item_avaliacao = models.CharField(max_length=160, blank=True, null=True)
    cd_componente_avaliacao = models.IntegerField(blank=True, null=True)
    cd_avaliacao_referenciada = models.IntegerField(blank=True, null=True)
    ds_formula = models.CharField(max_length=2000, blank=True, null=True)
    fl_tipo_atributo = models.CharField(max_length=20, blank=True, null=True)
    ds_instrucao = models.CharField(max_length=2000, blank=True, null=True)
    nu_ordem_apresentacao = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    id_componente = models.CharField(max_length=2000, blank=True, null=True)
    cd_ordem_pai = models.IntegerField(blank=True, null=True)
    fl_formula = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_valor = models.CharField(max_length=20, blank=True, null=True)
    cd_tipo_informacao = models.IntegerField(blank=True, null=True)
    ds_item_avaliacao = models.CharField(max_length=240, blank=True, null=True)
    fl_tipo_formula = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade_usual = models.CharField(max_length=2, blank=True, null=True)
    ds_valor_parametro = models.CharField(max_length=2000, blank=True, null=True)
    vl_parametro_minimo_h = models.IntegerField(blank=True, null=True)
    vl_parametro_maximo_h = models.IntegerField(blank=True, null=True)
    vl_parametro_minimo_m = models.IntegerField(blank=True, null=True)
    vl_parametro_maximo_m = models.IntegerField(blank=True, null=True)
    vl_parametro_minimo_a = models.IntegerField(blank=True, null=True)
    vl_parametro_maximo_a = models.IntegerField(blank=True, null=True)
    vl_parametro_minimo_c = models.IntegerField(blank=True, null=True)
    vl_parametro_maximo_c = models.IntegerField(blank=True, null=True)
    vl_parametro_minimo_rn = models.IntegerField(blank=True, null=True)
    vl_parametro_maximo_rn = models.IntegerField(blank=True, null=True)
    vl_parametro_minimo_lactente = models.IntegerField(blank=True, null=True)
    vl_parametro_maximo_lactente = models.IntegerField(blank=True, null=True)
    fl_unidade_tempo = models.CharField(max_length=1, blank=True, null=True)
    qt_idade_inicial = models.IntegerField(blank=True, null=True)
    qt_idade_final = models.IntegerField(blank=True, null=True)
    vl_formula = models.CharField(max_length=240, blank=True, null=True)
    qt_decimal = models.NullBooleanField()
    ds_valida_item = models.CharField(max_length=2000, blank=True, null=True)
    ds_query_item = models.CharField(max_length=2000, blank=True, null=True)
    ds_mensagem_item = models.CharField(max_length=500, blank=True, null=True)
    fl_formulario = models.CharField(max_length=1, blank=True, null=True)
    fl_mutiplo_valor = models.CharField(max_length=1, blank=True, null=True)
    cd_grupo_cid10 = models.CharField(max_length=4000, blank=True, null=True)
    cd_subgrupo_cid10 = models.CharField(max_length=4000, blank=True, null=True)
    cd_categoria_cid10 = models.CharField(max_length=4000, blank=True, null=True)
    fl_tipo_grafico = models.CharField(max_length=1, blank=True, null=True)
    cd_grupo_nanda = models.CharField(max_length=4000, blank=True, null=True)
    cd_nanda = models.CharField(max_length=4000, blank=True, null=True)
    fl_resultado_acumulado = models.CharField(max_length=1, blank=True, null=True)
    sinal_balanco = models.CharField(max_length=1, blank=True, null=True)
    nm_formulario = models.CharField(max_length=30, blank=True, null=True)
    ds_ref_retorno_formulario = models.CharField(max_length=60, blank=True, null=True)
    fl_obrigatorio = models.CharField(max_length=1, blank=True, null=True)
    cd_tipo_solicitacao = models.IntegerField(blank=True, null=True)
    cd_aval_referenciada = models.IntegerField(blank=True, null=True)
    fl_tipo_alerta_intervalo = models.NullBooleanField()
    fl_bloqueia_fora_intervalo = models.CharField(max_length=1, blank=True, null=True)
    ds_mensagem_fora_intervalo = models.CharField(max_length=2000, blank=True, null=True)
    fl_herda_valor = models.CharField(max_length=1, blank=True, null=True)
    fl_abrangencia_heranca = models.CharField(max_length=1, blank=True, null=True)
    fl_ocorrencia_heranca = models.CharField(max_length=1, blank=True, null=True)
    ds_sql_exec = models.CharField(max_length=4000, blank=True, null=True)
    fl_sql_exec_acao = models.CharField(max_length=1, blank=True, null=True)
    cd_index_nm = models.IntegerField(blank=True, null=True)
    fl_padrao = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_aprazamento_padrao = models.CharField(max_length=1, blank=True, null=True)
    qt_frequencia_padrao = models.IntegerField(blank=True, null=True)
    fl_expandir = models.CharField(max_length=1, blank=True, null=True)
    simbolo = models.CharField(max_length=3, blank=True, null=True)
    fl_mostra = models.CharField(max_length=1, blank=True, null=True)
    fl_sql_exec_acao_unit = models.CharField(max_length=1, blank=True, null=True)
    fl_copia = models.CharField(max_length=1, blank=True, null=True)
    fl_realca = models.CharField(max_length=50, blank=True, null=True)
    nm_itens_exclusivos = models.CharField(max_length=50, blank=True, null=True)
    fl_nao_mostrar_result_se_check = models.CharField(max_length=1, blank=True, null=True)
    fl_nao_imprime = models.CharField(max_length=1, blank=True, null=True)
    fl_coluna_matriz = models.CharField(max_length=1, blank=True, null=True)
    fl_obrigatorio_max = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_item_avaliacao'


class AuItemDevolucao(models.Model):
    cd_acao = models.NullBooleanField()
    cd_devolucao = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    dt_validade = models.DateField(blank=True, null=True)
    qt_material = models.FloatField(blank=True, null=True)
    vl_material = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_material_um = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_item_devolucao'


class AuItemGrupoProcedimento(models.Model):
    cd_acao = models.NullBooleanField()
    cd_grupo_produto = models.IntegerField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    abreviatura = models.CharField(max_length=5, blank=True, null=True)
    fl_senha_coletor = models.CharField(max_length=1, blank=True, null=True)
    fl_libera_automatico = models.CharField(max_length=1, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_item_grupo_procedimento'


class AuItemGrupoProdutoUnid(models.Model):
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    cd_grupo_produto = models.FloatField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_item_grupo_produto_unid'


class AuItemKitAnestesiaLote(models.Model):
    cd_acao_audit = models.FloatField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    id_kit_anest = models.CharField(max_length=10, blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_material = models.IntegerField(blank=True, null=True)
    qt_material = models.FloatField(blank=True, null=True)
    cd_lote = models.CharField(max_length=20, blank=True, null=True)
    dt_validade_lote = models.DateField(blank=True, null=True)
    cd_codigo_barra = models.CharField(max_length=3000, blank=True, null=True)
    fl_material_devolvido = models.CharField(max_length=1, blank=True, null=True)
    qtd_material_devolvido = models.FloatField(blank=True, null=True)
    cd_setor_consignado = models.CharField(max_length=6, blank=True, null=True)
    cd_material_original = models.IntegerField(blank=True, null=True)
    qt_material_original = models.FloatField(blank=True, null=True)
    qtd_padrao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_item_kit_anestesia_lote'


class AuItemMatMed(models.Model):
    cd_mat_med = models.FloatField(blank=True, null=True)
    cd_item_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade = models.CharField(max_length=2, blank=True, null=True)
    qt_unidade = models.FloatField(blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    fl_periodo = models.CharField(max_length=1, blank=True, null=True)
    ds_referencia_regra = models.CharField(max_length=120, blank=True, null=True)
    qt_limite_por_prescricao = models.IntegerField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_item_mat_med'


class AuItemNota(models.Model):
    cd_acao = models.NullBooleanField()
    cd_nota = models.IntegerField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_setor_entrada = models.CharField(max_length=6, blank=True, null=True)
    dt_validade = models.DateField(blank=True, null=True)
    qt_material = models.FloatField(blank=True, null=True)
    vl_material = models.FloatField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    vl_ipi = models.FloatField(blank=True, null=True)
    vl_frete = models.FloatField(blank=True, null=True)
    vl_icms_retido = models.FloatField(blank=True, null=True)
    vl_diferenca_icms = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_item_nota'


class AuItemPedido(models.Model):
    cd_acao = models.NullBooleanField()
    cd_pedido = models.FloatField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    qt_de_embalagem = models.FloatField(blank=True, null=True)
    qt_por_embalagem = models.FloatField(blank=True, null=True)
    vl_por_embalagem = models.FloatField(blank=True, null=True)
    fl_pedido = models.NullBooleanField()
    qt_saldo_pedido = models.FloatField(blank=True, null=True)
    vl_ipi = models.FloatField(blank=True, null=True)
    qt_material = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_item_pedido'


class AuItemProdutividadeMedica(models.Model):
    cd_produtividade = models.IntegerField(blank=True, null=True)
    cd_medico = models.FloatField(blank=True, null=True)
    cd_ocorrencia = models.FloatField(blank=True, null=True)
    cd_tipo_produtividade = models.IntegerField(blank=True, null=True)
    cd_grupo = models.IntegerField(blank=True, null=True)
    cd_produto = models.CharField(max_length=8, blank=True, null=True)
    cd_tipo_valor_fixo = models.FloatField(blank=True, null=True)
    qt_exames = models.FloatField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=255, blank=True, null=True)
    vl_movimento = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_saldo = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    cd_setor_origem = models.CharField(max_length=6, blank=True, null=True)
    cd_atendimento_proced = models.IntegerField(blank=True, null=True)
    cd_ocorrencia_proced = models.IntegerField(blank=True, null=True)
    cd_ordem_proced = models.IntegerField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_item_produtividade_medica'


class AuItemRestaurante(models.Model):
    cd_acao = models.NullBooleanField()
    cd_comanda_restaurante = models.CharField(max_length=8, blank=True, null=True)
    nu_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    vl_comanda = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    qt_comanda = models.IntegerField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_item_restaurante'


class AuKitAnestesiaLote(models.Model):
    cd_acao_audit = models.FloatField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    id_kit_anest = models.CharField(max_length=10, blank=True, null=True)
    id_kit_cirur = models.FloatField(blank=True, null=True)
    cd_requisicao = models.IntegerField(blank=True, null=True)
    tipo_kit = models.NullBooleanField()
    fl_kit_devolucao = models.CharField(max_length=1, blank=True, null=True)
    id_kit_anest_herdado = models.CharField(max_length=10, blank=True, null=True)
    fl_status = models.NullBooleanField()
    cd_setor_controle = models.CharField(max_length=6, blank=True, null=True)
    dt_menor_validade = models.DateField(blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    cd_agenda = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_pessoa_func_montou = models.FloatField(blank=True, null=True)
    cd_pessoa_func_recebeu_kit = models.FloatField(blank=True, null=True)
    fl_prenota_impressa = models.CharField(max_length=1, blank=True, null=True)
    fl_etiqueta_impressa = models.CharField(max_length=1, blank=True, null=True)
    cd_pessoa_func_devolveu_kit = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_kit_anestesia_lote'


class AuLaboratorioApoio(models.Model):
    cd_acao = models.NullBooleanField()
    cd_laboratorio_apoio = models.IntegerField(blank=True, null=True)
    nm_laboratorio_apoio = models.CharField(max_length=50, blank=True, null=True)
    nm_pessoa_contato = models.CharField(max_length=30, blank=True, null=True)
    nr_fone_contato = models.CharField(max_length=20, blank=True, null=True)
    ds_email_contato = models.CharField(max_length=20, blank=True, null=True)
    ds_versao_xml = models.CharField(max_length=1000, blank=True, null=True)
    cd_entidade = models.BigIntegerField(blank=True, null=True)
    ds_chave = models.CharField(max_length=16, blank=True, null=True)
    cd_laboratorio_convenio = models.CharField(max_length=20, blank=True, null=True)
    cd_protocolo_convenio = models.IntegerField(blank=True, null=True)
    ds_diretorio_envio = models.CharField(max_length=1000, blank=True, null=True)
    ds_diretorio_recepcao = models.CharField(max_length=1000, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    cd_profissional = models.IntegerField(blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)
    fl_tipolab = models.CharField(max_length=1, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    empresa = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_laboratorio_apoio'


class AuLaudoExameProcedimento(models.Model):
    cd_acao = models.NullBooleanField()
    cd_procedimento = models.CharField(max_length=8)
    cd_modelo_laudo = models.IntegerField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_laudo_exame_procedimento'


class AuLaudoPaciente(models.Model):
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_modelo_laudo = models.IntegerField(blank=True, null=True)
    ds_laudo_medico = models.TextField(blank=True, null=True)  # This field type is a guess.
    nm_exame = models.CharField(max_length=100, blank=True, null=True)
    cd_natureza_alt_laudo = models.FloatField(blank=True, null=True)
    ds_motivo_alt_laudo = models.CharField(max_length=100, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_medico_unidade = models.FloatField(blank=True, null=True)
    fl_queixa_principal = models.CharField(max_length=1, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_laudo_paciente'


class AuLaudoPacienteLibera(models.Model):
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    dt_status = models.DateField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_laudo_paciente_libera'


class AuLaudoParamFiltro(models.Model):
    fl_habilita_filtro = models.FloatField(blank=True, null=True)
    cd_profissional = models.IntegerField(blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    dt_inicial = models.DateField(blank=True, null=True)
    dt_final = models.DateField(blank=True, null=True)
    cd_tipo_atendimento = models.CharField(max_length=2, blank=True, null=True)
    fl_cr = models.FloatField(blank=True, null=True)
    fl_mg = models.FloatField(blank=True, null=True)
    fl_ct = models.FloatField(blank=True, null=True)
    fl_mr = models.FloatField(blank=True, null=True)
    fl_us = models.FloatField(blank=True, null=True)
    fl_es = models.FloatField(blank=True, null=True)
    fl_nm = models.FloatField(blank=True, null=True)
    fl_xa = models.FloatField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_laudo_param_filtro'


class AuLeitoAcomodacao(models.Model):
    cd_acao = models.NullBooleanField()
    cd_acomodacao = models.CharField(max_length=6, blank=True, null=True)
    cd_posto = models.CharField(max_length=6, blank=True, null=True)
    cd_classe_acomodacao = models.IntegerField(blank=True, null=True)
    nu_leito = models.IntegerField(blank=True, null=True)
    fl_ocupacao_acomodacao = models.CharField(max_length=1, blank=True, null=True)
    dt_ocupacao = models.DateField(blank=True, null=True)
    hr_ocupacao = models.IntegerField(blank=True, null=True)
    dt_prevista_liberacao = models.DateField(blank=True, null=True)
    hr_prevista_liberacao = models.IntegerField(blank=True, null=True)
    ds_observacoes_medicas = models.CharField(max_length=60, blank=True, null=True)
    cd_status = models.CharField(max_length=1, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_leito_acomodacao'


class AuLocalTotemSa(models.Model):
    ip_maquina = models.CharField(max_length=100, blank=True, null=True)
    cd_local_atendimento = models.FloatField(blank=True, null=True)
    nm_maquina = models.CharField(max_length=40, blank=True, null=True)
    user_totem = models.CharField(max_length=10, blank=True, null=True)
    fl_tipo_impressora = models.FloatField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_local_totem_sa'


class AuLoteLabFechamento(models.Model):
    cd_lote = models.FloatField()
    cd_laboratorio_apoio = models.IntegerField()
    dt_encerramento = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    nm_operador_audit = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_lote_lab_fechamento'


class AuLoteProtocolo(models.Model):
    cd_lote_protocolo = models.FloatField(blank=True, null=True)
    cd_lote = models.FloatField(blank=True, null=True)
    nu_pedido = models.FloatField(blank=True, null=True)
    dt_pedido = models.DateField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_lote_protocolo'


class AuLoteRast(models.Model):
    cd_lote = models.FloatField(blank=True, null=True)
    cd_empresa_rast = models.IntegerField(blank=True, null=True)
    cd_funcionario = models.IntegerField(blank=True, null=True)
    nm_funcionario = models.CharField(max_length=45, blank=True, null=True)
    nu_cpf = models.CharField(max_length=20, blank=True, null=True)
    nr_fone_contato = models.CharField(max_length=20, blank=True, null=True)
    dt_saida_lote = models.DateField(blank=True, null=True)
    cd_oper_entrega = models.CharField(max_length=10, blank=True, null=True)
    cd_setor_coleta = models.CharField(max_length=6, blank=True, null=True)
    qt_amostra_entrega = models.IntegerField(blank=True, null=True)
    dt_chegada_lote = models.DateField(blank=True, null=True)
    cd_oper_recebe = models.CharField(max_length=10, blank=True, null=True)
    cd_setor_recebe = models.CharField(max_length=6, blank=True, null=True)
    qt_amostra_recebe = models.IntegerField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    ds_observacao = models.CharField(max_length=1000, blank=True, null=True)
    dt_cancelamento = models.DateField(blank=True, null=True)
    cd_oper_cancela = models.CharField(max_length=10, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_lote_rast'


class AuMacroCid10(models.Model):
    cd_acao = models.NullBooleanField()
    cd_macrodiag_cid10 = models.IntegerField(blank=True, null=True)
    cid10 = models.CharField(max_length=4, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_macro_cid10'


class AuMacrodiagCid10(models.Model):
    cd_acao = models.NullBooleanField()
    cd_macrodiag_cid10 = models.IntegerField(blank=True, null=True)
    nm_macrodiag_cid10 = models.CharField(max_length=100, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_macrodiag_cid10'


class AuManipOncoHist(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_estoq = models.FloatField(blank=True, null=True)
    prc_mat_med_estoq = models.FloatField(blank=True, null=True)
    cd_requisicao = models.FloatField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_comanda = models.CharField(max_length=9, blank=True, null=True)
    dt_manipulacao = models.DateField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_paciente = models.FloatField(blank=True, null=True)
    cd_pessoa_hosp = models.FloatField(blank=True, null=True)
    cd_pessoa_hap = models.FloatField(blank=True, null=True)
    nm_pessoa = models.CharField(max_length=45, blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    nome_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_manip_onco_hist'


class AuMatMed(models.Model):
    cd_acao = models.NullBooleanField()
    cd_mat_med = models.FloatField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    cd_apresentacao = models.CharField(max_length=4, blank=True, null=True)
    cd_classificacao = models.IntegerField(blank=True, null=True)
    cd_unidade = models.CharField(max_length=2, blank=True, null=True)
    qt_conteudo = models.FloatField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_mat_med'


class AuMatMedImcompGrupoProc(models.Model):
    cd_acao_audit = models.FloatField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_mat_med = models.FloatField(blank=True, null=True)
    cd_param_grupo_proc = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_mat_med_imcomp_grupo_proc'


class AuMatMedImcompProcedPed(models.Model):
    cd_acao_audit = models.FloatField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_mat_med = models.FloatField(blank=True, null=True)
    cd_procedimento = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_mat_med_imcomp_proced_ped'


class AuMaterialConvenio(models.Model):
    cd_acao = models.NullBooleanField()
    cd_material = models.FloatField(blank=True, null=True)
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_plano_convenio = models.IntegerField(blank=True, null=True)
    fl_pagamento = models.CharField(max_length=1, blank=True, null=True)
    cd_material_convenio = models.FloatField(blank=True, null=True)
    nm_material_convenio = models.CharField(max_length=55, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_material_convenio'


class AuMaterialGasto(models.Model):
    cd_material = models.FloatField(blank=True, null=True)
    cd_mat_med = models.FloatField(blank=True, null=True)
    fl_tipo_gasto = models.IntegerField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_material_gasto'


class AuMaterialLabApoio(models.Model):
    cd_acao = models.NullBooleanField()
    cd_mnemonico_mat = models.CharField(max_length=20, blank=True, null=True)
    cd_laboratorio_apoio = models.IntegerField(blank=True, null=True)
    ds_material = models.CharField(max_length=20, blank=True, null=True)
    material_real = models.CharField(max_length=20, blank=True, null=True)
    conservante = models.CharField(max_length=20, blank=True, null=True)
    ds_inf_comple = models.CharField(max_length=60, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_mnemonico_exame = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_material_lab_apoio'


class AuMedicoFilial(models.Model):
    cd_empresa = models.FloatField(blank=True, null=True)
    cd_medico = models.FloatField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_medico_filial'


class AuMedicoFormaPagamento(models.Model):
    cd_acao_audit = models.FloatField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_medico_forma_pagamento = models.IntegerField(blank=True, null=True)
    cd_prestador_fisico = models.FloatField(blank=True, null=True)
    cd_prestador_juridico = models.FloatField(blank=True, null=True)
    cd_especialidade = models.IntegerField(blank=True, null=True)
    dt_inicio_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_forma_pagamento_medico = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_operacao = models.DateField(blank=True, null=True)
    id_pessoa_finpac = models.FloatField(blank=True, null=True)
    id_cc_finpac = models.FloatField(blank=True, null=True)
    id_pessoa_sap = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_medico_forma_pagamento'


class AuMetodoProcedimento(models.Model):
    cd_acao = models.NullBooleanField()
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_metodo_realizado = models.IntegerField(blank=True, null=True)
    cd_metodo_usual = models.CharField(max_length=1, blank=True, null=True)
    dt_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_laboratorio_apoio = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_metodo_procedimento'


class AuMetodoRealizadoFilial(models.Model):
    cd_acao = models.NullBooleanField()
    cd_metodo_realizado = models.IntegerField(blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_modificacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_metodo_realizado_filial'


class AuModeloPlanoTratFilial(models.Model):
    cd_modelo = models.IntegerField()
    cd_ocorrencia_filial = models.IntegerField()
    cd_filial = models.CharField(max_length=3)
    cd_grupo_atendimento = models.IntegerField(blank=True, null=True)
    cd_local_atendimento = models.IntegerField(blank=True, null=True)
    cd_classe_acomodacao = models.IntegerField(blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    fl_visita_obrigatoria = models.CharField(max_length=1, blank=True, null=True)
    fl_obriga_biometria = models.CharField(max_length=1, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=64, blank=True, null=True)
    id_session = models.CharField(max_length=30, blank=True, null=True)
    fl_reconhecimento_facial = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_modelo_plano_trat_filial'


class AuModeloPlanoTratamento(models.Model):
    cd_modelo = models.IntegerField(blank=True, null=True)
    ds_modelo = models.CharField(max_length=1000)
    nu_tempo_estimado = models.IntegerField(blank=True, null=True)
    fl_unidade_tempo = models.CharField(max_length=1, blank=True, null=True)
    ds_tratamento = models.CharField(max_length=1000, blank=True, null=True)
    fl_local_tratamento = models.CharField(max_length=1, blank=True, null=True)
    cd_diagnostico = models.IntegerField(blank=True, null=True)
    dt_ultima_modificacao = models.DateField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=1000, blank=True, null=True)
    cd_cid = models.CharField(max_length=4, blank=True, null=True)
    cd_mnemonico_modelo = models.CharField(max_length=50, blank=True, null=True)
    fl_tipo_modelo = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=64, blank=True, null=True)
    id_session = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_modelo_plano_tratamento'


class AuMovDoc(models.Model):
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_mov_doc = models.FloatField(blank=True, null=True)
    cd_atendimento_mov_doc = models.FloatField(blank=True, null=True)
    cd_tipo_doc_movimentacao = models.FloatField(blank=True, null=True)
    dt_movimentacao = models.DateField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    ds_observacao = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_mov_doc'


class AuMovimentacaoAntiga(models.Model):
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    lote = models.IntegerField(blank=True, null=True)
    prontuario = models.CharField(max_length=8, blank=True, null=True)
    dt_operacao_ini = models.DateField(blank=True, null=True)
    dt_operacao_fim = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_movimentacao_antiga'


class AuMovimentoConta(models.Model):
    dt_lancamento = models.DateField(blank=True, null=True)
    cd_usuario = models.FloatField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    cd_movimento_conta = models.FloatField(blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_um = models.IntegerField(blank=True, null=True)
    vl_movimento = models.FloatField(blank=True, null=True)
    fl_movimento_conta = models.NullBooleanField()
    cd_tipo_transacao_db = models.CharField(max_length=3, blank=True, null=True)
    cd_documento_debito = models.CharField(max_length=15, blank=True, null=True)
    cd_conta_corrente_debito = models.FloatField(blank=True, null=True)
    cd_tipo_transacao_cr = models.CharField(max_length=3, blank=True, null=True)
    cd_documento_credito = models.CharField(max_length=15, blank=True, null=True)
    cd_conta_corrente_credito = models.FloatField(blank=True, null=True)
    cd_autoriza_cheque = models.FloatField(blank=True, null=True)
    dt_estorno = models.DateField(blank=True, null=True)
    fl_status = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'au_movimento_conta'


class AuMovimentoTransacao(models.Model):
    dt_lancamento = models.DateField(blank=True, null=True)
    cd_usuario = models.FloatField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    cd_movimento_conta = models.FloatField(blank=True, null=True)
    cd_ordem_transacao = models.FloatField(blank=True, null=True)
    cd_operacao = models.FloatField(blank=True, null=True)
    dt_emissao_documento = models.DateField(blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    vl_transacao = models.FloatField(blank=True, null=True)
    cd_um_transacao = models.IntegerField(blank=True, null=True)
    fl_lancamento = models.CharField(max_length=1, blank=True, null=True)
    cd_historico_padrao = models.FloatField(blank=True, null=True)
    nm_historico = models.CharField(max_length=120, blank=True, null=True)
    dt_estorno = models.DateField(blank=True, null=True)
    fl_financeiro = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_movimento_transacao'


class AuNota(models.Model):
    cd_acao = models.NullBooleanField()
    cd_nota = models.FloatField(blank=True, null=True)
    fl_nivel_atualizacao = models.NullBooleanField()
    dt_saida = models.DateField(blank=True, null=True)
    dt_entrada = models.DateField(blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_fornecedor = models.FloatField(blank=True, null=True)
    cd_nota_fornecedor = models.FloatField(blank=True, null=True)
    nm_serie = models.CharField(max_length=8, blank=True, null=True)
    cd_especie_nota = models.CharField(max_length=5, blank=True, null=True)
    cd_um = models.FloatField(blank=True, null=True)
    vl_total_nota = models.FloatField(blank=True, null=True)
    vl_total_material = models.FloatField(blank=True, null=True)
    vl_base_icms = models.FloatField(blank=True, null=True)
    pc_icms = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    vl_icms = models.FloatField(blank=True, null=True)
    pc_aliquota_estado = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    vl_ipi = models.FloatField(blank=True, null=True)
    vl_despesas_acessorias = models.FloatField(blank=True, null=True)
    vl_icms_retido = models.FloatField(blank=True, null=True)
    vl_diferenca_icms = models.FloatField(blank=True, null=True)
    cd_setor_entrada = models.CharField(max_length=6, blank=True, null=True)
    cd_fatura = models.FloatField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=240, blank=True, null=True)
    cd_historico_padrao = models.FloatField(blank=True, null=True)
    nm_historico = models.CharField(max_length=120, blank=True, null=True)
    cd_operacao = models.FloatField(blank=True, null=True)
    vl_um = models.FloatField(blank=True, null=True)
    fl_estoque = models.CharField(max_length=1, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_nota'


class AuObrigacao(models.Model):
    dt_lancamento = models.DateField(blank=True, null=True)
    cd_usuario = models.FloatField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    cd_obrigacao = models.IntegerField(blank=True, null=True)
    cd_cedente_sacado = models.FloatField(blank=True, null=True)
    cd_tipo_obrigacao = models.FloatField(blank=True, null=True)
    cd_banco = models.CharField(max_length=10, blank=True, null=True)
    cd_agencia = models.CharField(max_length=10, blank=True, null=True)
    cd_carteira = models.IntegerField(blank=True, null=True)
    dt_emissao = models.DateField(blank=True, null=True)
    dt_vencimento = models.DateField(blank=True, null=True)
    dt_prevista_liquidacao = models.DateField(blank=True, null=True)
    fl_aceite = models.CharField(max_length=1, blank=True, null=True)
    cd_especie_titulo = models.FloatField(blank=True, null=True)
    fl_financeiro = models.CharField(max_length=1, blank=True, null=True)
    cd_status = models.IntegerField(blank=True, null=True)
    dt_status = models.DateField(blank=True, null=True)
    cd_um = models.IntegerField(blank=True, null=True)
    vl_obrigacao = models.FloatField(blank=True, null=True)
    vl_saldo_obrigacao = models.FloatField(blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    vl_saldo_pedido = models.FloatField(blank=True, null=True)
    vl_saldo_nota = models.FloatField(blank=True, null=True)
    cd_historico_padrao = models.FloatField(blank=True, null=True)
    nm_historico = models.CharField(max_length=120, blank=True, null=True)
    cd_documento_gerador = models.CharField(max_length=30, blank=True, null=True)
    cd_documento_controle = models.CharField(max_length=30, blank=True, null=True)
    dt_conversao_moeda = models.DateField(blank=True, null=True)
    dt_validade_documento = models.DateField(blank=True, null=True)
    pc_multa_atrazo = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    vl_juro_dia = models.FloatField(blank=True, null=True)
    cd_um_correcao = models.IntegerField(blank=True, null=True)
    vl_desconto_antecipacao = models.FloatField(blank=True, null=True)
    dt_desconto_antecipacao = models.DateField(blank=True, null=True)
    cd_autoriza_cheque = models.FloatField(blank=True, null=True)
    vl_despesas_pendentes = models.FloatField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=240, blank=True, null=True)
    nu_remessa = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_obrigacao'


class AuOcupacaoAcomodacao(models.Model):
    cd_posto = models.CharField(max_length=6, blank=True, null=True)
    cd_classe_acomodacao = models.IntegerField(blank=True, null=True)
    nu_leito = models.IntegerField(blank=True, null=True)
    dt_ocupacao = models.DateField(blank=True, null=True)
    hr_ocupacao = models.IntegerField(blank=True, null=True)
    dt_prevista_liberacao = models.DateField(blank=True, null=True)
    hr_prevista_liberacao = models.IntegerField(blank=True, null=True)
    dt_liberacao = models.DateField(blank=True, null=True)
    hr_liberacao = models.IntegerField(blank=True, null=True)
    ds_observacoes_medicas = models.CharField(max_length=240, blank=True, null=True)
    fl_atendimento_ocupa = models.CharField(max_length=1, blank=True, null=True)
    fl_diferenca_acomodacao = models.CharField(max_length=1, blank=True, null=True)
    cd_motivo_diferenca_acomod = models.CharField(max_length=1, blank=True, null=True)
    cd_usuario_digitador = models.CharField(max_length=10, blank=True, null=True)
    fl_procedimento = models.CharField(max_length=1, blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    fl_ocupacao = models.CharField(max_length=1, blank=True, null=True)
    cd_acomodacao = models.CharField(max_length=6, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_ocupacao_acomodacao'


class AuOperador(models.Model):
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    cd_menu = models.CharField(max_length=5, blank=True, null=True)
    cd_classe = models.NullBooleanField()
    cd_nivel_tela = models.NullBooleanField()
    cd_senha = models.CharField(max_length=6, blank=True, null=True)
    fl_status = models.NullBooleanField()
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    ds_operador = models.CharField(max_length=45, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    cod_grupo = models.IntegerField(blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_posto_srv = models.IntegerField(blank=True, null=True)
    cd_pessoa = models.IntegerField(blank=True, null=True)
    fl_autoriza_digital = models.CharField(max_length=1, blank=True, null=True)
    fl_multiempresa = models.CharField(max_length=1, blank=True, null=True)
    fl_libera_setor_externo = models.CharField(max_length=1, blank=True, null=True)
    fl_audita_alta = models.CharField(max_length=1, blank=True, null=True)
    nu_conexao = models.FloatField(blank=True, null=True)
    ult_acesso = models.DateField(blank=True, null=True)
    ult_atualizacao = models.DateField(blank=True, null=True)
    cd_funcionario = models.IntegerField(blank=True, null=True)
    nu_matricula = models.IntegerField(blank=True, null=True)
    fl_inc_gasto_manual_pep = models.CharField(max_length=1, blank=True, null=True)
    fl_controla_permissao = models.CharField(max_length=1, blank=True, null=True)
    fl_autoriza_comanda_manual = models.CharField(max_length=1, blank=True, null=True)
    fl_autoriza_perda_outros = models.CharField(max_length=1, blank=True, null=True)
    fl_controla_validade = models.CharField(max_length=1, blank=True, null=True)
    fl_acesso_saida_urg = models.CharField(max_length=1, blank=True, null=True)
    fl_senha_padrao = models.CharField(max_length=1, blank=True, null=True)
    fl_auditoria_contas = models.CharField(max_length=1, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    email = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_operador'


class AuOperadorDevolucao(models.Model):
    cd_operador_devolucao = models.FloatField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    cd_tipo_devolucao = models.NullBooleanField()
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_operador_devolucao'


class AuOperadorLocalAtendSa(models.Model):
    cd_operador = models.CharField(max_length=20, blank=True, null=True)
    cd_local_atendimento = models.IntegerField(blank=True, null=True)
    cd_status = models.NullBooleanField()
    fl_tipo = models.NullBooleanField()
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_operador_local_atend_sa'


class AuPaciente(models.Model):
    cd_acao = models.NullBooleanField()
    cd_paciente = models.IntegerField(blank=True, null=True)
    nm_paciente = models.CharField(max_length=45, blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    nm_municipio = models.CharField(max_length=60, blank=True, null=True)
    cd_uf = models.CharField(max_length=2, blank=True, null=True)
    cd_estado_civil = models.IntegerField(blank=True, null=True)
    cd_cor = models.NullBooleanField()
    fl_tipo_sanguineo = models.CharField(max_length=2, blank=True, null=True)
    fl_fator_rh = models.CharField(max_length=1, blank=True, null=True)
    cd_profissao = models.CharField(max_length=8, blank=True, null=True)
    nm_pai = models.CharField(max_length=45, blank=True, null=True)
    nm_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_prof_pai = models.CharField(max_length=8, blank=True, null=True)
    cd_prof_mae = models.CharField(max_length=8, blank=True, null=True)
    cd_tipo_endereco = models.CharField(max_length=10, blank=True, null=True)
    nm_endereco = models.CharField(max_length=60, blank=True, null=True)
    nu_endereco = models.CharField(max_length=10, blank=True, null=True)
    nm_complemento_end = models.CharField(max_length=60, blank=True, null=True)
    nm_bairro = models.CharField(max_length=60, blank=True, null=True)
    nu_cep = models.CharField(max_length=8, blank=True, null=True)
    nu_telefone = models.CharField(max_length=20, blank=True, null=True)
    nu_ramal = models.CharField(max_length=4, blank=True, null=True)
    nm_ponto_referencia = models.CharField(max_length=60, blank=True, null=True)
    ds_local_trabalho_paciente = models.CharField(max_length=45, blank=True, null=True)
    nu_telefone_trabalho = models.CharField(max_length=10, blank=True, null=True)
    cd_nacionalidade = models.IntegerField(blank=True, null=True)
    nu_rg = models.BigIntegerField(blank=True, null=True)
    cd_orgao_expedidor = models.CharField(max_length=45, blank=True, null=True)
    cd_uf_orgao = models.CharField(max_length=2, blank=True, null=True)
    nu_cgc_cpf = models.BigIntegerField(blank=True, null=True)
    nu_carteira_prof = models.IntegerField(blank=True, null=True)
    nu_serie = models.IntegerField(blank=True, null=True)
    cd_religiao = models.IntegerField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_paciente'


class AuParamControlePermissao(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    dt_fim = models.DateField(blank=True, null=True)
    hr_inicio = models.IntegerField(blank=True, null=True)
    hr_fim = models.IntegerField(blank=True, null=True)
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador', blank=True, null=True)
    usuario_gravou = models.CharField(max_length=10, blank=True, null=True)
    dt_usuario_gravou = models.DateField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_controle_permissao'


class AuParamCurvaAbc(models.Model):
    cd_acao = models.NullBooleanField()
    cd_dia = models.NullBooleanField()
    nm_dia = models.CharField(max_length=15, blank=True, null=True)
    nm_setor = models.CharField(max_length=50, blank=True, null=True)
    nm_flag = models.CharField(max_length=50, blank=True, null=True)
    cd_mes = models.NullBooleanField()
    dt_transacao = models.DateField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_curva_abc'


class AuParamFilialSolicOpe(models.Model):
    cd_acao = models.NullBooleanField()
    id_seq_param = models.IntegerField()
    id_seq = models.IntegerField()
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_tipo_solicitacao = models.IntegerField(blank=True, null=True)
    cd_grupo_chamado = models.IntegerField(blank=True, null=True)
    nm_operador_chamado = models.CharField(max_length=30, blank=True, null=True)
    cd_setor_executante = models.CharField(max_length=6, blank=True, null=True)
    ds_executante_padrao = models.CharField(max_length=100, blank=True, null=True)
    fl_aviso_inicial = models.CharField(max_length=1, blank=True, null=True)
    fl_avisa_grupo_pai = models.CharField(max_length=1, blank=True, null=True)
    fl_bloqueada_abertura_central = models.CharField(max_length=1, blank=True, null=True)
    fl_conclui_realizado = models.CharField(max_length=1, blank=True, null=True)
    cd_setor_solicitante = models.CharField(max_length=6, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_filial_solic_ope'


class AuParamFilialSolicitacao(models.Model):
    cd_acao = models.NullBooleanField()
    id_seq_param = models.IntegerField(blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_tipo_solicitacao = models.IntegerField(blank=True, null=True)
    cd_grupo_chamado = models.IntegerField(blank=True, null=True)
    nm_operador_chamado = models.CharField(max_length=30, blank=True, null=True)
    cd_setor_executante = models.CharField(max_length=6, blank=True, null=True)
    ds_executante_padrao = models.CharField(max_length=100, blank=True, null=True)
    fl_aviso_inicial = models.CharField(max_length=1, blank=True, null=True)
    fl_avisa_grupo_pai = models.CharField(max_length=1, blank=True, null=True)
    fl_bloqueada_abertura_central = models.CharField(max_length=1, blank=True, null=True)
    fl_conclui_realizado = models.CharField(max_length=1, blank=True, null=True)
    cd_setor_solicitante = models.CharField(max_length=6, blank=True, null=True)
    nr_periodo_tempo_alerta = models.FloatField(blank=True, null=True)
    cd_unidade_tempo_alerta = models.CharField(max_length=2, blank=True, null=True)
    id_mnemonico_avaliacao = models.CharField(max_length=200, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_filial_solicitacao'


class AuParamMovProibicao(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    dt_fim = models.DateField(blank=True, null=True)
    hr_inicio = models.IntegerField(blank=True, null=True)
    hr_fim = models.IntegerField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    usuario_gravou = models.CharField(max_length=10, blank=True, null=True)
    dt_usuario_gravou = models.DateField(blank=True, null=True)
    fl_liberado = models.CharField(max_length=1, blank=True, null=True)
    usuario_liberou = models.CharField(max_length=10, blank=True, null=True)
    dt_liberacao = models.DateField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_mov_proibicao'


class AuParamParametroReferencia(models.Model):
    cd_ref = models.FloatField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_metodo_realizado = models.IntegerField(blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    fl_unidade_tempo = models.CharField(max_length=1, blank=True, null=True)
    qt_idade_inicial = models.IntegerField(blank=True, null=True)
    qt_idade_final = models.IntegerField(blank=True, null=True)
    fl_datacheck = models.CharField(max_length=1, blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    nm_operador_audit = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_parametro_referencia'


class AuParamPlantaoMedico(models.Model):
    cd_medico = models.FloatField(blank=True, null=True)
    cd_um_vl = models.IntegerField(blank=True, null=True)
    vl_plantao = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_plantao_medico'


class AuParamProdmedDesconto(models.Model):
    cd_medico = models.FloatField(blank=True, null=True)
    fl_pessoa_fisica_juridica = models.CharField(max_length=1, blank=True, null=True)
    fl_cobra_ir = models.CharField(max_length=1, blank=True, null=True)
    pct_desconto_ir = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    fl_cobra_iss = models.CharField(max_length=1, blank=True, null=True)
    pct_desconto_iss = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    fl_isento = models.CharField(max_length=1, blank=True, null=True)
    cd_cedente_sacado = models.FloatField(blank=True, null=True)
    fl_tipo_ir = models.FloatField(blank=True, null=True)
    fl_cobra_cofins = models.CharField(max_length=1, blank=True, null=True)
    pct_desconto_cofins = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    fl_cobra_pis = models.CharField(max_length=1, blank=True, null=True)
    pct_desconto_pis = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    fl_cobra_csll = models.CharField(max_length=1, blank=True, null=True)
    pct_desconto_csll = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pct_desconto_base_iss = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_prodmed_desconto'


class AuParamProdmedGrupoProced(models.Model):
    cd_medico = models.FloatField(blank=True, null=True)
    cd_grupo_procedimento = models.IntegerField(blank=True, null=True)
    cd_tipo_produtividade = models.NullBooleanField()
    cd_tabela_procedimento = models.IntegerField(blank=True, null=True)
    cd_um = models.IntegerField(blank=True, null=True)
    pct_fixo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    vl_fixo = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    fl_filme = models.CharField(max_length=1, blank=True, null=True)
    cd_um_ac = models.IntegerField(blank=True, null=True)
    cd_tabela_ac = models.IntegerField(blank=True, null=True)
    pct_acrescimo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_prodmed_grupo_proced'


class AuParamProdmedPlantaoVar(models.Model):
    cd_medico = models.FloatField(blank=True, null=True)
    cd_grupo_procedimento = models.IntegerField(blank=True, null=True)
    cd_um_vl = models.IntegerField(blank=True, null=True)
    vl_plantao = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_procedimento_plantao = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_prodmed_plantao_var'


class AuParamProdmedProcedimento(models.Model):
    cd_medico = models.FloatField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_tipo_produtividade = models.NullBooleanField()
    cd_tabela_procedimento = models.IntegerField(blank=True, null=True)
    cd_um_proc = models.IntegerField(blank=True, null=True)
    pct_fixo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    vl_fixo = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    fl_filme = models.CharField(max_length=1, blank=True, null=True)
    cd_um_ac = models.IntegerField(blank=True, null=True)
    cd_tabela_ac = models.IntegerField(blank=True, null=True)
    pct_acrescimo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    vl_exame_plantao = models.FloatField(blank=True, null=True)
    pct_part_out_conv = models.FloatField(blank=True, null=True)
    pct_part_out_conv_plan = models.FloatField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_prodmed_procedimento'


class AuParamProdmedSetGrProced(models.Model):
    cd_medico = models.FloatField(blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    cd_grupo_procedimento = models.IntegerField(blank=True, null=True)
    cd_tipo_produtividade = models.NullBooleanField()
    cd_tabela_procedimento = models.IntegerField(blank=True, null=True)
    cd_um = models.IntegerField(blank=True, null=True)
    pct_fixo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    vl_fixo = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    fl_filme = models.CharField(max_length=1, blank=True, null=True)
    cd_um_ac = models.IntegerField(blank=True, null=True)
    cd_tabela_ac = models.IntegerField(blank=True, null=True)
    pct_acrescimo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_prodmed_set_gr_proced'


class AuParamProdmedSetProced(models.Model):
    cd_medico = models.FloatField(blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_tipo_produtividade = models.NullBooleanField()
    cd_tabela_procedimento = models.IntegerField(blank=True, null=True)
    cd_um_proc = models.IntegerField(blank=True, null=True)
    pct_fixo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    vl_fixo = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    fl_filme = models.CharField(max_length=1, blank=True, null=True)
    cd_um_ac = models.IntegerField(blank=True, null=True)
    cd_tabela_ac = models.IntegerField(blank=True, null=True)
    pct_acrescimo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_prodmed_set_proced'


class AuParamProdmedValorFixo(models.Model):
    cd_medico = models.FloatField(blank=True, null=True)
    cd_tipo_valor_fixo = models.FloatField(blank=True, null=True)
    cd_um_vl = models.IntegerField(blank=True, null=True)
    vl_fixo = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_prodmed_valor_fixo'


class AuParamRepasse(models.Model):
    cd_acao = models.NullBooleanField()
    dt_vigencia = models.DateField(blank=True, null=True)
    vl_max_cobra_percent = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_percentual = models.DecimalField(max_digits=3, decimal_places=1, blank=True, null=True)
    vl_percent_ir = models.DecimalField(max_digits=3, decimal_places=1, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_repasse'


class AuParamSolicParecer(models.Model):
    id_param_solic_parecer = models.IntegerField(blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_especialidade = models.IntegerField(blank=True, null=True)
    cd_tipo_parecer = models.IntegerField(blank=True, null=True)
    cd_parecerista = models.IntegerField(blank=True, null=True)
    cd_especialidade_detalhe = models.IntegerField(blank=True, null=True)
    dt_criacao = models.DateField(blank=True, null=True)
    nm_operador_criacao = models.CharField(max_length=10, blank=True, null=True)
    dt_ult_atu = models.DateField(blank=True, null=True)
    nm_operador_atu = models.CharField(max_length=10, blank=True, null=True)
    fl_ativado = models.CharField(max_length=1, blank=True, null=True)
    cd_acao = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'au_param_solic_parecer'


class AuParamUnidAtendOperador(models.Model):
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    fl_selecionado = models.CharField(max_length=1, blank=True, null=True)
    nu_tempo = models.FloatField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_param_unid_atend_operador'


class AuParametroConvenio(models.Model):
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_plano_convenio = models.IntegerField(blank=True, null=True)
    dt_vigencia_parametro = models.DateField(blank=True, null=True)
    cd_tabela_proced = models.IntegerField(blank=True, null=True)
    pc_desconto_proced = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_um_proced = models.IntegerField(blank=True, null=True)
    cd_tabela_taxa = models.IntegerField(blank=True, null=True)
    pc_desconto_taxa = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_um_taxa = models.IntegerField(blank=True, null=True)
    cd_tabela_mat_med = models.IntegerField(blank=True, null=True)
    pc_desconto_mat_med = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_um_mat_med = models.IntegerField(blank=True, null=True)
    cd_tabela_medicamento = models.IntegerField(blank=True, null=True)
    pc_desconto_medicamento = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_um_medicamento = models.IntegerField(blank=True, null=True)
    cd_um_proced_filme = models.IntegerField(blank=True, null=True)
    cd_material_tab_ref_ans = models.CharField(max_length=3, blank=True, null=True)
    cd_medicamento_tab_ref_ans = models.CharField(max_length=3, blank=True, null=True)
    cd_taxa_tab_ref_ans = models.CharField(max_length=3, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    pc_acrescimo_taxa = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_acrescimo_mat_med = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_acrescimo_medicamento = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_parametro_convenio'


class AuParametroGeraisFilial(models.Model):
    cd_filial = models.CharField(max_length=5, blank=True, null=True)
    cd_parametro = models.CharField(max_length=100, blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)
    dt_criacao = models.DateField(blank=True, null=True)
    dt_ativacao = models.DateField(blank=True, null=True)
    cd_user_ativou = models.CharField(max_length=30, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_parametro_gerais_filial'


class AuPedido(models.Model):
    dt_lancamento = models.DateField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    cd_pedido = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_pedido'


class AuPedidoCotacao(models.Model):
    cd_acao = models.NullBooleanField()
    cd_cotacao = models.IntegerField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_similar = models.CharField(max_length=4, blank=True, null=True)
    qt_cotada = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_pedido_cotacao'


class AuPedidoExame(models.Model):
    cd_acao = models.NullBooleanField()
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    nu_pedido = models.FloatField(blank=True, null=True)
    dt_pedido = models.DateField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    nm_operador = models.CharField(max_length=8, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_pedido_exame'


class AuPedidoFornecedor(models.Model):
    cd_pedido = models.FloatField(blank=True, null=True)
    fl_pedido = models.NullBooleanField()
    cd_fornecedor = models.FloatField(blank=True, null=True)
    dt_pedido = models.DateField(blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_motivo_aceite_pedido = models.FloatField(blank=True, null=True)
    cd_condicao_entrega = models.CharField(max_length=3, blank=True, null=True)
    cd_um = models.FloatField(blank=True, null=True)
    vl_pedido = models.FloatField(blank=True, null=True)
    vl_saldo_pedido = models.FloatField(blank=True, null=True)
    vl_saldo_nota = models.FloatField(blank=True, null=True)
    vl_saldo_obrigacao = models.FloatField(blank=True, null=True)
    dt_validade_pedido = models.DateField(blank=True, null=True)
    qt_dias_entrega = models.FloatField(blank=True, null=True)
    cd_cotacao = models.FloatField(blank=True, null=True)
    ds_forma_pagamento = models.CharField(max_length=20, blank=True, null=True)
    pc_icms = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    ds_observacao = models.CharField(max_length=240, blank=True, null=True)
    dt_prevista_entraga = models.DateField(blank=True, null=True)
    dt_entrega = models.DateField(blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    cd_setor_controle = models.CharField(max_length=6, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_acao = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'au_pedido_fornecedor'


class AuPendenciaCl(models.Model):
    cd_usuario_digitador = models.CharField(max_length=30, blank=True, null=True)
    nu_pendencia = models.FloatField(blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_convenio_pagador = models.NullBooleanField()
    cd_pessoa_cobra = models.FloatField(blank=True, null=True)
    dt_registro = models.DateField(blank=True, null=True)
    cd_motivo_pendencia = models.IntegerField(blank=True, null=True)
    fl_situacao = models.CharField(max_length=1, blank=True, null=True)
    ds_observacao = models.CharField(max_length=50, blank=True, null=True)
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_ocorrencia_pedido = models.IntegerField(blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_senha_autoriza = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_pendencia_cl'


class AuPermissaoTrocarBio(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    nm_operador_permissao = models.CharField(max_length=10, blank=True, null=True)
    nm_operador_audit = models.CharField(max_length=10, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_permissao_trocar_bio'


class AuPessoa(models.Model):
    cd_acao = models.NullBooleanField()
    cd_pessoa = models.FloatField(blank=True, null=True)
    nu_cgc_cpf = models.FloatField(blank=True, null=True)
    nm_pessoa_razao_social = models.CharField(max_length=45, blank=True, null=True)
    nm_fantasia = models.CharField(max_length=20, blank=True, null=True)
    fl_tipo_pessoa = models.NullBooleanField()
    fl_empresa = models.CharField(max_length=1, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_nascimento_fundacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_pessoa'


class AuPessoaConvenio(models.Model):
    cd_acao = models.NullBooleanField()
    cd_pessoa = models.FloatField(blank=True, null=True)
    cd_convenio = models.IntegerField(blank=True, null=True)
    fl_credenciado = models.CharField(max_length=1, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_pessoa_convenio'


class AuPlanOncoHist(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_estoq = models.FloatField(blank=True, null=True)
    prc_mat_med_estoq = models.FloatField(blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    dt_inicial = models.DateField(blank=True, null=True)
    dt_final = models.DateField(blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    fl_estabilidade = models.CharField(max_length=1, blank=True, null=True)
    qt_estabilidade = models.FloatField(blank=True, null=True)
    dt_agenda = models.DateField(blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_paciente = models.FloatField(blank=True, null=True)
    dt_planejamento = models.DateField(blank=True, null=True)
    cd_agenda = models.FloatField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    cd_pessoa_hosp = models.FloatField(blank=True, null=True)
    cd_pessoa_hap = models.FloatField(blank=True, null=True)
    nm_pessoa = models.CharField(max_length=45, blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    nome_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_plan_onco_hist'


class AuPlanoConvenio(models.Model):
    cd_acao = models.NullBooleanField()
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_plano_convenio = models.IntegerField(blank=True, null=True)
    ds_plano_convenio = models.CharField(max_length=45, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_plano_convenio'


class AuPlantoesMedico(models.Model):
    cd_medico = models.FloatField(blank=True, null=True)
    ano_referencia = models.IntegerField(blank=True, null=True)
    mes_referencia = models.IntegerField(blank=True, null=True)
    nu_plantoes = models.IntegerField(blank=True, null=True)
    dt_inicio_plantao = models.DateField(blank=True, null=True)
    hr_inicio_plantao = models.IntegerField(blank=True, null=True)
    dt_fim_plantao = models.DateField(blank=True, null=True)
    hr_fim_plantao = models.IntegerField(blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_grupo_procedimento = models.IntegerField(blank=True, null=True)
    cd_empresa = models.FloatField(blank=True, null=True)
    tempo = models.FloatField(blank=True, null=True)
    tempo_considerado = models.FloatField(blank=True, null=True)
    valor = models.FloatField(blank=True, null=True)
    fl_sobre_aviso = models.CharField(max_length=1, blank=True, null=True)
    dt_aprovacao = models.DateField(blank=True, null=True)
    cd_aprovador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_plantoes_medico'


class AuPontoOperadorAtendSa(models.Model):
    nm_maquina = models.CharField(max_length=40, blank=True, null=True)
    fl_imp_digital = models.CharField(max_length=1, blank=True, null=True)
    fl_imagem_foto = models.CharField(max_length=1, blank=True, null=True)
    cd_grupo_consultorio = models.IntegerField(blank=True, null=True)
    cd_ponto_atendimento = models.IntegerField(blank=True, null=True)
    cd_local_atendimento = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=20, blank=True, null=True)
    ds_ponto_atendimento = models.CharField(max_length=40, blank=True, null=True)
    fl_tipo = models.NullBooleanField()
    fl_imp_ativa = models.NullBooleanField()
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    ult_operador = models.CharField(max_length=20, blank=True, null=True)
    fl_novosam = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_ponto_operador_atend_sa'


class AuPreco(models.Model):
    cd_acao = models.NullBooleanField()
    cd_item = models.IntegerField(blank=True, null=True)
    vl_custo = models.FloatField(blank=True, null=True)
    vl_venda = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_preco'


class AuPrescricaoAlta(models.Model):
    cd_atendimento = models.IntegerField()
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem_prescricao = models.IntegerField()
    cd_ordem_alta = models.IntegerField()
    cd_tipo_alta = models.IntegerField()
    cd_posto_destino = models.CharField(max_length=6, blank=True, null=True)
    dt_alta_medica = models.DateField(blank=True, null=True)
    hr_alta_medica = models.IntegerField(blank=True, null=True)
    cd_profissional_alta = models.IntegerField(blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.IntegerField(blank=True, null=True)
    hr_alta_apartir = models.IntegerField(blank=True, null=True)
    ds_observacao_alta = models.CharField(max_length=2000, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    id_session = models.CharField(max_length=20, blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)
    dt_acao = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_prescricao_alta'


class AuPrescricaoMedica(models.Model):
    cd_atendimento = models.IntegerField()
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem_prescricao = models.IntegerField()
    cd_ordem_prescricao_pai = models.IntegerField(blank=True, null=True)
    nu_prescricao_medica = models.IntegerField()
    dt_prescricao = models.DateField()
    hr_prescricao = models.IntegerField()
    fl_prescricao_medica = models.CharField(max_length=1)
    fl_status_prescricao = models.CharField(max_length=1)
    cd_avaliacao = models.IntegerField(blank=True, null=True)
    cd_profissional = models.IntegerField()
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    ds_observacao = models.TextField(blank=True, null=True)
    fl_assinatura = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_aprazamento = models.CharField(max_length=1, blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    dt_inicio_avaliacao = models.DateField(blank=True, null=True)
    hr_inicio_avaliacao = models.IntegerField(blank=True, null=True)
    qt_frequencia_totalizacao = models.IntegerField(blank=True, null=True)
    qt_peso_kg_registrado = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    id_session = models.CharField(max_length=20, blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)
    dt_acao = models.DateTimeField(blank=True, null=True)
    nu_documento_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_prescricao_medica'


class AuPrescricaoMedicaHv(models.Model):
    cd_atendimento = models.IntegerField()
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem_prescricao = models.IntegerField()
    cd_ordem_hv = models.IntegerField()
    vig = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    volume_total = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    fl_frequencia_uso = models.CharField(max_length=3, blank=True, null=True)
    qt_gotejamento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.IntegerField(blank=True, null=True)
    fl_bomba_infusao = models.CharField(max_length=1, blank=True, null=True)
    qt_soro_s_glicose = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_soro_c_glicose = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_prescreve = models.IntegerField(blank=True, null=True)
    cd_profissional_valida = models.IntegerField(blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.IntegerField(blank=True, null=True)
    cd_tipo_acesso_infusao = models.CharField(max_length=1, blank=True, null=True)
    cd_tipo_fase = models.CharField(max_length=1, blank=True, null=True)
    dt_hr_suspensao = models.DateField(blank=True, null=True)
    qt_tempo_fase_rapida = models.IntegerField(blank=True, null=True)
    cd_unid_tempo_fase_rapida = models.CharField(max_length=2, blank=True, null=True)
    fl_necessario = models.CharField(max_length=1, blank=True, null=True)
    fl_acm = models.CharField(max_length=1, blank=True, null=True)
    dt_libera_sn = models.DateField(blank=True, null=True)
    hr_libera_sn = models.IntegerField(blank=True, null=True)
    cd_profissional_libera_sn = models.IntegerField(blank=True, null=True)
    cd_tipo_hv = models.CharField(max_length=1, blank=True, null=True)
    qt_quota = models.FloatField(blank=True, null=True)
    id_session = models.CharField(max_length=20, blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)
    dt_acao = models.DateTimeField(blank=True, null=True)
    dt_validacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_prescricao_medica_hv'


class AuPrescricaoPlano(models.Model):
    cd_atendimento = models.IntegerField()
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem_prescricao = models.IntegerField()
    cd_ordem_prescricao_plano = models.IntegerField()
    cd_prescricao_plano_pai = models.IntegerField(blank=True, null=True)
    dt_inicio_uso = models.DateField()
    hr_inicio_uso = models.IntegerField(blank=True, null=True)
    dt_fim_uso = models.DateField(blank=True, null=True)
    hr_fim_uso = models.IntegerField(blank=True, null=True)
    cd_mat_med = models.IntegerField(blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    cd_unidade_usual = models.CharField(max_length=2, blank=True, null=True)
    cd_tipo_acesso = models.IntegerField()
    qt_dosagem = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_diluicao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.IntegerField(blank=True, null=True)
    qt_gotejamento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    dt_revisao_prescricao = models.DateField(blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    fl_necessario = models.CharField(max_length=1, blank=True, null=True)
    fl_diluicao = models.CharField(max_length=1, blank=True, null=True)
    fl_alergia = models.CharField(max_length=1, blank=True, null=True)
    fl_periodo = models.CharField(max_length=1, blank=True, null=True)
    ds_observacao = models.CharField(max_length=500, blank=True, null=True)
    nu_produto = models.IntegerField()
    cd_principio_ativo = models.IntegerField(blank=True, null=True)
    cd_ocorrencia_diluicao = models.IntegerField(blank=True, null=True)
    cd_ordem_administracao = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    qt_mat_med = models.IntegerField(blank=True, null=True)
    cd_apresentacao = models.CharField(max_length=4, blank=True, null=True)
    qt_tempo_gotej = models.IntegerField(blank=True, null=True)
    cd_unidade_gotej = models.CharField(max_length=2, blank=True, null=True)
    fl_acm = models.CharField(max_length=1, blank=True, null=True)
    cd_diluente = models.IntegerField(blank=True, null=True)
    qt_reconstituicao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_dosagem_med = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_unidade_dosagem_med = models.CharField(max_length=2, blank=True, null=True)
    cd_apresentacao_diluente = models.CharField(max_length=4, blank=True, null=True)
    cd_ordem_proc_plano_uso = models.IntegerField(blank=True, null=True)
    cd_profissional_prescreve = models.IntegerField(blank=True, null=True)
    cd_profissional_valida = models.IntegerField(blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    fl_bomba_infusao = models.CharField(max_length=1, blank=True, null=True)
    cd_reconstituir = models.IntegerField(blank=True, null=True)
    qt_reconstituir = models.FloatField(blank=True, null=True)
    cd_reconstituir2 = models.IntegerField(blank=True, null=True)
    qt_reconstituir2 = models.FloatField(blank=True, null=True)
    cd_apres_reconstituir = models.CharField(max_length=4, blank=True, null=True)
    cd_apres_reconstituir2 = models.CharField(max_length=4, blank=True, null=True)
    fl_frequencia_uso = models.CharField(max_length=3, blank=True, null=True)
    cd_tipo_prescricao_plano = models.IntegerField()
    qt_dosagem_hv = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_unidade_hv = models.CharField(max_length=2, blank=True, null=True)
    cd_ordem_hv = models.IntegerField(blank=True, null=True)
    nu_ordem_apresentacao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_libera_sn = models.DateField(blank=True, null=True)
    hr_libera_sn = models.IntegerField(blank=True, null=True)
    cd_profissional_libera_sn = models.IntegerField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.IntegerField(blank=True, null=True)
    dt_hr_suspensao = models.DateField(blank=True, null=True)
    ds_apres_ud_fazer_retirar = models.CharField(max_length=4, blank=True, null=True)
    fl_bureta = models.CharField(max_length=1, blank=True, null=True)
    id_session = models.CharField(max_length=20, blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)
    dt_acao = models.DateTimeField(blank=True, null=True)
    dt_validacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_prescricao_plano'


class AuProcedParamReferencia(models.Model):
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_metodo_realizado = models.IntegerField(blank=True, null=True)
    cd_parametro_referencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_sexo = models.CharField(max_length=2, blank=True, null=True)
    qt_idade_inicial = models.IntegerField(blank=True, null=True)
    qt_idade_final = models.IntegerField(blank=True, null=True)
    fl_unidade_tempo = models.CharField(max_length=1, blank=True, null=True)
    vl_parametro_minimo = models.DecimalField(max_digits=9, decimal_places=2, blank=True, null=True)
    vl_parametro_maximo = models.DecimalField(max_digits=9, decimal_places=2, blank=True, null=True)
    vl_parametro_normal = models.DecimalField(max_digits=9, decimal_places=2, blank=True, null=True)
    fl_valor_parametro = models.CharField(max_length=1, blank=True, null=True)
    ds_valor_parametro = models.CharField(max_length=2000, blank=True, null=True)
    cd_unidade_usual = models.CharField(max_length=2, blank=True, null=True)
    vl_formula = models.CharField(max_length=50, blank=True, null=True)
    qt_decimal = models.NullBooleanField()
    dt_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    fl_aparecer_laudo = models.CharField(max_length=1, blank=True, null=True)
    cd_referencia = models.CharField(max_length=2, blank=True, null=True)
    fl_tipo_valor = models.CharField(max_length=1, blank=True, null=True)
    ds_texto_resultado = models.CharField(max_length=60, blank=True, null=True)
    cd_ref = models.FloatField(blank=True, null=True)
    cd_proced_param_referencia = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_proced_param_referencia'


class AuProcedimento(models.Model):
    cd_acao = models.NullBooleanField()
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_subgrupo_procedimento = models.CharField(max_length=5, blank=True, null=True)
    cd_grupo_procedimento = models.CharField(max_length=3, blank=True, null=True)
    nm_procedimento = models.CharField(max_length=240, blank=True, null=True)
    qt_idade_inicial = models.IntegerField(blank=True, null=True)
    qt_idade_final = models.IntegerField(blank=True, null=True)
    cd_sexo = models.CharField(max_length=2, blank=True, null=True)
    nr_procedimento = models.CharField(max_length=45, blank=True, null=True)
    cd_clinica = models.NullBooleanField()
    cd_via_acesso = models.IntegerField(blank=True, null=True)
    fl_parto = models.NullBooleanField()
    fl_cirurgia = models.NullBooleanField()
    cd_porte_anestesia = models.NullBooleanField()
    cd_tipo_anestesia = models.NullBooleanField()
    qt_dias = models.IntegerField(blank=True, null=True)
    qt_aux = models.NullBooleanField()
    qt_incid_filme = models.IntegerField(blank=True, null=True)
    qt_filme_m2 = models.DecimalField(max_digits=6, decimal_places=4, blank=True, null=True)
    qt_custo_operacional = models.IntegerField(blank=True, null=True)
    qt_unidade_topografica = models.CharField(max_length=10, blank=True, null=True)
    cd_um = models.FloatField(blank=True, null=True)
    fl_tipo_exame = models.NullBooleanField()
    qt_ch = models.IntegerField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_procedimento_cbhpm = models.CharField(max_length=8, blank=True, null=True)
    cd_procedimento_amb = models.CharField(max_length=8, blank=True, null=True)
    fl_rol_ans = models.CharField(max_length=1, blank=True, null=True)
    fl_cbhpm = models.CharField(max_length=1, blank=True, null=True)
    fl_exige_result_antes_checar = models.CharField(max_length=1, blank=True, null=True)
    nu_prioridade_exame = models.BigIntegerField(blank=True, null=True)
    qt_hr_padrao_exame_eme = models.BigIntegerField(blank=True, null=True)
    fl_tuss = models.CharField(max_length=1, blank=True, null=True)
    cd_tipo_tabela = models.BigIntegerField(blank=True, null=True)
    qt_dias_terceirizados = models.BigIntegerField(blank=True, null=True)
    fl_nao_copia_prescricao = models.CharField(max_length=1, blank=True, null=True)
    cd_procedimento_tuss = models.CharField(max_length=8, blank=True, null=True)
    fl_continuo = models.CharField(max_length=1, blank=True, null=True)
    qt_frequencia_maxima = models.BigIntegerField(blank=True, null=True)
    nm_procedimento_alias_1 = models.CharField(max_length=240, blank=True, null=True)
    nm_procedimento_alias_2 = models.CharField(max_length=240, blank=True, null=True)
    cd_mnemonico = models.CharField(max_length=8, blank=True, null=True)
    nu_frascos_coleta = models.BigIntegerField(blank=True, null=True)
    cd_procedimento_pai = models.CharField(max_length=8, blank=True, null=True)
    fl_gas = models.CharField(max_length=1, blank=True, null=True)
    fl_gastos_gerais = models.CharField(max_length=1, blank=True, null=True)
    cd_referencia = models.CharField(max_length=15, blank=True, null=True)
    fl_aerosol = models.CharField(max_length=1, blank=True, null=True)
    cd_unidade_usual = models.CharField(max_length=2, blank=True, null=True)
    fl_exibe_result_anterior = models.CharField(max_length=1, blank=True, null=True)
    fl_urgencia = models.CharField(max_length=1, blank=True, null=True)
    fl_procedimento_ficticio = models.CharField(max_length=1, blank=True, null=True)
    fl_procedimento_vida_imagem = models.CharField(max_length=1, blank=True, null=True)
    cd_porte_cirurgia = models.BigIntegerField(blank=True, null=True)
    fl_laudo_observacao = models.CharField(max_length=1, blank=True, null=True)
    fl_entrega_material = models.CharField(max_length=1, blank=True, null=True)
    fl_fisioteraria = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento'


class AuProcedimentoAnaliseChefia(models.Model):
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)
    dt_inicio_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_analise_chefia'


class AuProcedimentoAnomalia(models.Model):
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_ocorrencia = models.FloatField(blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    cd_procedimento = models.FloatField(blank=True, null=True)
    nu_pedido = models.FloatField(blank=True, null=True)
    dt_ocorrencia = models.DateField(blank=True, null=True)
    cd_operador_informante = models.CharField(max_length=30, blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    nm_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    ds_alterado = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_anomalia'


class AuProcedimentoConvenio(models.Model):
    cd_operador = models.CharField(max_length=20, blank=True, null=True)
    dt_atualizacao = models.DateField(blank=True, null=True)
    fl_senha_auto_hapvida = models.CharField(max_length=1, blank=True, null=True)
    dt_fin_vigencia = models.DateField(blank=True, null=True)
    cd_procedimento_pagador = models.CharField(max_length=8, blank=True, null=True)
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_plano_convenio = models.IntegerField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    fl_pagamento = models.CharField(max_length=1, blank=True, null=True)
    cd_procedimento_convenio = models.CharField(max_length=8, blank=True, null=True)
    nm_procedimento_convenio = models.CharField(max_length=240, blank=True, null=True)
    qt_filme_m2 = models.DecimalField(max_digits=6, decimal_places=4, blank=True, null=True)
    vl_pacote = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    qt_dias_autorizado = models.IntegerField(blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_convenio'


class AuProcedimentoMatMed(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_mat_med = models.IntegerField(blank=True, null=True)
    nm_procedimento_mat_med = models.CharField(max_length=255, blank=True, null=True)
    qt_mat_med = models.IntegerField(blank=True, null=True)
    fl_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_agrupamento = models.CharField(max_length=20, blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    cd_unidade_frequencia = models.CharField(max_length=2, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_mat_med'


class AuProcedimentoModelo(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_modelo = models.FloatField(blank=True, null=True)
    cd_ocorrencia_procedimento = models.FloatField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    fl_status = models.FloatField(blank=True, null=True)
    fl_bipagem_isento = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'au_procedimento_modelo'


class AuProcedimentoModeloAnest(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_modelo = models.FloatField(blank=True, null=True)
    cd_ocorrencia_procedimento = models.FloatField(blank=True, null=True)
    cd_tipo_anestesia = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_modelo_anest'


class AuProcedimentoModeloConven(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_modelo = models.FloatField(blank=True, null=True)
    cd_ocorrencia_procedimento = models.FloatField(blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    cd_convenio = models.FloatField(blank=True, null=True)
    qt_item = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_modelo_conven'


class AuProcedimentoModeloFilhos(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_modelo = models.FloatField(blank=True, null=True)
    cd_ocorrencia_procedimento = models.FloatField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_modelo_filhos'


class AuProcedimentoModeloFilial(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_modelo = models.FloatField(blank=True, null=True)
    cd_ocorrencia_procedimento = models.FloatField(blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    qt_item = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_modelo_filial'


class AuProcedimentoModeloItem(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_modelo = models.FloatField(blank=True, null=True)
    cd_ocorrencia_procedimento = models.FloatField(blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    cd_exame = models.CharField(max_length=8, blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_tipo_item = models.FloatField(blank=True, null=True)
    qt_item = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_modelo_item'


class AuProcedimentoModeloTempo(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_modelo = models.FloatField(blank=True, null=True)
    cd_ocorrencia_procedimento = models.FloatField(blank=True, null=True)
    tp_sala_cirurgica = models.FloatField(blank=True, null=True)
    tp_permanencia = models.FloatField(blank=True, null=True)
    tp_uti = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_modelo_tempo'


class AuProcedimentoPlanoUso(models.Model):
    cd_atendimento = models.IntegerField()
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem_prescricao = models.IntegerField()
    cd_ordem_proc_plano_uso = models.IntegerField()
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    dt_inicio = models.DateField()
    hr_inicio = models.IntegerField()
    dt_fim = models.DateField(blank=True, null=True)
    hr_fim = models.IntegerField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=120, blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    qt_procedimento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_unidade_usual = models.CharField(max_length=2, blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    cd_proc_plano_pai = models.IntegerField(blank=True, null=True)
    cd_cid10 = models.CharField(max_length=4, blank=True, null=True)
    fl_tipo_aprazamento = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_prescreve = models.IntegerField(blank=True, null=True)
    cd_profissional_valida = models.IntegerField(blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.IntegerField(blank=True, null=True)
    nm_procedimento = models.CharField(max_length=240, blank=True, null=True)
    cd_tipo_procedimento = models.IntegerField(blank=True, null=True)
    dt_hr_suspensao = models.DateField(blank=True, null=True)
    fl_necessario = models.CharField(max_length=1, blank=True, null=True)
    fl_acm = models.CharField(max_length=1, blank=True, null=True)
    dt_libera_sn = models.DateField(blank=True, null=True)
    hr_libera_sn = models.IntegerField(blank=True, null=True)
    cd_profissional_libera_sn = models.IntegerField(blank=True, null=True)
    id_session = models.CharField(max_length=20, blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)
    dt_acao = models.DateTimeField(blank=True, null=True)
    dt_validacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_plano_uso'


class AuProcedimentoRealizado(models.Model):
    cd_acao = models.NullBooleanField()
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    dt_procedimento_realizado = models.DateField(blank=True, null=True)
    hr_procedimento_realizado = models.IntegerField(blank=True, null=True)
    qt_procedimento = models.IntegerField(blank=True, null=True)
    vl_procedimento = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    cd_modelo = models.IntegerField(blank=True, null=True)
    fl_bilat = models.CharField(max_length=1, blank=True, null=True)
    cd_via_acesso = models.IntegerField(blank=True, null=True)
    dt_resultado = models.DateField(blank=True, null=True)
    fl_emitiu_resultado = models.CharField(max_length=1, blank=True, null=True)
    fl_entregue_resultado = models.CharField(max_length=1, blank=True, null=True)
    cd_metodo_realizado = models.IntegerField(blank=True, null=True)
    fl_multipla = models.CharField(max_length=1, blank=True, null=True)
    cd_pessoa_cobra = models.FloatField(blank=True, null=True)
    cd_senha_autoriza = models.CharField(max_length=20, blank=True, null=True)
    cd_tipo_anestesia = models.IntegerField(blank=True, null=True)
    vl_total = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)
    dt_libera_assina_digital = models.DateField(blank=True, null=True)
    cd_bioquimico_responsavel = models.FloatField(blank=True, null=True)
    dt_entregou_material = models.DateField(blank=True, null=True)
    dt_libera_laudo = models.DateField(blank=True, null=True)
    cd_oper_lib_laudo_vi = models.CharField(max_length=30, blank=True, null=True)
    fl_libera_assina_digital = models.CharField(max_length=1, blank=True, null=True)
    fl_libera_laudo = models.CharField(max_length=1, blank=True, null=True)
    fl_importa_interface = models.CharField(max_length=1, blank=True, null=True)
    fl_imprimiu_mapa = models.CharField(max_length=1, blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    cd_comite = models.BigIntegerField(blank=True, null=True)
    cd_ocorrencia_pacote = models.BigIntegerField(blank=True, null=True)
    qt_procedimento_paga = models.BigIntegerField(blank=True, null=True)
    vl_total_pago = models.BigIntegerField(blank=True, null=True)
    fl_status_pago = models.CharField(max_length=3, blank=True, null=True)
    fl_leito = models.CharField(max_length=1, blank=True, null=True)
    fl_entregou_material = models.CharField(max_length=1, blank=True, null=True)
    cd_natureza_glosa = models.CharField(max_length=2, blank=True, null=True)
    fl_imprimiu_assina_digital = models.CharField(max_length=1, blank=True, null=True)
    ds_observacao_procedimento = models.CharField(max_length=600, blank=True, null=True)
    fl_status_laudo = models.CharField(max_length=1, blank=True, null=True)
    dt_status_laudo = models.DateField(blank=True, null=True)
    cd_profissional_laudo = models.IntegerField(blank=True, null=True)
    ds_pendencia_laudo = models.CharField(max_length=1000, blank=True, null=True)
    fl_lado_membro = models.CharField(max_length=1, blank=True, null=True)
    cd_prof_resp = models.IntegerField(blank=True, null=True)
    ds_obs_dgn = models.CharField(max_length=2000, blank=True, null=True)
    cd_ocorrencia_plano = models.IntegerField(blank=True, null=True)
    cd_ordem_exa = models.IntegerField(blank=True, null=True)
    cd_ordem_item = models.IntegerField(blank=True, null=True)
    fl_liberado_auto = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_realizado'


class AuProcedimentoSemLaudoHap(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ordem')
    cd_procedimento = models.CharField(max_length=8)
    fl_sol_laudo = models.CharField(max_length=1)
    cd_senha_autorizacao = models.CharField(max_length=20, blank=True, null=True)
    cd_item_pre_autorizacao = models.FloatField(blank=True, null=True)
    usuario = models.CharField(max_length=20, blank=True, null=True)
    dt_cadastro = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_sem_laudo_hap'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem'),)


class AuProcedimentoTerceirizado(models.Model):
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_ocorrencia = models.FloatField(blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    cd_laboratorio_apoio = models.FloatField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    qt_procedimento = models.IntegerField(blank=True, null=True)
    vl_procedimento = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    cd_mnemonico_exame = models.CharField(max_length=20, blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    nm_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    ds_alterado = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_procedimento_terceirizado'


class AuProcessoDocAtend(models.Model):
    cd_acao_audit = models.FloatField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_processo_doc_atend = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_senha_autoriza = models.CharField(max_length=20, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    fl_analise_divergencia = models.CharField(max_length=1, blank=True, null=True)
    dt_registro = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_processo_doc_atend'


class AuProdutividadeMedica(models.Model):
    cd_produtividade = models.IntegerField(blank=True, null=True)
    cd_medico = models.FloatField(blank=True, null=True)
    mes_ano_referencia = models.DateField(blank=True, null=True)
    dt_geracao = models.DateField(blank=True, null=True)
    vl_faturado = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_pago = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    cd_obrigacao = models.IntegerField(blank=True, null=True)
    vl_irrf = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_iss = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    dt_obrigacao = models.DateField(blank=True, null=True)
    nu_nfiscal = models.CharField(max_length=10, blank=True, null=True)
    cd_cedente_sacado = models.FloatField(blank=True, null=True)
    fl_bloqueio = models.CharField(max_length=1, blank=True, null=True)
    fl_geracao = models.IntegerField(blank=True, null=True)
    vl_pis = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_cofins = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_csll = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_produtividade_medica'


class AuProdutividadeVidaImagem(models.Model):
    cd_pessoa = models.FloatField(blank=True, null=True)
    data_entrada = models.DateField(blank=True, null=True)
    data_saida = models.DateField(blank=True, null=True)
    cd_escala_entrada = models.FloatField(blank=True, null=True)
    mes_ano_ref = models.DateField(blank=True, null=True)
    fl_tipo_reg = models.CharField(max_length=1, blank=True, null=True)
    grupo = models.FloatField(blank=True, null=True)
    cd_empresa = models.FloatField(blank=True, null=True)
    cd_user_geracao = models.CharField(max_length=30, blank=True, null=True)
    dt_geracao = models.DateField(blank=True, null=True)
    cd_user_liberacao = models.CharField(max_length=30, blank=True, null=True)
    dt_liberacao = models.DateField(blank=True, null=True)
    status = models.CharField(max_length=20, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    fl_sobre_aviso = models.CharField(max_length=1, blank=True, null=True)
    qt_horas_sobre_aviso = models.FloatField(blank=True, null=True)
    plantao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_produtividade_vida_imagem'


class AuProduto(models.Model):
    cd_acao = models.NullBooleanField()
    nu_produto = models.IntegerField(blank=True, null=True)
    nm_produto = models.CharField(max_length=240, blank=True, null=True)
    fl_uso = models.CharField(max_length=1, blank=True, null=True)
    fl_padronizado = models.CharField(max_length=1, blank=True, null=True)
    fl_diluente = models.CharField(max_length=1, blank=True, null=True)
    fl_hemoderivado = models.CharField(max_length=1, blank=True, null=True)
    fl_compoe_hv = models.CharField(max_length=1, blank=True, null=True)
    nr_produto = models.CharField(max_length=40, blank=True, null=True)
    nu_ordem_apresentacao = models.IntegerField(blank=True, null=True)
    cd_unidade_padrao = models.CharField(max_length=2, blank=True, null=True)
    cd_tipo_acesso = models.IntegerField(blank=True, null=True)
    fl_possui_glicose = models.CharField(max_length=1, blank=True, null=True)
    fl_soro = models.CharField(max_length=1, blank=True, null=True)
    fl_eletrolito = models.CharField(max_length=1, blank=True, null=True)
    fl_pode_diluente_inf_lenta = models.CharField(max_length=1, blank=True, null=True)
    fl_medic_programa_nacional = models.CharField(max_length=1, blank=True, null=True)
    qt_concentracao_max = models.FloatField(blank=True, null=True)
    cd_unid_conc_max = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade_padrao_aerosol = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade_padrao_produto = models.CharField(max_length=2, blank=True, null=True)
    fl_droga_vasoativa = models.CharField(max_length=1, blank=True, null=True)
    fl_compoe_hv_r = models.CharField(max_length=1, blank=True, null=True)
    fl_compoe_hv_c = models.CharField(max_length=1, blank=True, null=True)
    fl_profilaxia = models.CharField(max_length=1, blank=True, null=True)
    fl_terceira_comanda = models.CharField(max_length=1, blank=True, null=True)
    fl_eletrolito_excecao = models.CharField(max_length=1, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_produto'


class AuProfProcedRealizado(models.Model):
    cd_acao = models.NullBooleanField()
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_profissional = models.IntegerField(blank=True, null=True)
    cd_tipo_ato_profissional = models.IntegerField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    qt_pontos_profissional = models.IntegerField(blank=True, null=True)
    fl_vincula = models.CharField(max_length=1, blank=True, null=True)
    vl_honorario_prof = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    dt_paga_honorario = models.DateField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    fl_repasse_medico = models.CharField(max_length=1, blank=True, null=True)
    cd_natureza_glosa = models.CharField(max_length=2, blank=True, null=True)
    fl_honorario = models.CharField(max_length=1, blank=True, null=True)
    vl_paga_honorario = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    pc_acres_honorario = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    vl_honorario_franquia_prof = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    cd_ocorrencia_pacote = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_prof_proced_realizado'


class AuProfissional(models.Model):
    cd_profissional = models.IntegerField(blank=True, null=True)
    cd_crm_profissional = models.CharField(max_length=8, blank=True, null=True)
    fl_auditor_sus = models.CharField(max_length=1, blank=True, null=True)
    fl_interno = models.CharField(max_length=1, blank=True, null=True)
    fl_cobra_fisica_juridica = models.CharField(max_length=1, blank=True, null=True)
    fl_funcionario = models.CharField(max_length=1, blank=True, null=True)
    qt_sal_pago = models.IntegerField(blank=True, null=True)
    senha_funcionario = models.CharField(max_length=10, blank=True, null=True)
    f_ativo = models.CharField(max_length=1, blank=True, null=True)
    cd_tipo_funcionario = models.CharField(max_length=2, blank=True, null=True)
    cd_grupo_garcon = models.CharField(max_length=2, blank=True, null=True)
    dt_ini_ferias_lic = models.DateField(blank=True, null=True)
    dt_fim_ferias_lic = models.DateField(blank=True, null=True)
    dt_demissao = models.DateField(blank=True, null=True)
    cd_uf_conselho = models.CharField(max_length=2, blank=True, null=True)
    cd_conselho = models.CharField(max_length=10, blank=True, null=True)
    cd_tipo_prof = models.CharField(max_length=8, blank=True, null=True)
    cd_funcionario = models.IntegerField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    cd_associado = models.IntegerField(blank=True, null=True)
    cd_cooperativa = models.CharField(max_length=1, blank=True, null=True)
    pc_acrescimo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_desconto = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    dt_cadastro = models.DateField(blank=True, null=True)
    cd_classe_medico = models.IntegerField(blank=True, null=True)
    fone = models.FloatField(blank=True, null=True)
    ddd = models.FloatField(blank=True, null=True)
    cd_tipo_negociacao = models.CharField(max_length=2, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_profissional'


class AuPropriedade(models.Model):
    cd_acao_audit = models.FloatField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    nm_propriedade = models.CharField(max_length=256, blank=True, null=True)
    vl_propriedade = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_propriedade'


class AuProrrogacaoGuia(models.Model):
    cd_acao = models.NullBooleanField()
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    dt_ini_prorrogacao = models.DateField(blank=True, null=True)
    dt_fim_prorrogacao = models.DateField(blank=True, null=True)
    dt_autoriza_prorrogacao = models.DateField(blank=True, null=True)
    cd_auditor = models.FloatField(blank=True, null=True)
    cd_classe_auditor = models.NullBooleanField()
    hr_ini_prorrogacao = models.IntegerField(blank=True, null=True)
    hr_fim_prorrogacao = models.IntegerField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_prorrogacao_guia'


class AuPublicacaoControle(models.Model):
    cd_sacti = models.CharField(max_length=10)
    fl_id = models.CharField(max_length=2)
    nm_descricao = models.CharField(max_length=200, blank=True, null=True)
    dt_ativacao = models.DateField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    cd_acao = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    nm_operador_audit = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_publicacao_controle'


class AuQualificacaoPreLaudo(models.Model):
    cd_qualificacao_pre_laudo = models.FloatField(blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_profissional_laudo = models.IntegerField(blank=True, null=True)
    nu_qualificacao = models.IntegerField(blank=True, null=True)
    cd_profissional_qualificador = models.IntegerField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=128, blank=True, null=True)
    dt_qualificacao = models.DateField(blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_qualificacao_pre_laudo'


class AuRealizOncoHist(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_estoq = models.FloatField(blank=True, null=True)
    prc_mat_med_estoq = models.FloatField(blank=True, null=True)
    cd_agenda = models.FloatField(blank=True, null=True)
    cd_modelo = models.FloatField(blank=True, null=True)
    cd_ordem_prescricao_plano = models.FloatField(blank=True, null=True)
    dt_agenda = models.DateField(blank=True, null=True)
    cd_mat_med = models.FloatField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_paciente = models.FloatField(blank=True, null=True)
    cd_pessoa_hosp = models.FloatField(blank=True, null=True)
    cd_pessoa_hap = models.FloatField(blank=True, null=True)
    nm_pessoa = models.CharField(max_length=45, blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    nome_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_realiz_onco_hist'


class AuRegistroCirurgia(models.Model):
    cd_acao_audit = models.FloatField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    id_registro = models.IntegerField(blank=True, null=True)
    cd_paciente = models.IntegerField(blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_tipo_anestesia = models.IntegerField(blank=True, null=True)
    dt_inicio_cirurgia = models.DateField(blank=True, null=True)
    dt_fim_cirurgia = models.DateField(blank=True, null=True)
    hr_inicio_cirurgia = models.IntegerField(blank=True, null=True)
    hr_fim_cirurgia = models.IntegerField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=500, blank=True, null=True)
    hr_anestesia = models.IntegerField(blank=True, null=True)
    fl_cancelado = models.CharField(max_length=1, blank=True, null=True)
    cd_motivo_cancel = models.IntegerField(blank=True, null=True)
    cd_sala_cirurgica = models.CharField(max_length=6, blank=True, null=True)
    id_kit = models.IntegerField(blank=True, null=True)
    fl_video = models.CharField(max_length=1, blank=True, null=True)
    hr_fim_anestesia = models.IntegerField(blank=True, null=True)
    cd_porte_cirurgia = models.IntegerField(blank=True, null=True)
    cd_procedimento2 = models.CharField(max_length=8, blank=True, null=True)
    cd_procedimento3 = models.CharField(max_length=8, blank=True, null=True)
    cd_procedimento4 = models.CharField(max_length=8, blank=True, null=True)
    fl_raiox = models.CharField(max_length=1, blank=True, null=True)
    cd_asa = models.FloatField(blank=True, null=True)
    cd_grau_contaminacao = models.CharField(max_length=1, blank=True, null=True)
    fl_convencional = models.CharField(max_length=1, blank=True, null=True)
    fl_envia_pelicula_plano = models.CharField(max_length=1, blank=True, null=True)
    fl_ch_antes_inducao_ane = models.CharField(max_length=1, blank=True, null=True)
    fl_ch_antes_incisao_cir = models.CharField(max_length=1, blank=True, null=True)
    fl_ch_antes_paciente_sair_sala = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_registro_cirurgia'


class AuRegistroCotacao(models.Model):
    cd_acao = models.NullBooleanField()
    cd_cotacao = models.IntegerField(blank=True, null=True)
    dt_regsitro = models.DateField(blank=True, null=True)
    fl_tipo_cotacao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_registro_cotacao'


class AuRegistroRes1(models.Model):
    ds_servico = models.CharField(max_length=3, blank=True, null=True)
    cd_registro = models.NullBooleanField()
    cd_origem = models.IntegerField(blank=True, null=True)
    nu_lote_pedido = models.IntegerField(blank=True, null=True)
    cd_pedido = models.CharField(max_length=20, blank=True, null=True)
    cd_exame = models.CharField(max_length=5, blank=True, null=True)
    ds_parametro = models.CharField(max_length=10, blank=True, null=True)
    ds_resultado = models.CharField(max_length=70, blank=True, null=True)
    ds_unidade = models.CharField(max_length=20, blank=True, null=True)
    fl_normalidade = models.NullBooleanField()
    ds_filler = models.CharField(max_length=6, blank=True, null=True)
    nu_registro = models.IntegerField(blank=True, null=True)
    dt_processamento = models.CharField(max_length=16, blank=True, null=True)
    dt_registro = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_registro_res1'


class AuRemessaConvenio(models.Model):
    cd_acao_audit = models.FloatField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_empresa_cobra = models.FloatField(blank=True, null=True)
    cd_convenio = models.FloatField(blank=True, null=True)
    dt_remessa = models.DateField(blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    dt_fim = models.DateField(blank=True, null=True)
    dt_pagamento = models.DateField(blank=True, null=True)
    vl_total_honorario = models.FloatField(blank=True, null=True)
    vl_total_diaria = models.FloatField(blank=True, null=True)
    vl_total_taxa = models.FloatField(blank=True, null=True)
    vl_total_mat = models.FloatField(blank=True, null=True)
    vl_total_med = models.FloatField(blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    vl_total_outros = models.FloatField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    tl_recuperado = models.FloatField(blank=True, null=True)
    nu_seq_remessa = models.IntegerField(blank=True, null=True)
    nu_remessa_origem = models.FloatField(blank=True, null=True)
    fl_custo_operacional = models.CharField(max_length=1, blank=True, null=True)
    cd_classe_atendimento = models.NullBooleanField()
    fl_gerar_automaticamente = models.NullBooleanField()
    fl_remessa_sem_atendimento = models.NullBooleanField()
    fl_status_geracao_automatica = models.FloatField(blank=True, null=True)
    qt_caixa = models.FloatField(blank=True, null=True)
    dt_envio = models.DateField(blank=True, null=True)
    fl_status_envio = models.CharField(max_length=1, blank=True, null=True)
    dt_ent_same = models.DateField(blank=True, null=True)
    fl_conferida = models.CharField(max_length=1, blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    nm_operador_same = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_remessa_convenio'


class AuRepasseMedico(models.Model):
    cd_acao = models.NullBooleanField()
    cd_pessoa = models.IntegerField(blank=True, null=True)
    dt_pagamento = models.DateField(blank=True, null=True)
    cd_convenio = models.IntegerField(blank=True, null=True)
    nu_remessa = models.IntegerField(blank=True, null=True)
    dt_remessa = models.DateField(blank=True, null=True)
    vl_faturado = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_pago = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    cd_obrigacao = models.IntegerField(blank=True, null=True)
    dt_obrigacao = models.DateField(blank=True, null=True)
    nu_nfiscal = models.CharField(max_length=10, blank=True, null=True)
    cd_cedente_sacado = models.BigIntegerField(blank=True, null=True)
    fl_bloqueio = models.CharField(max_length=1, blank=True, null=True)
    fl_isento = models.CharField(max_length=1, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    cd_associado = models.IntegerField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_repasse_medico'


class AuRestricaoHapvida(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_restricao = models.FloatField(blank=True, null=True)
    ds_restricao = models.CharField(max_length=80, blank=True, null=True)
    fl_libera_urgencia = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_restricao_hapvida'


class AuResultadoProcedimento(models.Model):
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    sq_resultado = models.BigIntegerField(blank=True, null=True)
    cd_parametro_referencia = models.IntegerField(blank=True, null=True)
    vl_resultado_parametro = models.DecimalField(max_digits=15, decimal_places=5, blank=True, null=True)
    ds_resultado_procedimento = models.CharField(max_length=50, blank=True, null=True)
    cd_unidade_usual = models.CharField(max_length=2, blank=True, null=True)
    vl_formula = models.CharField(max_length=50, blank=True, null=True)
    fl_valor_parametro = models.CharField(max_length=1, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_perfil = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_resultado_procedimento'


class AuSenhaAtendimentoSa(models.Model):
    ds_obs_enfermagem = models.CharField(max_length=500, blank=True, null=True)
    dt_exame_importado = models.DateField(blank=True, null=True)
    cd_senha_master = models.IntegerField(blank=True, null=True)
    cd_grupo_atendimento = models.IntegerField(blank=True, null=True)
    cd_local_atendimento = models.IntegerField(blank=True, null=True)
    cd_senha_atendimento = models.IntegerField(blank=True, null=True)
    dt_geracao_senha = models.DateField(blank=True, null=True)
    fl_tipo_senha = models.NullBooleanField()
    cd_atendimento = models.IntegerField(blank=True, null=True)
    dt_inicio_cadastro = models.DateField(blank=True, null=True)
    dt_fim_cadastro = models.DateField(blank=True, null=True)
    cd_operador_cadastro = models.CharField(max_length=20, blank=True, null=True)
    cd_usuario = models.CharField(max_length=17, blank=True, null=True)
    cd_operador_inicio = models.CharField(max_length=20, blank=True, null=True)
    dt_inicio_atendimento = models.DateField(blank=True, null=True)
    cd_operador_fim = models.CharField(max_length=20, blank=True, null=True)
    dt_fim_atendimento = models.DateField(blank=True, null=True)
    fl_status = models.IntegerField(blank=True, null=True)
    cd_ponto_atendimento_cad = models.IntegerField(blank=True, null=True)
    cd_ponto_atendimento_ate = models.IntegerField(blank=True, null=True)
    fl_toca_som = models.NullBooleanField()
    nm_paciente = models.CharField(max_length=45, blank=True, null=True)
    vl_idade = models.IntegerField(blank=True, null=True)
    cd_paciente = models.IntegerField(blank=True, null=True)
    fl_prioridade = models.NullBooleanField()
    dt_fim_consulta_pac_obs = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_ordem = models.DateField(blank=True, null=True)
    cd_senha_master_uni = models.IntegerField(blank=True, null=True)
    nm_operador_obs_retorno = models.CharField(max_length=20, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    fl_status_anterior = models.IntegerField(blank=True, null=True)
    fl_principal = models.CharField(max_length=1, blank=True, null=True)
    cd_grupo_consultorio = models.IntegerField(blank=True, null=True)
    dt_cancela_chamada = models.DateField(blank=True, null=True)
    fl_triagem = models.CharField(max_length=1, blank=True, null=True)
    cd_nivel_classificacao_risco = models.IntegerField(blank=True, null=True)
    cd_operador_inicio_triagem = models.CharField(max_length=20, blank=True, null=True)
    dt_inicio_triagem = models.DateField(blank=True, null=True)
    dt_fim_triagem = models.DateField(blank=True, null=True)
    dt_ind_obs_eme = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_senha_atendimento_sa'


class AuSetor(models.Model):
    fl_imagem_digital = models.CharField(max_length=1, blank=True, null=True)
    fl_impressora_grafica = models.CharField(max_length=1, blank=True, null=True)
    fl_imprime_req_antes_lib = models.CharField(max_length=1, blank=True, null=True)
    fl_imprime_req_apos_lib = models.CharField(max_length=1, blank=True, null=True)
    fl_sala_recuperacao = models.CharField(max_length=1, blank=True, null=True)
    fl_gera_amostra_liberada = models.CharField(max_length=1, blank=True, null=True)
    fl_validacao_web = models.CharField(max_length=1, blank=True, null=True)
    fl_imp_face = models.CharField(max_length=1, blank=True, null=True)
    nu_tempo_validacao_web = models.IntegerField(blank=True, null=True)
    fl_almoxarifado = models.CharField(max_length=1, blank=True, null=True)
    fl_principal = models.CharField(max_length=1, blank=True, null=True)
    fl_cpd = models.CharField(max_length=1, blank=True, null=True)
    fl_faturamento = models.CharField(max_length=1, blank=True, null=True)
    fl_bercario = models.CharField(max_length=1, blank=True, null=True)
    fl_maternidade = models.CharField(max_length=1, blank=True, null=True)
    fl_centro_obstetrico = models.CharField(max_length=1, blank=True, null=True)
    fl_snd = models.CharField(max_length=1, blank=True, null=True)
    fl_restaurante = models.CharField(max_length=1, blank=True, null=True)
    cd_operacao_cr = models.FloatField(blank=True, null=True)
    cd_operacao_db = models.FloatField(blank=True, null=True)
    fl_laboratorio = models.CharField(max_length=1, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    fl_homecare = models.CharField(max_length=1, blank=True, null=True)
    fl_consulta_auto = models.CharField(max_length=1, blank=True, null=True)
    fl_uti = models.CharField(max_length=1, blank=True, null=True)
    fl_hapclinica = models.CharField(max_length=1, blank=True, null=True)
    fl_imp_digital = models.CharField(max_length=1, blank=True, null=True)
    fl_manutencao = models.CharField(max_length=1, blank=True, null=True)
    id_centro_custo_finpac = models.IntegerField(blank=True, null=True)
    fl_controla_lote = models.CharField(max_length=1, blank=True, null=True)
    cd_mapa = models.IntegerField(blank=True, null=True)
    fl_projeto_social = models.CharField(max_length=1, blank=True, null=True)
    cd_setor_req = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_reposicao = models.CharField(max_length=6, blank=True, null=True)
    fl_produtividade_medica = models.CharField(max_length=1, blank=True, null=True)
    fl_comanda_automatica = models.CharField(max_length=1, blank=True, null=True)
    dt_comanda_aut_apartir = models.DateField(blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    nm_setor = models.CharField(max_length=45, blank=True, null=True)
    fl_requisita = models.CharField(max_length=1, blank=True, null=True)
    fl_controla = models.CharField(max_length=1, blank=True, null=True)
    fl_transforma = models.CharField(max_length=1, blank=True, null=True)
    fl_aloca_pessoal = models.CharField(max_length=1, blank=True, null=True)
    fl_recebe = models.CharField(max_length=1, blank=True, null=True)
    fl_posto = models.CharField(max_length=1, blank=True, null=True)
    cd_setor_sup = models.CharField(max_length=6, blank=True, null=True)
    ds_localizacao = models.CharField(max_length=45, blank=True, null=True)
    fl_interna = models.CharField(max_length=1, blank=True, null=True)
    fl_externo = models.CharField(max_length=1, blank=True, null=True)
    fl_alimentacao = models.CharField(max_length=1, blank=True, null=True)
    fl_estoque_proprio = models.CharField(max_length=1, blank=True, null=True)
    nu_telefone_principal = models.CharField(max_length=10, blank=True, null=True)
    nu_telefone_secundario = models.CharField(max_length=10, blank=True, null=True)
    ds_observacao = models.CharField(max_length=200, blank=True, null=True)
    fl_ped_exa_auto = models.CharField(max_length=1, blank=True, null=True)
    cd_setor_emp = models.CharField(max_length=3, blank=True, null=True)
    cd_setor_grupo = models.CharField(max_length=6, blank=True, null=True)
    nu_pedido_inf = models.IntegerField(blank=True, null=True)
    nu_pedido_sup = models.IntegerField(blank=True, null=True)
    cd_setor_dev = models.CharField(max_length=6, blank=True, null=True)
    fl_recepcao = models.CharField(max_length=1, blank=True, null=True)
    fl_sadt = models.CharField(max_length=1, blank=True, null=True)
    fl_centro_cirurgico = models.CharField(max_length=1, blank=True, null=True)
    fl_emergencia = models.CharField(max_length=1, blank=True, null=True)
    fl_hemodinamica = models.CharField(max_length=1, blank=True, null=True)
    fl_farmacia_central = models.CharField(max_length=1, blank=True, null=True)
    fl_farmacia_apoio = models.CharField(max_length=1, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    fl_fornecedor = models.CharField(max_length=1, blank=True, null=True)
    fl_farmacia_consignados = models.CharField(max_length=1, blank=True, null=True)
    fl_trauma = models.CharField(max_length=1, blank=True, null=True)
    fl_ficha_atend_reduzida = models.CharField(max_length=1, blank=True, null=True)
    fl_pendencia_automatica = models.CharField(max_length=1, blank=True, null=True)
    id_almox = models.IntegerField(blank=True, null=True)
    fl_amb_externo_empresas = models.CharField(max_length=1, blank=True, null=True)
    hr_horario_solucao = models.CharField(max_length=5, blank=True, null=True)
    cd_setor_destino_padrao = models.CharField(max_length=6, blank=True, null=True)
    fl_sala_gesso = models.CharField(max_length=1, blank=True, null=True)
    fl_sala_peq_cirurgia = models.CharField(max_length=1, blank=True, null=True)
    fl_imp_digital_exame = models.CharField(max_length=1, blank=True, null=True)
    fl_validacao_web_exame = models.CharField(max_length=1, blank=True, null=True)
    fl_pediatria = models.CharField(max_length=1, blank=True, null=True)
    fl_log_imagem_digital = models.CharField(max_length=1, blank=True, null=True)
    fl_imagem_foto = models.CharField(max_length=1, blank=True, null=True)
    fl_controla_recebimento = models.CharField(max_length=1, blank=True, null=True)
    fl_imagens_pacs = models.CharField(max_length=1, blank=True, null=True)
    fl_densidade_codbar = models.CharField(max_length=4, blank=True, null=True)
    cd_setor_pacs = models.FloatField(blank=True, null=True)
    fl_estoque_rec_tra = models.CharField(max_length=1, blank=True, null=True)
    cd_setor_coleta = models.CharField(max_length=6, blank=True, null=True)
    fl_orcamento_compra = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_coleta = models.FloatField(blank=True, null=True)
    fl_oncologia = models.CharField(max_length=1, blank=True, null=True)
    cd_setor_frac = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_transacao_erp = models.CharField(max_length=6, blank=True, null=True)
    fl_matmed_redepropria = models.CharField(max_length=1, blank=True, null=True)
    fl_integra_estoque_erp = models.CharField(max_length=1, blank=True, null=True)
    fl_libera_emprestimo = models.CharField(max_length=1, blank=True, null=True)
    fl_exclui_do_ind_ocup = models.CharField(max_length=1, blank=True, null=True)
    cd_setor_estoque = models.CharField(max_length=6, blank=True, null=True)
    fl_contagem_manual = models.CharField(max_length=1, blank=True, null=True)
    fl_implanta_pulseira = models.CharField(max_length=1, blank=True, null=True)
    fl_redepropria_almox = models.CharField(max_length=1, blank=True, null=True)
    fl_sala_observacao = models.CharField(max_length=1, blank=True, null=True)
    cd_mnemonico_setor = models.CharField(max_length=4, blank=True, null=True)
    fl_uso_restrito = models.CharField(max_length=1, blank=True, null=True)
    fl_exige_leitura_material_mob = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_setor'


class AuSimilar(models.Model):
    cd_acao = models.NullBooleanField()
    cd_similar = models.CharField(max_length=4, blank=True, null=True)
    nm_similar = models.CharField(max_length=45, blank=True, null=True)
    qt_estoque_minimo = models.FloatField(blank=True, null=True)
    qt_lote_reposicao = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_similar'


class AuSumarioOncoHist(models.Model):
    cd_acao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    prc_estoque_fin_estoq = models.FloatField(blank=True, null=True)
    qtd_estoque_ini_unit = models.FloatField(blank=True, null=True)
    qtd_estoque_ini_man_unit = models.FloatField(blank=True, null=True)
    qtd_autorizado_estoq = models.FloatField(blank=True, null=True)
    qtd_agendado_estoq = models.FloatField(blank=True, null=True)
    qtd_comprado_unit = models.FloatField(blank=True, null=True)
    qtd_planejado_estoq = models.FloatField(blank=True, null=True)
    qtd_manipulado_estoq = models.FloatField(blank=True, null=True)
    qtd_administrado_estoq = models.FloatField(blank=True, null=True)
    qtd_perda_estab_estoq = models.FloatField(blank=True, null=True)
    qtd_faturado_estoq = models.FloatField(blank=True, null=True)
    qtd_estoque_fin_man_unit = models.FloatField(blank=True, null=True)
    qtd_estoque_fin_unit = models.FloatField(blank=True, null=True)
    prc_estoque_ini_unit = models.FloatField(blank=True, null=True)
    prc_estoque_ini_man_unit = models.FloatField(blank=True, null=True)
    prc_autorizado_estoq = models.FloatField(blank=True, null=True)
    prc_agendado_estoq = models.FloatField(blank=True, null=True)
    prc_comprado_unit = models.FloatField(blank=True, null=True)
    prc_planejado_estoq = models.FloatField(blank=True, null=True)
    prc_manipulado_estoq = models.FloatField(blank=True, null=True)
    prc_administrado_estoq = models.FloatField(blank=True, null=True)
    prc_perda_estab_estoq = models.FloatField(blank=True, null=True)
    prc_faturado_estoq = models.FloatField(blank=True, null=True)
    prc_estoque_fin_man_unit = models.FloatField(blank=True, null=True)
    prc_estoque_fin_unit = models.FloatField(blank=True, null=True)
    periodo = models.FloatField(blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_mat_med = models.FloatField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_estoque_ini = models.FloatField(blank=True, null=True)
    qtd_estoque_ini_man = models.FloatField(blank=True, null=True)
    qtd_autorizado = models.FloatField(blank=True, null=True)
    qtd_agendado = models.FloatField(blank=True, null=True)
    qtd_comprado = models.FloatField(blank=True, null=True)
    qtd_planejado = models.FloatField(blank=True, null=True)
    qtd_manipulado = models.FloatField(blank=True, null=True)
    qtd_administrado = models.FloatField(blank=True, null=True)
    qtd_perda_estab = models.FloatField(blank=True, null=True)
    qtd_faturado = models.FloatField(blank=True, null=True)
    qtd_estoque_fin_man = models.FloatField(blank=True, null=True)
    qtd_estoque_fin = models.FloatField(blank=True, null=True)
    prc_estoque_ini_estoq = models.FloatField(blank=True, null=True)
    prc_estoque_ini_man_estoq = models.FloatField(blank=True, null=True)
    prc_autorizado_unit = models.FloatField(blank=True, null=True)
    prc_agendado_unit = models.FloatField(blank=True, null=True)
    prc_comprado_estoq = models.FloatField(blank=True, null=True)
    prc_planejado_unit = models.FloatField(blank=True, null=True)
    prc_manipulado_unit = models.FloatField(blank=True, null=True)
    prc_administrado_unit = models.FloatField(blank=True, null=True)
    prc_perda_estab_unit = models.FloatField(blank=True, null=True)
    prc_faturado_unit = models.FloatField(blank=True, null=True)
    prc_estoque_fin_man_estoq = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_sumario_onco_hist'


class AuTaxas(models.Model):
    cd_acao = models.NullBooleanField()
    cd_taxas = models.CharField(max_length=8, blank=True, null=True)
    cd_grupo_taxas = models.CharField(max_length=2, blank=True, null=True)
    nm_taxas = models.CharField(max_length=240, blank=True, null=True)
    nr_taxas = models.CharField(max_length=60, blank=True, null=True)
    cd_classe_acomodacao = models.CharField(max_length=60, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_taxas'


class AuTaxasConvenio(models.Model):
    cd_acao = models.NullBooleanField()
    cd_taxas = models.CharField(max_length=8, blank=True, null=True)
    cd_taxas_convenio = models.CharField(max_length=8, blank=True, null=True)
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_plano_convenio = models.IntegerField(blank=True, null=True)
    fl_pagamento = models.CharField(max_length=1, blank=True, null=True)
    nm_taxas_convenio = models.CharField(max_length=240, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_taxas_convenio'


class AuTipoDevolucao(models.Model):
    cd_tipo_devolucao = models.NullBooleanField()
    ds_tipo_devolucao = models.CharField(max_length=50, blank=True, null=True)
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_tipo_devolucao'


class AuTipoDocumentoEscaneavel(models.Model):
    cd_acao = models.NullBooleanField()
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    fl_obrigatorio = models.NullBooleanField()
    fl_remocao_imediata = models.NullBooleanField()
    cd_tipo_documento_escaneavel = models.FloatField(blank=True, null=True)
    ds_tipo_documento_escaneavel = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_tipo_documento_escaneavel'


class AuTipoParecer(models.Model):
    cd_tipo_parecer = models.IntegerField(blank=True, null=True)
    nm_tipo_parecer = models.CharField(max_length=45, blank=True, null=True)
    qt_tempo_atendimento = models.IntegerField(blank=True, null=True)
    cd_unidade_tempo_atend = models.CharField(max_length=2, blank=True, null=True)
    status = models.CharField(max_length=1, blank=True, null=True)
    dt_criacao = models.DateField(blank=True, null=True)
    nm_operador_criacao = models.CharField(max_length=10, blank=True, null=True)
    dt_ult_atu = models.DateField(blank=True, null=True)
    nm_operador_atu = models.CharField(max_length=10, blank=True, null=True)
    cd_acao = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'au_tipo_parecer'


class AuTipoParecerDetalhe(models.Model):
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_especialidade_detalhe = models.IntegerField(blank=True, null=True)
    cd_tipo_parecer = models.IntegerField(blank=True, null=True)
    dt_criacao = models.DateField(blank=True, null=True)
    nm_operador_criacao = models.CharField(max_length=10, blank=True, null=True)
    dt_ult_atu = models.DateField(blank=True, null=True)
    nm_operador_atu = models.CharField(max_length=10, blank=True, null=True)
    cd_acao = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'au_tipo_parecer_detalhe'


class AuUltimaCompra(models.Model):
    cd_acao = models.NullBooleanField()
    cd_material = models.FloatField(blank=True, null=True)
    dt_ultima_compra = models.DateField(blank=True, null=True)
    vl_ultima_compra = models.FloatField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_ultima_compra'


class AuUnidadeAtendimento(models.Model):
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    nm_logotipo_unidade = models.CharField(max_length=10, blank=True, null=True)
    nu_cgc_cpf = models.FloatField(blank=True, null=True)
    nu_ins_est = models.CharField(max_length=20, blank=True, null=True)
    nu_ins_mun = models.CharField(max_length=20, blank=True, null=True)
    nm_municipio = models.CharField(max_length=45, blank=True, null=True)
    cd_uf = models.CharField(max_length=45, blank=True, null=True)
    nm_endereco = models.CharField(max_length=45, blank=True, null=True)
    nm_titular = models.CharField(max_length=45, blank=True, null=True)
    nu_serie = models.CharField(max_length=10, blank=True, null=True)
    cd_pessoa_cobra = models.FloatField(blank=True, null=True)
    nm_path_logotipo = models.CharField(max_length=80, blank=True, null=True)
    cd_vi_associado = models.FloatField(blank=True, null=True)
    qt_mult_conv_proprio = models.FloatField(blank=True, null=True)
    cd_acao = models.IntegerField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_unidade_atendimento'


class AuUsuPreCadastroHapvida(models.Model):
    cd_acao_audit = models.FloatField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    nu_cpf = models.FloatField(blank=True, null=True)
    nu_controle = models.FloatField(blank=True, null=True)
    nu_seq_doc = models.FloatField(blank=True, null=True)
    cd_doc_controle_boleto = models.CharField(max_length=30, blank=True, null=True)
    dt_pagamento = models.DateField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=400, blank=True, null=True)
    ds_arquivo = models.CharField(max_length=256, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)
    dt_validade = models.DateField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_usu_pre_cadastro_hapvida'


class AuVlMatMedBrasindi(models.Model):
    cd_acao = models.NullBooleanField()
    cd_tabela_mat_med = models.IntegerField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_um = models.FloatField(blank=True, null=True)
    vl_mat_med = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    dt_vigencia = models.DateField(blank=True, null=True)
    cd_unidade = models.CharField(max_length=2, blank=True, null=True)
    fl_tipo = models.CharField(max_length=1, blank=True, null=True)
    pc_alteracao = models.IntegerField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_vl_mat_med_brasindi'


class AuVlMatMedConvenio(models.Model):
    cd_acao = models.NullBooleanField()
    cd_tabela_mat_med = models.IntegerField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_um = models.FloatField(blank=True, null=True)
    vl_mat_med = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    dt_vigencia = models.DateField(blank=True, null=True)
    cd_unidade = models.CharField(max_length=2, blank=True, null=True)
    fl_tipo = models.CharField(max_length=1, blank=True, null=True)
    pc_alteracao = models.IntegerField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_vl_mat_med_convenio'


class AuVlProcedimentoConvenio(models.Model):
    cd_acao = models.NullBooleanField()
    cd_tabela_procedimento = models.IntegerField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_um = models.FloatField(blank=True, null=True)
    vl_procedimento = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    dt_vigencia = models.DateField(blank=True, null=True)
    vl_particular = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    fl_tipo = models.CharField(max_length=1, blank=True, null=True)
    pc_alteracao = models.IntegerField(blank=True, null=True)
    qt_filme_m2 = models.DecimalField(max_digits=6, decimal_places=4, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    qt_um_custo = models.FloatField(blank=True, null=True)
    qt_auxiliares = models.FloatField(blank=True, null=True)
    nu_porte_anestesico = models.FloatField(blank=True, null=True)
    qt_incidencia = models.FloatField(blank=True, null=True)
    cd_porte_procedimento = models.CharField(max_length=5, blank=True, null=True)
    qt_porte_procedimento = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_vl_procedimento_convenio'


class AuVlTaxasConvenio(models.Model):
    cd_acao = models.NullBooleanField()
    cd_tabela_taxa = models.IntegerField(blank=True, null=True)
    cd_taxas = models.CharField(max_length=8, blank=True, null=True)
    cd_um = models.FloatField(blank=True, null=True)
    vl_taxas = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    dt_vigencia = models.DateField(blank=True, null=True)
    fl_tipo = models.CharField(max_length=1, blank=True, null=True)
    pc_alteracao = models.IntegerField(blank=True, null=True)
    qt_ch = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'au_vl_taxas_convenio'


class BkpMetodoProcedimento(models.Model):
    cd_procedimento = models.CharField(max_length=8)
    cd_metodo_realizado = models.IntegerField()
    cd_metodo_usual = models.CharField(max_length=1, blank=True, null=True)
    dt_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_laboratorio_apoio = models.FloatField(blank=True, null=True)
    cd_laboratorio_ter = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bkp_metodo_procedimento'


class BkpMetodoRealizado(models.Model):
    cd_metodo_realizado = models.IntegerField()
    ds_metodo_realizado = models.CharField(max_length=100, blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    dt_vigencia = models.DateField(blank=True, null=True)
    fl_filial = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bkp_metodo_realizado'


class BkpMetodoRealizadoFilial(models.Model):
    cd_metodo_realizado = models.IntegerField()
    cd_unidade_atendimento = models.CharField(max_length=3)
    fl_ativo = models.CharField(max_length=1)
    cd_operador = models.CharField(max_length=30)
    dt_modificacao = models.DateField()

    class Meta:
        managed = False
        db_table = 'bkp_metodo_realizado_filial'


class BkpParamParametroReferencia(models.Model):
    cd_ref = models.FloatField()
    cd_procedimento = models.CharField(max_length=8)
    cd_metodo_realizado = models.IntegerField()
    cd_sexo = models.CharField(max_length=1)
    fl_unidade_tempo = models.CharField(max_length=1)
    qt_idade_inicial = models.IntegerField()
    qt_idade_final = models.IntegerField()
    fl_datacheck = models.CharField(max_length=1, blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bkp_param_parametro_referencia'


class BkpProcTextoResultado(models.Model):
    cd_procedimento = models.CharField(max_length=8)
    cd_metodo_realizado = models.IntegerField()
    cd_parametro_referencia = models.IntegerField()
    cd_ordem = models.IntegerField()
    ds_texto_resultado = models.CharField(max_length=60)
    fl_referencia = models.CharField(max_length=1)
    cd_ref = models.FloatField()

    class Meta:
        managed = False
        db_table = 'bkp_proc_texto_resultado'


class BkpProcedParamReferencia(models.Model):
    cd_procedimento = models.CharField(max_length=8)
    cd_metodo_realizado = models.IntegerField()
    cd_parametro_referencia = models.IntegerField()
    cd_ordem = models.IntegerField()
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    qt_idade_inicial = models.IntegerField(blank=True, null=True)
    qt_idade_final = models.IntegerField(blank=True, null=True)
    fl_unidade_tempo = models.CharField(max_length=1, blank=True, null=True)
    vl_parametro_minimo = models.DecimalField(max_digits=9, decimal_places=2, blank=True, null=True)
    vl_parametro_maximo = models.DecimalField(max_digits=9, decimal_places=2, blank=True, null=True)
    vl_parametro_normal = models.DecimalField(max_digits=9, decimal_places=2, blank=True, null=True)
    fl_valor_parametro = models.CharField(max_length=1, blank=True, null=True)
    ds_valor_parametro = models.CharField(max_length=2000, blank=True, null=True)
    cd_unidade_usual = models.CharField(max_length=2, blank=True, null=True)
    vl_formula = models.CharField(max_length=50, blank=True, null=True)
    qt_decimal = models.NullBooleanField()
    dt_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_fator_conversao = models.FloatField(blank=True, null=True)
    fl_aparecer_laudo = models.CharField(max_length=1, blank=True, null=True)
    cd_referencia = models.CharField(max_length=2, blank=True, null=True)
    fl_tipo_valor = models.CharField(max_length=1, blank=True, null=True)
    ds_texto_resultado = models.CharField(max_length=60, blank=True, null=True)
    cd_ref = models.FloatField(blank=True, null=True)
    cd_proced_param_referencia = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bkp_proced_param_referencia'


class CpVlMatMedConvenio(models.Model):
    cd_tabela_mat_med = models.IntegerField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_um = models.FloatField(blank=True, null=True)
    vl_mat_med = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    dt_vigencia = models.DateField(blank=True, null=True)
    cd_unidade = models.CharField(max_length=2, blank=True, null=True)
    fl_tipo = models.CharField(max_length=1, blank=True, null=True)
    pc_alteracao = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'cp_vl_mat_med_convenio'


class CreateJavaLobTable(models.Model):
    name = models.CharField(unique=True, max_length=700, blank=True, null=True)
    lob = models.BinaryField(blank=True, null=True)
    loadtime = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'create$java$lob$table'


class DeptreeTemptab(models.Model):
    object_id = models.FloatField(blank=True, null=True)
    referenced_object_id = models.FloatField(blank=True, null=True)
    nest_level = models.FloatField(blank=True, null=True)
    seq_field = models.FloatField(db_column='seq#', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.

    class Meta:
        managed = False
        db_table = 'deptree_temptab'


class DjangoContentType(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    name = models.CharField(max_length=100, blank=True, null=True)
    app_label = models.CharField(max_length=100, blank=True, null=True)
    model = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'django_content_type'
        unique_together = (('app_label', 'model'),)


class DjangoMigrations(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    app = models.CharField(max_length=255, blank=True, null=True)
    name = models.CharField(max_length=255, blank=True, null=True)
    applied = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_migrations'


class Dummy(models.Model):
    dummy = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dummy'


class GtParametroFormulario(models.Model):
    nm_parametro = models.CharField(primary_key=True, max_length=256)
    vl_parametro = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gt_parametro_formulario'


class MenuBAppl(models.Model):
    application_name = models.CharField(max_length=30)
    short_name = models.CharField(max_length=15)
    file_name = models.CharField(max_length=30)
    creation_date = models.DateField()
    creator = models.CharField(max_length=30)
    version_release_nr = models.FloatField()
    last_release_date = models.DateField(blank=True, null=True)
    menu_directory = models.CharField(max_length=50, blank=True, null=True)
    identification = models.CharField(max_length=40)

    class Meta:
        managed = False
        db_table = 'menu_b_appl'


class MenuBApplGrp(models.Model):
    application_name = models.CharField(max_length=30)
    group_name = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'menu_b_appl_grp'


class MenuBCircle(models.Model):
    seq_key = models.FloatField()
    menu_name = models.CharField(max_length=30)
    command_line = models.CharField(max_length=240)

    class Meta:
        managed = False
        db_table = 'menu_b_circle'


class MenuBGroup(models.Model):
    group_name = models.CharField(max_length=30)
    debug_allowed = models.CharField(max_length=1)
    os_comm_allowed = models.CharField(max_length=1)
    bgm_allowed = models.CharField(max_length=1)
    object_text_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'menu_b_group'


class MenuBGrpPriv(models.Model):
    application_name = models.CharField(max_length=30)
    group_name = models.CharField(max_length=30)
    privilege_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'menu_b_grp_priv'


class MenuBInfo(models.Model):
    menu_name = models.CharField(max_length=30)
    application_name = models.CharField(max_length=30)
    title = models.CharField(max_length=40)
    sub_title = models.CharField(max_length=40)
    bottom_title = models.CharField(max_length=72, blank=True, null=True)
    object_text_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'menu_b_info'


class MenuBObjText(models.Model):
    application_name = models.CharField(max_length=30)
    object_text_id = models.FloatField()
    object_text_order = models.FloatField()
    object_text = models.CharField(max_length=78, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'menu_b_obj_text'


class MenuBOption(models.Model):
    menu_name = models.CharField(max_length=30)
    application_name = models.CharField(max_length=30)
    option_number = models.FloatField()
    short_name = models.CharField(max_length=15)
    displayed = models.CharField(max_length=1)
    option_text = models.CharField(max_length=70)
    object_text_id = models.FloatField()
    command_type = models.FloatField()
    command_line = models.CharField(max_length=240)

    class Meta:
        managed = False
        db_table = 'menu_b_option'


class MenuBParam(models.Model):
    substitution_string = models.CharField(max_length=2)
    application_name = models.CharField(max_length=30)
    par_size = models.FloatField()
    par_def = models.CharField(max_length=64, blank=True, null=True)
    echo = models.CharField(max_length=1)
    must_fill = models.CharField(max_length=1)
    response_required = models.CharField(max_length=1)
    upper_case = models.CharField(max_length=1)
    object_text_id = models.FloatField(blank=True, null=True)
    prompt = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'menu_b_param'


class MenuBParmXref(models.Model):
    menu_name = models.CharField(max_length=30)
    application_name = models.CharField(max_length=30)
    substitution_string = models.CharField(max_length=2)

    class Meta:
        managed = False
        db_table = 'menu_b_parm_xref'


class MenuBPriv(models.Model):
    privilege_id = models.FloatField()
    privilege_type = models.CharField(max_length=3)
    application_name = models.CharField(max_length=30)
    menu_name = models.CharField(max_length=30)
    option_number = models.FloatField()

    class Meta:
        managed = False
        db_table = 'menu_b_priv'


class MenuBProcedure(models.Model):
    application_name = models.CharField(max_length=30)
    procedure_name = models.CharField(max_length=30)
    object_text_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'menu_b_procedure'


class MenuBRef(models.Model):
    application_name = models.CharField(max_length=30)
    ref_type = models.FloatField()
    ref_app_name = models.CharField(max_length=30)
    ref_menu_name = models.CharField(max_length=30, blank=True, null=True)
    ref_opt_name = models.CharField(max_length=15, blank=True, null=True)
    ref_parm_name = models.CharField(max_length=2, blank=True, null=True)
    ref_proc_name = models.CharField(max_length=30, blank=True, null=True)
    new_menu_name = models.CharField(max_length=30, blank=True, null=True)
    new_opt_name = models.CharField(max_length=15, blank=True, null=True)
    new_parm_name = models.CharField(max_length=2, blank=True, null=True)
    new_proc_name = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'menu_b_ref'


class MenuBUser(models.Model):
    group_name = models.CharField(max_length=30)
    user_name = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'menu_b_user'


class MvProtocolos(models.Model):
    id = models.FloatField(blank=True, null=True)
    url = models.CharField(max_length=4000, blank=True, null=True)
    codigo_atendimento = models.FloatField(blank=True, null=True)
    cd_protocolo = models.CharField(max_length=255, blank=True, null=True)
    nm_protocolo = models.CharField(max_length=1000, blank=True, null=True)
    cd_modelo = models.FloatField(blank=True, null=True)
    passo_corrente = models.CharField(max_length=4000, blank=True, null=True)
    finalizado = models.CharField(max_length=1, blank=True, null=True)
    abortado = models.CharField(max_length=1, blank=True, null=True)
    codigo_paciente = models.FloatField(blank=True, null=True)
    paciente = models.CharField(max_length=256, blank=True, null=True)
    profissional = models.CharField(max_length=256, blank=True, null=True)
    data_criacao = models.DateField(blank=True, null=True)
    data_conclusao = models.DateField(blank=True, null=True)
    tempo_execucao = models.FloatField(blank=True, null=True)
    justificativa = models.CharField(max_length=4000, blank=True, null=True)
    visual_attribute = models.CharField(max_length=64, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mv_protocolos'


class PixeonIntegExames(models.Model):
    na_accessionnumber = models.CharField(primary_key=True, max_length=16)
    na_datetimeperformed = models.CharField(max_length=14, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pixeon_integ_exames'


class PixeonIntegExamsN1(models.Model):
    na_accessionumber = models.CharField(max_length=16, blank=True, null=True)
    na_firstreceivetimestamp = models.BigIntegerField(blank=True, null=True)
    na_lastreceivetimestamp = models.BigIntegerField(blank=True, null=True)
    na_firstacqdatetime = models.CharField(max_length=15, blank=True, null=True)
    na_lastacqdatetime = models.CharField(max_length=15, blank=True, null=True)
    number_of_images = models.FloatField(blank=True, null=True)
    na_unit = models.CharField(max_length=255, blank=True, null=True)
    exam_available = models.CharField(max_length=1, blank=True, null=True)
    na_datetimeintegrated = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pixeon_integ_exams_n1'


class PixeonIntegExamsN2(models.Model):
    na_accessionumber = models.CharField(max_length=16, blank=True, null=True)
    na_firstreceivetimestamp = models.BigIntegerField(blank=True, null=True)
    na_lastreceivetimestamp = models.BigIntegerField(blank=True, null=True)
    number_of_images = models.FloatField(blank=True, null=True)
    na_unit = models.CharField(max_length=255, blank=True, null=True)
    na_datetimeintegrated = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pixeon_integ_exams_n2'


class PixeonIntegExamsN3(models.Model):
    na_accessionumber = models.CharField(max_length=16, blank=True, null=True)
    na_firstreceivetimestamp = models.BigIntegerField(blank=True, null=True)
    na_lastreceivetimestamp = models.BigIntegerField(blank=True, null=True)
    number_of_images = models.FloatField(blank=True, null=True)
    na_unit = models.CharField(max_length=255, blank=True, null=True)
    na_datetimeintegrated = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pixeon_integ_exams_n3'


class PixeonReport(models.Model):
    na_accessionumber = models.CharField(primary_key=True, max_length=50)
    nu_integrated = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pixeon_report'


class PixeonReportIntegrated(models.Model):
    na_accessionumber = models.CharField(primary_key=True, max_length=50)
    na_datetimeperformed = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pixeon_report_integrated'


class PlanTable(models.Model):
    statement_id = models.CharField(max_length=30, blank=True, null=True)
    plan_id = models.FloatField(blank=True, null=True)
    timestamp = models.DateField(blank=True, null=True)
    remarks = models.CharField(max_length=4000, blank=True, null=True)
    operation = models.CharField(max_length=30, blank=True, null=True)
    options = models.CharField(max_length=255, blank=True, null=True)
    object_node = models.CharField(max_length=128, blank=True, null=True)
    object_owner = models.CharField(max_length=30, blank=True, null=True)
    object_name = models.CharField(max_length=30, blank=True, null=True)
    object_alias = models.CharField(max_length=65, blank=True, null=True)
    object_instance = models.BigIntegerField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    optimizer = models.CharField(max_length=255, blank=True, null=True)
    search_columns = models.FloatField(blank=True, null=True)
    id = models.BigIntegerField(blank=True, null=True)
    parent_id = models.BigIntegerField(blank=True, null=True)
    depth = models.BigIntegerField(blank=True, null=True)
    position = models.BigIntegerField(blank=True, null=True)
    cost = models.BigIntegerField(blank=True, null=True)
    cardinality = models.BigIntegerField(blank=True, null=True)
    bytes = models.BigIntegerField(blank=True, null=True)
    other_tag = models.CharField(max_length=255, blank=True, null=True)
    partition_start = models.CharField(max_length=255, blank=True, null=True)
    partition_stop = models.CharField(max_length=255, blank=True, null=True)
    partition_id = models.BigIntegerField(blank=True, null=True)
    other = models.TextField(blank=True, null=True)  # This field type is a guess.
    distribution = models.CharField(max_length=30, blank=True, null=True)
    cpu_cost = models.BigIntegerField(blank=True, null=True)
    io_cost = models.BigIntegerField(blank=True, null=True)
    temp_space = models.BigIntegerField(blank=True, null=True)
    access_predicates = models.CharField(max_length=4000, blank=True, null=True)
    filter_predicates = models.CharField(max_length=4000, blank=True, null=True)
    projection = models.CharField(max_length=4000, blank=True, null=True)
    time = models.BigIntegerField(blank=True, null=True)
    qblock_name = models.CharField(max_length=30, blank=True, null=True)
    other_xml = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'plan_table'


class Tb49PsSintetica(models.Model):
    nm_origem = models.CharField(max_length=1, blank=True, null=True)
    nm_cidade_endereco = models.CharField(max_length=60, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    nm_clinica = models.CharField(max_length=20, blank=True, null=True)
    dt_atendimento = models.DateField(blank=True, null=True)
    fl_consulta = models.FloatField(blank=True, null=True)
    fl_exame = models.FloatField(blank=True, null=True)
    fl_exame_ac_pln = models.FloatField(blank=True, null=True)
    fl_exame_ac_proc = models.FloatField(blank=True, null=True)
    vl_total_cons = models.FloatField(blank=True, null=True)
    vl_total_exa = models.FloatField(blank=True, null=True)
    vl_total_exa_ac = models.FloatField(blank=True, null=True)
    vl_total_matmed = models.FloatField(blank=True, null=True)
    vl_total_tx = models.FloatField(blank=True, null=True)
    vl_total_insumo_tipo9 = models.FloatField(blank=True, null=True)
    vl_total_hon = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_49ps_sintetica'


class TbAcaoResolucaoParecerAud(models.Model):
    cd_reuniao = models.ForeignKey('TbAcaoResolucaoPendencia', models.DO_NOTHING, db_column='cd_reuniao', primary_key=True)
    cd_ordem_acao = models.ForeignKey('TbAcaoResolucaoPendencia', models.DO_NOTHING, db_column='cd_ordem_acao')
    cd_ordem_parecer_aud = models.IntegerField()
    dt_transacao = models.DateField()
    nm_operador = models.CharField(max_length=10)
    ds_parecer_auditoria = models.TextField()

    class Meta:
        managed = False
        db_table = 'tb_acao_resolucao_parecer_aud'
        unique_together = (('cd_reuniao', 'cd_ordem_acao', 'cd_ordem_parecer_aud'),)


class TbAcaoResolucaoPendencia(models.Model):
    cd_reuniao = models.ForeignKey('TbReuniaoAcompanhamento', models.DO_NOTHING, db_column='cd_reuniao', primary_key=True)
    cd_ordem_acao = models.IntegerField()
    cd_atendimento = models.ForeignKey('TbRegistroVisitaSatisfacao', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    cd_ocorrencia_plano = models.ForeignKey('TbRegistroVisitaSatisfacao', models.DO_NOTHING, db_column='cd_ocorrencia_plano', blank=True, null=True)
    cd_ordem_visita = models.ForeignKey('TbRegistroVisitaSatisfacao', models.DO_NOTHING, db_column='cd_ordem_visita', blank=True, null=True)
    ds_acao = models.CharField(max_length=1000, blank=True, null=True)
    dt_previsao_resolucao = models.DateField(blank=True, null=True)
    cd_responsavel = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cd_responsavel', blank=True, null=True)
    cd_reuniao_vinculada = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_reuniao_vinculada', blank=True, null=True)
    cd_ordem_acao_vinculada = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_ordem_acao_vinculada', blank=True, null=True)
    cd_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cd_operador', blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_status = models.ForeignKey('TbStatusAcaoReuniao', models.DO_NOTHING, db_column='cd_status', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_acao_resolucao_pendencia'
        unique_together = (('cd_reuniao', 'cd_ordem_acao'),)


class TbAcessoApresentacao(models.Model):
    cd_tipo_acesso = models.ForeignKey('TbTipoAcesso', models.DO_NOTHING, db_column='cd_tipo_acesso', primary_key=True)
    cd_apresentacao = models.ForeignKey('TbApresentacao', models.DO_NOTHING, db_column='cd_apresentacao')

    class Meta:
        managed = False
        db_table = 'tb_acesso_apresentacao'
        unique_together = (('cd_tipo_acesso', 'cd_apresentacao'),)


class TbAcessoEmpresa(models.Model):
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador', primary_key=True)
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento')
    cd_filial = models.ForeignKey('TbFilial', models.DO_NOTHING, db_column='cd_filial')
    cd_setor_operacao = models.CharField(max_length=6, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_ultimo_login = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_acesso_empresa'
        unique_together = (('nm_operador', 'cd_unidade_atendimento', 'cd_filial'),)


class TbAcessoFinpac(models.Model):
    cod_usuario = models.CharField(max_length=50, blank=True, null=True)
    nm_operador = models.CharField(max_length=50, blank=True, null=True)
    cod_grupo = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_acesso_finpac'


class TbAcessoGrupo(models.Model):
    cod_grupo = models.IntegerField(primary_key=True)
    cod_op = models.CharField(max_length=20)
    cd_dia_semana = models.BooleanField()
    qt_hora_inicial = models.IntegerField(blank=True, null=True)
    qt_hora_final = models.IntegerField(blank=True, null=True)
    qt_dias_atras = models.IntegerField(blank=True, null=True)
    qt_hora_limite = models.IntegerField(blank=True, null=True)
    cd_classe = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_acesso_grupo'
        unique_together = (('cod_grupo', 'cod_op', 'cd_dia_semana'),)


class TbAcessoSaidaUrgencia(models.Model):
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', primary_key=True)
    dt_inicio = models.DateField()
    dt_fim = models.DateField()
    hr_inicio = models.IntegerField()
    hr_fim = models.IntegerField()
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador')
    usuario_gravou = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='usuario_gravou', blank=True, null=True)
    dt_usuario_gravou = models.DateField(blank=True, null=True)
    fl_cancela = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_acesso_saida_urgencia'
        unique_together = (('cd_setor', 'dt_inicio', 'dt_fim', 'hr_inicio', 'hr_fim', 'nm_operador'),)


class TbAcessoTela(models.Model):
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador', primary_key=True)
    cd_tela = models.CharField(max_length=10)
    cd_dia_semana = models.BooleanField()
    qt_hora_inicial = models.IntegerField()
    qt_hora_final = models.IntegerField()
    qt_dias_atras = models.IntegerField()
    qt_hora_limite = models.IntegerField()
    cd_classe = models.NullBooleanField()
    cod_grupo = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.BigIntegerField()

    class Meta:
        managed = False
        db_table = 'tb_acesso_tela'
        unique_together = (('nm_operador', 'cd_tela', 'cd_dia_semana', 'cd_ocorrencia'),)


class TbAcessoUsuario(models.Model):
    cd_tela = models.CharField(primary_key=True, max_length=10)
    cod_usuario = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'tb_acesso_usuario'
        unique_together = (('cd_tela', 'cod_usuario'),)


class TbAcoesAuditoria(models.Model):
    cd_acao = models.FloatField(primary_key=True)
    ds_acao = models.CharField(max_length=60, blank=True, null=True)
    cd_tipo_acao = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_acoes_auditoria'


class TbAcompanhamentoAnestesia(models.Model):
    cd_atendimento = models.FloatField()
    cd_ocorrencia = models.FloatField()
    cd_ordem = models.FloatField()
    fl_doenca_previa = models.CharField(max_length=1, blank=True, null=True)
    fl_doenca_has = models.CharField(max_length=1, blank=True, null=True)
    fl_doenca_asma = models.CharField(max_length=1, blank=True, null=True)
    fl_doenca_dm = models.CharField(max_length=1, blank=True, null=True)
    fl_doenca_convulsoes = models.CharField(max_length=1, blank=True, null=True)
    fl_doenca_outro = models.CharField(max_length=1, blank=True, null=True)
    ds_doenca_outro = models.CharField(max_length=100, blank=True, null=True)
    fl_uso_medicacao = models.CharField(max_length=1, blank=True, null=True)
    ds_uso_medicacao = models.CharField(max_length=100, blank=True, null=True)
    fl_paciente_estavel = models.CharField(max_length=1, blank=True, null=True)
    fl_paciente_instavel = models.CharField(max_length=1, blank=True, null=True)
    fl_paciente_consciente = models.CharField(max_length=1, blank=True, null=True)
    fl_paciente_inconsciente = models.CharField(max_length=1, blank=True, null=True)
    fl_paciente_orientado = models.CharField(max_length=1, blank=True, null=True)
    fl_paciente_desorientado = models.CharField(max_length=1, blank=True, null=True)
    fl_paciente_eupneico = models.CharField(max_length=1, blank=True, null=True)
    fl_paciente_dispneico = models.CharField(max_length=1, blank=True, null=True)
    fl_paciente_cooperativo = models.CharField(max_length=1, blank=True, null=True)
    fl_paciente_nao_cooperativo = models.CharField(max_length=1, blank=True, null=True)
    fl_paciente_calmo = models.CharField(max_length=1, blank=True, null=True)
    fl_paciente_ansioso = models.CharField(max_length=1, blank=True, null=True)
    fl_asa = models.CharField(max_length=3, blank=True, null=True)
    fl_jejum = models.CharField(max_length=3, blank=True, null=True)
    fl_glasgow = models.CharField(max_length=2, blank=True, null=True)
    fl_anestesia_ant = models.CharField(max_length=1, blank=True, null=True)
    ds_anestesia_ant = models.CharField(max_length=100, blank=True, null=True)
    fl_inter_anestesia_ant = models.CharField(max_length=1, blank=True, null=True)
    ds_inter_anestesia_ant = models.CharField(max_length=100, blank=True, null=True)
    ds_exame_fisico = models.CharField(max_length=100, blank=True, null=True)
    ds_ap_respiratorio = models.CharField(max_length=100, blank=True, null=True)
    ds_ap_circulatorio = models.CharField(max_length=100, blank=True, null=True)
    ds_ap_digestivo = models.CharField(max_length=100, blank=True, null=True)
    ds_outro = models.CharField(max_length=100, blank=True, null=True)
    fl_alergias = models.CharField(max_length=1, blank=True, null=True)
    ds_alergias = models.CharField(max_length=100, blank=True, null=True)
    ds_admissao_pa = models.CharField(max_length=10, blank=True, null=True)
    ds_admissao_fc = models.CharField(max_length=5, blank=True, null=True)
    ds_admissao_o2 = models.CharField(max_length=3, blank=True, null=True)
    fl_checagem_material = models.CharField(max_length=1, blank=True, null=True)
    fl_anestesico_venoclise = models.CharField(max_length=1, blank=True, null=True)
    nu_jelco_anestesico = models.CharField(max_length=10, blank=True, null=True)
    fl_monitorizacao_sato2 = models.CharField(max_length=1, blank=True, null=True)
    fl_monitorizacao_pani = models.CharField(max_length=1, blank=True, null=True)
    fl_monitorizacao_cardioscopia = models.CharField(max_length=1, blank=True, null=True)
    fl_monitorizacao_outros = models.CharField(max_length=1, blank=True, null=True)
    ds_monitorizacao_outros = models.CharField(max_length=200, blank=True, null=True)
    ds_anestesica_fentanil = models.CharField(max_length=10, blank=True, null=True)
    hr_anestesica_fetanil = models.FloatField(blank=True, null=True)
    ds_anestesica_midazolam = models.CharField(max_length=10, blank=True, null=True)
    hr_anestesica_midazolam = models.FloatField(blank=True, null=True)
    ds_anestesica_propofol = models.CharField(max_length=10, blank=True, null=True)
    hr_anestesica_propofol = models.FloatField(blank=True, null=True)
    ds_anestesica_escopolamina = models.CharField(max_length=10, blank=True, null=True)
    hr_anestesica_escopolamina = models.FloatField(blank=True, null=True)
    ds_anestesica_outros = models.CharField(max_length=200, blank=True, null=True)
    fl_ventilacao_cateter_nasal = models.CharField(max_length=1, blank=True, null=True)
    ds_ventilacao_cateter_naasl = models.CharField(max_length=5, blank=True, null=True)
    fl_ventilacao_mascara_facial = models.CharField(max_length=1, blank=True, null=True)
    ds_ventilacao_mascara_facial = models.CharField(max_length=5, blank=True, null=True)
    fl_ventilacao_espontanea = models.CharField(max_length=1, blank=True, null=True)
    fl_ventilacao_iot = models.CharField(max_length=1, blank=True, null=True)
    fl_ventilacao_intercorrencias = models.CharField(max_length=1, blank=True, null=True)
    ds_ventilacao_intercorrencia = models.CharField(max_length=200, blank=True, null=True)
    fl_srpa_acordado = models.CharField(max_length=1, blank=True, null=True)
    fl_srpa_sonolento = models.CharField(max_length=1, blank=True, null=True)
    fl_srpa_eupneico = models.CharField(max_length=1, blank=True, null=True)
    fl_srpa_dispneico = models.CharField(max_length=1, blank=True, null=True)
    fl_srpa_estavel = models.CharField(max_length=1, blank=True, null=True)
    fl_srpa_instavel = models.CharField(max_length=1, blank=True, null=True)
    fl_posicao_decubito_esq = models.CharField(max_length=1, blank=True, null=True)
    fl_posicao_decubito_dir = models.CharField(max_length=1, blank=True, null=True)
    fl_posicao_decubito_dorsal = models.CharField(max_length=1, blank=True, null=True)
    fl_exame_colonoscopia = models.CharField(max_length=1, blank=True, null=True)
    fl_exame_tomografia = models.CharField(max_length=1, blank=True, null=True)
    fl_exame_ressonancia = models.CharField(max_length=1, blank=True, null=True)
    fl_exame_rx_contrastado = models.CharField(max_length=1, blank=True, null=True)
    fl_exame_outros = models.CharField(max_length=1, blank=True, null=True)
    ds_exame_outros = models.CharField(max_length=200, blank=True, null=True)
    fl_anestesia_sedacao = models.CharField(max_length=1, blank=True, null=True)
    fl_anestesia_geral = models.CharField(max_length=1, blank=True, null=True)
    fl_anestesia_raquianestesia = models.CharField(max_length=1, blank=True, null=True)
    fl_anestesia_outros = models.CharField(max_length=1, blank=True, null=True)
    ds_anestesia_outros = models.CharField(max_length=100, blank=True, null=True)
    cd_medico_acompanhante = models.FloatField(blank=True, null=True)
    fl_admitido_acordado = models.CharField(max_length=1, blank=True, null=True)
    fl_admitido_sonolento = models.CharField(max_length=1, blank=True, null=True)
    fl_admitido_eupneico = models.CharField(max_length=1, blank=True, null=True)
    fl_admitido_dispneico = models.CharField(max_length=1, blank=True, null=True)
    fl_admitido_estavel = models.CharField(max_length=1, blank=True, null=True)
    fl_admitido_instavel = models.CharField(max_length=1, blank=True, null=True)
    hr_admitido_spra = models.FloatField(blank=True, null=True)
    fl_moni_spra_sato2 = models.CharField(max_length=1, blank=True, null=True)
    fl_moni_spra_pani = models.CharField(max_length=1, blank=True, null=True)
    fl_moni_spra_cardioscopia = models.CharField(max_length=1, blank=True, null=True)
    fl_moni_spra_outros = models.CharField(max_length=1, blank=True, null=True)
    ds_moni_spra_outros = models.CharField(max_length=100, blank=True, null=True)
    ds_admissao_spra_pa = models.CharField(max_length=20, blank=True, null=True)
    ds_admissao_spra_fc = models.CharField(max_length=5, blank=True, null=True)
    ds_admissao_spra_sat02 = models.CharField(max_length=5, blank=True, null=True)
    hr_admissao_spra = models.FloatField(blank=True, null=True)
    fl_liberado_acordado = models.CharField(max_length=1, blank=True, null=True)
    fl_liberado_sonolento = models.CharField(max_length=1, blank=True, null=True)
    fl_liberado_eupneico = models.CharField(max_length=1, blank=True, null=True)
    fl_liberado_dispneico = models.CharField(max_length=1, blank=True, null=True)
    fl_liberado_estavel = models.CharField(max_length=1, blank=True, null=True)
    fl_liberado_instavel = models.CharField(max_length=1, blank=True, null=True)
    hr_liberado_spra = models.FloatField(blank=True, null=True)
    ds_liberado_spra_pa = models.CharField(max_length=20, blank=True, null=True)
    ds_liberado_spra_fc = models.CharField(max_length=5, blank=True, null=True)
    ds_liberado_spra_sat02 = models.CharField(max_length=5, blank=True, null=True)
    fl_liberado_ar = models.CharField(max_length=1, blank=True, null=True)
    fl_liberado_queixas = models.CharField(max_length=1, blank=True, null=True)
    ds_liberado_queixas = models.CharField(max_length=200, blank=True, null=True)
    fl_liberado_intercorrencia = models.CharField(max_length=1, blank=True, null=True)
    ds_liberado_intercorrencia = models.CharField(max_length=200, blank=True, null=True)
    fl_liberado_acompanhante = models.CharField(max_length=1, blank=True, null=True)
    fl_liberado_deambulando = models.CharField(max_length=1, blank=True, null=True)
    fl_liberado_eva = models.CharField(max_length=2, blank=True, null=True)
    cd_operador = models.CharField(max_length=10)
    dt_cadastro = models.DateField()
    nu_intervalo = models.FloatField(blank=True, null=True)
    hr_anestesia_ini = models.FloatField(blank=True, null=True)
    hr_anestesia_fim = models.FloatField(blank=True, null=True)
    hr_cirurgia_ini = models.FloatField(blank=True, null=True)
    hr_cirurgia_fim = models.FloatField(blank=True, null=True)
    cd_enfermeiro_acompanhante = models.FloatField(blank=True, null=True)
    ds_evolucao_medica = models.CharField(max_length=4000, blank=True, null=True)
    ds_evolucao_enfermagem = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_acompanhamento_anestesia'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem'),)


class TbAcompanhamentoContraste(models.Model):
    cd_atendimento = models.FloatField()
    cd_ocorrencia = models.FloatField()
    cd_ordem = models.FloatField()
    fl_hipertensao_arterial = models.CharField(max_length=1, blank=True, null=True)
    fl_tabagismo = models.CharField(max_length=1, blank=True, null=True)
    fl_neoplasias = models.CharField(max_length=1, blank=True, null=True)
    fl_doenca_cardiovascular = models.CharField(max_length=1, blank=True, null=True)
    fl_diabetes = models.CharField(max_length=1, blank=True, null=True)
    fl_doenca_renal = models.CharField(max_length=1, blank=True, null=True)
    fl_realizou_cirurgias = models.CharField(max_length=1, blank=True, null=True)
    ds_realizou_cirurgia = models.CharField(max_length=300, blank=True, null=True)
    fl_outro_problema = models.CharField(max_length=1, blank=True, null=True)
    ds_outro_problema = models.CharField(max_length=300, blank=True, null=True)
    fl_alergia_constraste = models.CharField(max_length=1, blank=True, null=True)
    ds_alergia_constraste = models.CharField(max_length=300, blank=True, null=True)
    fl_alergia_medicamentos = models.CharField(max_length=1, blank=True, null=True)
    ds_alergia_medicamentos = models.CharField(max_length=300, blank=True, null=True)
    fl_alergia_frutos_mar = models.CharField(max_length=1, blank=True, null=True)
    ds_alergia_frutos_mar = models.CharField(max_length=300, blank=True, null=True)
    fl_alergia_outros = models.CharField(max_length=1, blank=True, null=True)
    ds_alergia_outros = models.CharField(max_length=300, blank=True, null=True)
    fl_med_sivastatina = models.CharField(max_length=1, blank=True, null=True)
    fl_med_metformina = models.CharField(max_length=1, blank=True, null=True)
    fl_med_hidralazina = models.CharField(max_length=1, blank=True, null=True)
    fl_med_enalapril = models.CharField(max_length=1, blank=True, null=True)
    fl_med_aas = models.CharField(max_length=1, blank=True, null=True)
    fl_med_metropolol = models.CharField(max_length=1, blank=True, null=True)
    fl_med_furosemida = models.CharField(max_length=1, blank=True, null=True)
    fl_med_nifedipina = models.CharField(max_length=1, blank=True, null=True)
    fl_med_caverdilol = models.CharField(max_length=1, blank=True, null=True)
    fl_med_atenolol = models.CharField(max_length=1, blank=True, null=True)
    fl_uso_dentaria = models.CharField(max_length=1, blank=True, null=True)
    fl_uso_ortodontico = models.CharField(max_length=1, blank=True, null=True)
    fl_uso_ortopedicos = models.CharField(max_length=1, blank=True, null=True)
    fl_uso_marcapasso = models.CharField(max_length=1, blank=True, null=True)
    fl_uso_outros = models.CharField(max_length=1, blank=True, null=True)
    ds_uso_outros = models.CharField(max_length=300, blank=True, null=True)
    fl_check_orientado = models.CharField(max_length=1, blank=True, null=True)
    fl_check_pre_medicacao = models.CharField(max_length=1, blank=True, null=True)
    hr_check_pre_inicio = models.FloatField(blank=True, null=True)
    hr_check_pre_fim = models.FloatField(blank=True, null=True)
    fl_check_adornos = models.CharField(max_length=1, blank=True, null=True)
    fl_check_jejum = models.CharField(max_length=1, blank=True, null=True)
    hr_check_sinais_inicio = models.FloatField(blank=True, null=True)
    hr_check_sinais_fim = models.FloatField(blank=True, null=True)
    ds_check_temperatura = models.CharField(max_length=5, blank=True, null=True)
    ds_check_pulso = models.CharField(max_length=5, blank=True, null=True)
    ds_check_fc = models.CharField(max_length=5, blank=True, null=True)
    ds_check_pa = models.CharField(max_length=10, blank=True, null=True)
    ds_check_o2 = models.CharField(max_length=10, blank=True, null=True)
    fl_check_ureia = models.CharField(max_length=1, blank=True, null=True)
    fl_check_creatinina = models.CharField(max_length=1, blank=True, null=True)
    ds_check_peso = models.CharField(max_length=10, blank=True, null=True)
    ds_check_altura = models.CharField(max_length=10, blank=True, null=True)
    fl_puncao_mebro_dir = models.CharField(max_length=1, blank=True, null=True)
    fl_puncao_mebro_esq = models.CharField(max_length=1, blank=True, null=True)
    fl_puncao_infiltracao = models.CharField(max_length=1, blank=True, null=True)
    fl_puncao_flebite = models.CharField(max_length=1, blank=True, null=True)
    fl_puncao_esclerose = models.CharField(max_length=1, blank=True, null=True)
    fl_puncao_celulite = models.CharField(max_length=1, blank=True, null=True)
    fl_puncao_queimaduras = models.CharField(max_length=1, blank=True, null=True)
    fl_puncao_edema = models.CharField(max_length=1, blank=True, null=True)
    fl_puncao_infeccao = models.CharField(max_length=1, blank=True, null=True)
    fl_puncao_extravazamento = models.CharField(max_length=1, blank=True, null=True)
    ds_puncao_complemento = models.CharField(max_length=300, blank=True, null=True)
    fl_escala_dor = models.CharField(max_length=2, blank=True, null=True)
    ds_observacao = models.CharField(max_length=300, blank=True, null=True)
    hr_saida = models.FloatField(blank=True, null=True)
    cd_medico_acompanhante = models.FloatField(blank=True, null=True)
    dt_cadastro = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)
    fl_med_henetix = models.CharField(max_length=1, blank=True, null=True)
    fl_med_soro = models.CharField(max_length=1, blank=True, null=True)
    fl_med_hidrocortisona = models.CharField(max_length=1, blank=True, null=True)
    fl_med_outros = models.CharField(max_length=1, blank=True, null=True)
    ds_med_outros = models.CharField(max_length=100, blank=True, null=True)
    fl_via_venosa = models.CharField(max_length=1, blank=True, null=True)
    fl_via_oral = models.CharField(max_length=1, blank=True, null=True)
    fl_via_retal = models.CharField(max_length=1, blank=True, null=True)
    dt_validade = models.CharField(max_length=50, blank=True, null=True)
    nu_lote = models.CharField(max_length=50, blank=True, null=True)
    nu_quantidade = models.CharField(max_length=50, blank=True, null=True)
    cd_enfermeiro_acompanhante = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_acompanhamento_contraste'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem'),)


class TbAcompanhamentoEndoscopia(models.Model):
    cd_atendimento = models.FloatField()
    cd_ocorrencia = models.FloatField()
    cd_ordem = models.FloatField()
    nm_equipamento = models.CharField(max_length=100, blank=True, null=True)
    dt_inicio_cidex = models.FloatField(blank=True, null=True)
    dt_fim_cidex = models.FloatField(blank=True, null=True)
    fl_jejum = models.CharField(max_length=1, blank=True, null=True)
    fl_preparo_realizado = models.CharField(max_length=1, blank=True, null=True)
    fl_patologia_previa = models.CharField(max_length=1, blank=True, null=True)
    ds_patologia_previa = models.CharField(max_length=100, blank=True, null=True)
    fl_uso_medicamento = models.CharField(max_length=1, blank=True, null=True)
    ds_uso_medicamento = models.CharField(max_length=100, blank=True, null=True)
    fl_protese_dentaria = models.CharField(max_length=1, blank=True, null=True)
    ds_protese_dentaria = models.CharField(max_length=100, blank=True, null=True)
    fl_anti_coagulante = models.CharField(max_length=1, blank=True, null=True)
    ds_anti_coagulante = models.CharField(max_length=100, blank=True, null=True)
    fl_anti_convulsivante = models.CharField(max_length=1, blank=True, null=True)
    ds_anti_convulsivante = models.CharField(max_length=100, blank=True, null=True)
    fl_puncao_venosa = models.CharField(max_length=1, blank=True, null=True)
    ds_puncao_venosa = models.CharField(max_length=100, blank=True, null=True)
    fl_sintoma_hipoglicemia = models.CharField(max_length=1, blank=True, null=True)
    ds_sintoma_hipoglicemia = models.CharField(max_length=100, blank=True, null=True)
    fl_alergia = models.CharField(max_length=1, blank=True, null=True)
    ds_alergia = models.CharField(max_length=100, blank=True, null=True)
    dt_inicio_intra = models.FloatField(blank=True, null=True)
    dt_fim_intra = models.FloatField(blank=True, null=True)
    ds_ta_intra = models.CharField(max_length=10, blank=True, null=True)
    ds_fc_intra = models.CharField(max_length=10, blank=True, null=True)
    ds_fr_intra = models.CharField(max_length=10, blank=True, null=True)
    ds_so2_intra = models.CharField(max_length=10, blank=True, null=True)
    fl_o2_intra = models.CharField(max_length=1, blank=True, null=True)
    fl_inter_intra = models.CharField(max_length=1, blank=True, null=True)
    dt_inicio_pos = models.FloatField(blank=True, null=True)
    dt_fim_pos = models.FloatField(blank=True, null=True)
    ds_ta_pos = models.CharField(max_length=10, blank=True, null=True)
    ds_fc_pos = models.CharField(max_length=10, blank=True, null=True)
    ds_fr_pos = models.CharField(max_length=10, blank=True, null=True)
    ds_so2_pos = models.CharField(max_length=10, blank=True, null=True)
    fl_inter_pos = models.CharField(max_length=1, blank=True, null=True)
    fl_bocal_retirado = models.CharField(max_length=1, blank=True, null=True)
    fl_aux_poltrona = models.CharField(max_length=1, blank=True, null=True)
    fl_anatomia_patologica = models.CharField(max_length=1, blank=True, null=True)
    ds_qtd_frasco = models.CharField(max_length=3, blank=True, null=True)
    fl_urease = models.CharField(max_length=1, blank=True, null=True)
    ds_urease = models.CharField(max_length=100, blank=True, null=True)
    fl_pinca_biopsia = models.CharField(max_length=1, blank=True, null=True)
    fl_alca_polipectomia = models.CharField(max_length=1, blank=True, null=True)
    fl_cateter_injetor = models.CharField(max_length=1, blank=True, null=True)
    fl_ligadura_elastica = models.CharField(max_length=1, blank=True, null=True)
    fl_hemoclip = models.CharField(max_length=1, blank=True, null=True)
    fl_pinca_corpo_estranho = models.CharField(max_length=1, blank=True, null=True)
    ds_outro_material = models.CharField(max_length=100, blank=True, null=True)
    ds_nao_material_utilizado = models.CharField(max_length=100, blank=True, null=True)
    ds_evolucao_paciente = models.CharField(max_length=500, blank=True, null=True)
    fl_alta = models.CharField(max_length=1, blank=True, null=True)
    cd_alta_medico = models.FloatField(blank=True, null=True)
    fl_entregue_acomp = models.CharField(max_length=1, blank=True, null=True)
    fl_entregue_func = models.CharField(max_length=1, blank=True, null=True)
    fl_orientacao_alta = models.CharField(max_length=1, blank=True, null=True)
    cd_operador = models.CharField(max_length=10)
    dt_cadastro = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_acompanhamento_endoscopia'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem'),)


class TbAcompanhante(models.Model):
    cd_acompanhante = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_acompanhante', primary_key=True)
    nu_telefone_contato = models.CharField(max_length=11, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_acompanhante'


class TbAcreditacaoFilial(models.Model):
    cd_unidade_atendimento = models.CharField(primary_key=True, max_length=3)
    fl_ativa = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_acreditacao_filial'


class TbAdesaoVisita(models.Model):
    cd_adesao_visita = models.FloatField(primary_key=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor')
    dt_inicio_adesao = models.DateField()
    hr_inicio_adesao = models.IntegerField()
    dt_fim_adesao = models.DateField(blank=True, null=True)
    hr_fim_adesao = models.IntegerField(blank=True, null=True)
    cd_tipo_visita = models.ForeignKey('TbTipoVisitaAco', models.DO_NOTHING, db_column='cd_tipo_visita')
    dt_transacao = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    nm_terminal = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_adesao_visita'


class TbAdministracao(models.Model):
    cd_sistema = models.CharField(primary_key=True, max_length=30)
    nu_dias_implantacao = models.FloatField()
    qt_nivel_prioridade = models.FloatField(blank=True, null=True)
    dt_inicial_implantacao = models.DateField(blank=True, null=True)
    dt_final_implantacao = models.DateField(blank=True, null=True)
    cd_implantador = models.FloatField(blank=True, null=True)
    cd_ocorrencia = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_administracao'


class TbAdministracaoDiluicao(models.Model):
    cd_principio_ativo = models.ForeignKey('TbApresentacaoDiluicao', models.DO_NOTHING, db_column='cd_principio_ativo', primary_key=True)
    cd_ocorrencia_diluicao = models.ForeignKey('TbApresentacaoDiluicao', models.DO_NOTHING, db_column='cd_ocorrencia_diluicao')
    cd_ordem_administracao = models.IntegerField()
    cd_tipo_acesso = models.ForeignKey('TbTipoAcesso', models.DO_NOTHING, db_column='cd_tipo_acesso')
    ds_administracao_diluicao = models.CharField(max_length=120)
    cd_reconstituir = models.ForeignKey('TbProduto', models.DO_NOTHING, db_column='cd_reconstituir', blank=True, null=True)
    qt_reconstituir = models.FloatField(blank=True, null=True)
    cd_diluente = models.ForeignKey('TbProduto', models.DO_NOTHING, db_column='cd_diluente', blank=True, null=True)
    qt_diluente = models.FloatField(blank=True, null=True)
    nu_tempo_inicial = models.FloatField(blank=True, null=True)
    fl_tempo_inicio = models.CharField(max_length=2, blank=True, null=True)
    nu_tempo_final = models.FloatField(blank=True, null=True)
    fl_tempo_final = models.CharField(max_length=2, blank=True, null=True)
    ds_tempo = models.CharField(max_length=120, blank=True, null=True)
    cd_reconstituir2 = models.ForeignKey('TbProduto', models.DO_NOTHING, db_column='cd_reconstituir2', blank=True, null=True)
    qt_reconstituir2 = models.FloatField(blank=True, null=True)
    qt_retirar_reconst1 = models.FloatField(blank=True, null=True)
    fl_tipo_administracao = models.CharField(max_length=1, blank=True, null=True)
    qt_retirar_medic = models.FloatField(blank=True, null=True)
    qt_concentracao_diluicao = models.FloatField(blank=True, null=True)
    fl_administracao_padrao = models.CharField(max_length=1, blank=True, null=True)
    cd_unidade_conc_diluicao = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_conc_diluicao', blank=True, null=True)
    qt_dosagem_padrao = models.DecimalField(max_digits=13, decimal_places=3, blank=True, null=True)
    cd_unidade_dosagem_padrao = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_dosagem_padrao', blank=True, null=True)
    cd_apresentacao_diluente = models.ForeignKey('TbApresentacao', models.DO_NOTHING, db_column='cd_apresentacao_diluente', blank=True, null=True)
    qt_frequencia_padrao = models.IntegerField(blank=True, null=True)
    fl_unid_freq_padrao = models.CharField(max_length=2, blank=True, null=True)
    fl_sn_padrao = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_administracao_diluicao'
        unique_together = (('cd_principio_ativo', 'cd_ocorrencia_diluicao', 'cd_ordem_administracao'),)


class TbAgenciaBancaria(models.Model):
    cd_banco = models.CharField(primary_key=True, max_length=10)
    cd_agencia = models.CharField(max_length=10)
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa')
    nm_agencia = models.CharField(max_length=45)
    nu_dv_agencia = models.CharField(max_length=1, blank=True, null=True)
    cd_compensacao = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_agencia_bancaria'
        unique_together = (('cd_banco', 'cd_agencia'),)


class TbAgendOncoHist(models.Model):
    cd_agenda = models.ForeignKey('TbPrescricaoPlanoAgd', models.DO_NOTHING, db_column='cd_agenda', primary_key=True)
    cd_modelo = models.ForeignKey('TbPrescricaoPlanoAgd', models.DO_NOTHING, db_column='cd_modelo')
    cd_ordem_prescricao_plano = models.ForeignKey('TbPrescricaoPlanoAgd', models.DO_NOTHING, db_column='cd_ordem_prescricao_plano')
    dt_agenda = models.DateField(blank=True, null=True)
    cd_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_mat_med', blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade_atendimento = models.ForeignKey('TbFilial', models.DO_NOTHING, db_column='cd_unidade_atendimento', blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_paciente = models.ForeignKey('TbPaciente', models.DO_NOTHING, db_column='cd_paciente', blank=True, null=True)
    cd_pessoa_hosp = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa_hosp', blank=True, null=True)
    cd_pessoa_hap = models.FloatField(blank=True, null=True)
    nm_pessoa = models.CharField(max_length=45, blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    nome_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)
    qtd_mat_med_estoq = models.FloatField(blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    prc_mat_med_estoq = models.FloatField(blank=True, null=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_agend_onco_hist'
        unique_together = (('cd_agenda', 'cd_modelo', 'cd_ordem_prescricao_plano'),)


class TbAgendaInternProcedimento(models.Model):
    cd_agenda = models.ForeignKey('TmAgendaInternacao', models.DO_NOTHING, db_column='cd_agenda', primary_key=True)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')
    cd_via_acesso = models.IntegerField(blank=True, null=True)
    fl_bilat = models.CharField(max_length=1, blank=True, null=True)
    cd_tipo_anestesia = models.ForeignKey('TbTipoAnestesia', models.DO_NOTHING, db_column='cd_tipo_anestesia', blank=True, null=True)
    cd_param_grupo_proc = models.ForeignKey('TbParamGrupoProc', models.DO_NOTHING, db_column='cd_param_grupo_proc', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_agenda_intern_procedimento'
        unique_together = (('cd_agenda', 'cd_procedimento'),)


class TbAgendaInternacaoProf(models.Model):
    cd_agenda = models.ForeignKey('TmAgendaInternacao', models.DO_NOTHING, db_column='cd_agenda', primary_key=True)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional')
    cd_tipo_ato_profissional = models.ForeignKey('TbTipoAtoProfissional', models.DO_NOTHING, db_column='cd_tipo_ato_profissional', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_agenda_internacao_prof'
        unique_together = (('cd_agenda', 'cd_procedimento', 'cd_profissional'),)


class TbAgendaOncologia(models.Model):
    cd_agenda = models.IntegerField(primary_key=True)
    dt_agenda = models.DateField()
    hr_agenda = models.IntegerField(blank=True, null=True)
    cd_paciente = models.IntegerField(blank=True, null=True)
    cd_posto = models.CharField(max_length=6, blank=True, null=True)
    cd_medico = models.IntegerField(blank=True, null=True)
    cd_status = models.CharField(max_length=1, blank=True, null=True)
    nm_paciente = models.CharField(max_length=45, blank=True, null=True)
    dt_criacao = models.DateField(blank=True, null=True)
    nu_carteira_cpf = models.CharField(max_length=30, blank=True, null=True)
    cd_classificacao_oncologia = models.IntegerField(blank=True, null=True)
    cd_user_agendamento = models.CharField(max_length=10, blank=True, null=True)
    cd_senha_vinculada = models.CharField(max_length=9, blank=True, null=True)
    fl_inclusao = models.CharField(max_length=1, blank=True, null=True)
    fl_agenda_fechada = models.CharField(max_length=1, blank=True, null=True)
    fl_agenda_associada = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    fl_biometria = models.CharField(max_length=1, blank=True, null=True)
    dt_biometria = models.DateField(blank=True, null=True)
    cd_user_biometria = models.CharField(max_length=10, blank=True, null=True)
    ds_motivo = models.CharField(max_length=500, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_agenda_oncologia'


class TbAgendaOncologiaJust(models.Model):
    cd_agenda = models.IntegerField(primary_key=True)
    cd_ordem = models.IntegerField()
    cd_status = models.CharField(max_length=1, blank=True, null=True)
    cd_user = models.CharField(max_length=10, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    ds_justificativa = models.CharField(max_length=500, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_agenda_oncologia_just'
        unique_together = (('cd_agenda', 'cd_ordem'),)


class TbAgendaOncologiaObs(models.Model):
    cd_agenda = models.IntegerField(primary_key=True)
    cd_ordem = models.IntegerField()
    cd_posto = models.CharField(max_length=6, blank=True, null=True)
    cd_user = models.CharField(max_length=10, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=500, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_agenda_oncologia_obs'
        unique_together = (('cd_agenda', 'cd_ordem'),)


class TbAgendaOperador(models.Model):
    nm_operador = models.CharField(primary_key=True, max_length=8)
    dt_agenda = models.DateField()
    hr_agenda = models.IntegerField()
    fl_agenda = models.CharField(max_length=1, blank=True, null=True)
    ds_agenda = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'tb_agenda_operador'
        unique_together = (('nm_operador', 'dt_agenda', 'hr_agenda'),)


class TbAgrupamentoMedsuporteProc(models.Model):
    cd_grupo = models.ForeignKey('TbGrupoMedSuporteProc', models.DO_NOTHING, db_column='cd_grupo', primary_key=True)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')

    class Meta:
        managed = False
        db_table = 'tb_agrupamento_medsuporte_proc'
        unique_together = (('cd_grupo', 'cd_procedimento'),)


class TbAjusteBalanco(models.Model):
    cd_balanco = models.IntegerField(primary_key=True)
    cd_material = models.FloatField()
    cd_setor_controle = models.CharField(max_length=6)
    cd_ordem = models.IntegerField()
    qt_material = models.FloatField()
    qt_contada = models.FloatField(blank=True, null=True)
    dt_ajuste = models.DateField(blank=True, null=True)
    observacao = models.CharField(max_length=120, blank=True, null=True)
    cd_usuario = models.CharField(max_length=15, blank=True, null=True)
    dt_validade = models.DateField(blank=True, null=True)
    fl_ajustou = models.CharField(max_length=1, blank=True, null=True)
    qt_diferenca = models.FloatField(blank=True, null=True)
    fl_curva = models.CharField(max_length=1, blank=True, null=True)
    cd_ajuste = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ajuste_balanco'
        unique_together = (('cd_balanco', 'cd_material', 'cd_setor_controle', 'cd_ordem'),)


class TbAjusteBalancoLote(models.Model):
    cd_balanco = models.IntegerField(primary_key=True)
    cd_lote = models.CharField(max_length=20)
    qt_lote = models.FloatField()
    dt_validade = models.DateField()
    cd_ordem = models.IntegerField()
    dt_ajuste = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_ajuste_balanco_lote'
        unique_together = (('cd_balanco', 'cd_lote', 'dt_validade', 'cd_ordem'),)


class TbAjusteEstoqueLote(models.Model):
    cd_ajuste = models.BigIntegerField()
    cd_lote = models.CharField(max_length=20)
    qt_lote = models.FloatField()
    dt_validade = models.DateField()
    dt_validade_lote = models.DateField()
    dt_ajuste = models.DateField()
    cd_setor_controle = models.CharField(primary_key=True, max_length=10)
    cd_material = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_ajuste_estoque_lote'
        unique_together = (('cd_setor_controle', 'cd_material', 'cd_lote', 'cd_ajuste'),)


class TbAjusteLote(models.Model):
    cd_material = models.FloatField(primary_key=True)
    cd_setor_controle = models.CharField(max_length=6)
    cd_lote = models.CharField(max_length=20)
    dt_validade = models.DateField()
    qt_estoque = models.FloatField()
    cd_unidade_atendimento = models.CharField(max_length=3)

    class Meta:
        managed = False
        db_table = 'tb_ajuste_lote'
        unique_together = (('cd_material', 'cd_setor_controle', 'cd_lote', 'dt_validade'),)


class TbAjusteRotativo(models.Model):
    cd_ajuste = models.BigIntegerField(primary_key=True)
    cd_material = models.FloatField()
    cd_setor_controle = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_controle')
    qt_material = models.FloatField()
    qt_contada = models.FloatField(blank=True, null=True)
    dt_ajuste = models.DateField(blank=True, null=True)
    observacao = models.CharField(max_length=120, blank=True, null=True)
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento', blank=True, null=True)
    cd_usuario = models.CharField(max_length=15, blank=True, null=True)
    dt_validade = models.DateField(blank=True, null=True)
    qt_segunda_contagem = models.FloatField(blank=True, null=True)
    fl_ajustou = models.CharField(max_length=1, blank=True, null=True)
    qt_diferenca = models.FloatField(blank=True, null=True)
    fl_controle_lote = models.CharField(max_length=1, blank=True, null=True)
    qt_kit = models.FloatField(blank=True, null=True)
    fl_curva = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_invent = models.CharField(max_length=20, blank=True, null=True)
    cd_ordem_tipo = models.IntegerField(blank=True, null=True)
    nu_inventario = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ajuste_rotativo'


class TbAjusteRotativoLote(models.Model):
    cd_ajuste = models.ForeignKey(TbAjusteRotativo, models.DO_NOTHING, db_column='cd_ajuste', primary_key=True)
    cd_lote = models.CharField(max_length=20)
    qt_lote = models.FloatField()
    dt_validade = models.DateField()
    dt_ajuste = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_ajuste_rotativo_lote'
        unique_together = (('cd_ajuste', 'cd_lote', 'dt_validade'),)


class TbAltaAtendimento(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.IntegerField()
    cd_causa_obito = models.ForeignKey('TbCausaObito', models.DO_NOTHING, db_column='cd_causa_obito', blank=True, null=True)
    dt_internacao = models.DateField()
    hr_internacao = models.IntegerField()
    dt_alta = models.DateField(blank=True, null=True)
    hr_alta = models.IntegerField(blank=True, null=True)
    cd_alta = models.ForeignKey('TbTipoAlta', models.DO_NOTHING, db_column='cd_alta', blank=True, null=True)
    ds_observacoes_medicas = models.CharField(max_length=2000, blank=True, null=True)
    fl_cobrado = models.CharField(max_length=1, blank=True, null=True)
    cd_procedimento_sus = models.CharField(max_length=8, blank=True, null=True)
    cd_grupo_proced_sus = models.IntegerField(blank=True, null=True)
    fl_int_rn = models.CharField(max_length=1, blank=True, null=True)
    fl_int_mae = models.CharField(max_length=1, blank=True, null=True)
    fl_alta_auditada = models.CharField(max_length=1, blank=True, null=True)
    cd_auditor_alta = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cd_auditor_alta', blank=True, null=True)
    ds_obs_alta_franquia = models.CharField(max_length=500, blank=True, null=True)
    cd_usu_alta_franquia = models.CharField(max_length=30, blank=True, null=True)
    fl_valida_alta_paciente = models.CharField(max_length=1, blank=True, null=True)
    ds_justificativa_nao_coleta = models.CharField(max_length=500, blank=True, null=True)
    nm_operador_libera_bio = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_alta_atendimento'
        unique_together = (('dt_alta', 'hr_alta', 'cd_atendimento'), ('dt_internacao', 'hr_internacao', 'cd_atendimento'), ('cd_atendimento', 'cd_ocorrencia'),)


class TbAltaAtendimentoLog(models.Model):
    cd_atendimento = models.IntegerField()
    cd_operador = models.CharField(max_length=30)
    dt_transacao = models.DateField(blank=True, null=True)
    dt_alta_ant = models.DateField(blank=True, null=True)
    hr_alta_ant = models.IntegerField(blank=True, null=True)
    cd_motivo_alta_ant = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_alta_atendimento_log'


class TbAltaNotificacaoCcih(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_notificacao = models.ForeignKey('TbNotificacaoCcih', models.DO_NOTHING, db_column='cd_notificacao')

    class Meta:
        managed = False
        db_table = 'tb_alta_notificacao_ccih'
        unique_together = (('cd_atendimento', 'cd_notificacao'),)


class TbAlteracaoAtendimento(models.Model):
    cd_alteracao = models.FloatField(primary_key=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento')
    dt_atendimento = models.DateField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_cancelamento = models.DateField(blank=True, null=True)
    cd_tipo_atendimento = models.IntegerField(blank=True, null=True)
    cd_natureza_internacao = models.IntegerField(blank=True, null=True)
    cd_motivo_atendimento = models.IntegerField(blank=True, null=True)
    cd_clinica = models.ForeignKey('TbClinica', models.DO_NOTHING, db_column='cd_clinica', blank=True, null=True)
    hr_atendimento = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_alteracao_atendimento'


class TbAlteracaoConvenio(models.Model):
    cd_alteracao = models.FloatField(primary_key=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento')
    cd_convenio_pagador = models.BooleanField()
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio')
    cd_plano_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano_convenio')
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_alteracao = models.DateField(blank=True, null=True)
    cd_convenio_atual = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio_atual', blank=True, null=True)
    cd_plano_atual = models.IntegerField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    cd_sup_alt_carteira = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_alteracao_convenio'


class TbAlteracaoLaudo(models.Model):
    cd_alteracao_laudo = models.FloatField(primary_key=True)
    cd_atendimento = models.IntegerField()
    cd_ocorrencia = models.IntegerField()
    cd_ordem = models.IntegerField()
    cd_ordem_alt = models.IntegerField()
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    cd_profissional_alt = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_alt', blank=True, null=True)
    cd_especialidade = models.FloatField(blank=True, null=True)
    cd_natureza_alt_laudo = models.FloatField(blank=True, null=True)
    ds_motivo_alt_laudo = models.CharField(max_length=100, blank=True, null=True)
    dt_alteracao = models.DateField(blank=True, null=True)
    ds_laudo_ant = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'tb_alteracao_laudo'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem', 'cd_ordem_alt'),)


class TbAlteracaoValorObrigacao(models.Model):
    cd_alteracao_valor_obrigacao = models.IntegerField(primary_key=True)
    ds_alteracao_valor_obrigacao = models.CharField(max_length=20)
    cd_operacao_pag = models.ForeignKey('TbOperacao', models.DO_NOTHING, db_column='cd_operacao_pag', blank=True, null=True)
    cd_operacao_rec = models.ForeignKey('TbOperacao', models.DO_NOTHING, db_column='cd_operacao_rec', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_alteracao_valor_obrigacao'


class TbAlvaroDestino(models.Model):
    mn_alvaro = models.CharField(max_length=30, blank=True, null=True)
    mn_mat_alvaro = models.CharField(max_length=30, blank=True, null=True)
    ds_mat_alvaro = models.CharField(max_length=100, blank=True, null=True)
    ds_destino = models.CharField(max_length=10, blank=True, null=True)
    dt_importacao = models.CharField(max_length=10, blank=True, null=True)
    cd_entidade = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_alvaro_destino'


class TbAlvaroMigracao(models.Model):
    fl_negociacao = models.CharField(max_length=3, blank=True, null=True)
    mn_pardini = models.CharField(max_length=30, blank=True, null=True)
    ds_pardini = models.CharField(max_length=100, blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    mn_alvaro = models.CharField(max_length=30, blank=True, null=True)
    ds_alvaro = models.CharField(max_length=100, blank=True, null=True)
    mn_mat_alvaro = models.CharField(max_length=30, blank=True, null=True)
    ds_mat_alvaro = models.CharField(max_length=100, blank=True, null=True)
    ds_dados_obrigatorios = models.CharField(max_length=100, blank=True, null=True)
    fl_curva = models.CharField(max_length=10, blank=True, null=True)
    ds_metodo_alvaro = models.CharField(max_length=200, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_alvaro_migracao'


class TbAlvaroMigracaoRet(models.Model):
    mn_alvaro = models.CharField(max_length=30, blank=True, null=True)
    ds_interface = models.CharField(max_length=10, blank=True, null=True)
    ds_item_referencia = models.CharField(max_length=100, blank=True, null=True)
    ds_unid_med = models.CharField(max_length=50, blank=True, null=True)
    qt_decimal = models.CharField(max_length=10, blank=True, null=True)
    fl_tipo_valor = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_alvaro_migracao_ret'


class TbAlvaroPardini(models.Model):
    mne_alvaro = models.CharField(max_length=30, blank=True, null=True)
    mne_pardini = models.CharField(max_length=30, blank=True, null=True)
    dsc_exame = models.CharField(max_length=100, blank=True, null=True)
    ds_metodo_realizado = models.CharField(max_length=100, blank=True, null=True)
    qt_decimal = models.NullBooleanField()
    ds_parametro_referencia = models.CharField(max_length=100, blank=True, null=True)
    valor_referencia = models.CharField(max_length=4000, blank=True, null=True)
    cd_metodo_realizado = models.IntegerField(blank=True, null=True)
    cd_parametro_referencia = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_alvaro_pardini'


class TbAlvaroReferencia(models.Model):
    mn_alvaro = models.CharField(max_length=30, blank=True, null=True)
    ds_valor_referencia = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_alvaro_referencia'


class TbAmostraArquivo(models.Model):
    cd_amostra = models.CharField(max_length=18, blank=True, null=True)
    sq_arquivo = models.FloatField()
    sq_linha = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_amostra_arquivo'


class TbAmostraCapacidade(models.Model):
    cd_amostra = models.FloatField(primary_key=True)
    cd_atendimento = models.FloatField()
    nu_pedido = models.FloatField()
    cd_ocorrencia = models.FloatField()
    mn_mat_sao_marcos = models.CharField(max_length=20)
    mn_meio_codigo = models.CharField(max_length=20)
    mn_area_descricao = models.CharField(max_length=20)
    cd_regiao_produtiva = models.CharField(max_length=3)
    cd_unidade_produtiva = models.CharField(max_length=3)
    nu_volume_tubo = models.DecimalField(max_digits=10, decimal_places=3)
    nu_volume_reservado = models.DecimalField(max_digits=10, decimal_places=3)
    nu_volume = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    cd_id_tubo_lab = models.CharField(max_length=12, blank=True, null=True)
    cd_laboratorio_ter = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_amostra_capacidade'


class TbAmostraCategorizacao(models.Model):
    cd_lote = models.ForeignKey('TbAmostraRast', models.DO_NOTHING, db_column='cd_lote')
    cd_amostra_coleta = models.ForeignKey('TbAmostraRast', models.DO_NOTHING, db_column='cd_amostra_coleta')
    cd_tubo_coleta = models.ForeignKey('TbAmostraRast', models.DO_NOTHING, db_column='cd_tubo_coleta')
    fl_classificacao = models.CharField(max_length=1)
    cd_categ_amostra = models.FloatField(blank=True, null=True)
    dt_classificacao = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_amostra_categorizacao'


class TbAmostraExame(models.Model):
    cd_amostra = models.IntegerField(primary_key=True)
    cd_atendimento = models.ForeignKey('TbPedidoExame', models.DO_NOTHING, db_column='cd_atendimento')
    cd_ocorrencia = models.ForeignKey('TbPedidoExame', models.DO_NOTHING, db_column='cd_ocorrencia')
    nu_pedido = models.FloatField()
    dt_pedido = models.DateField()
    nu_amostra_exame = models.IntegerField()
    cd_grupo_frasco = models.IntegerField()
    cd_grupo_produto = models.IntegerField()
    fl_libera_interface = models.CharField(max_length=1, blank=True, null=True)
    cd_grupo = models.CharField(max_length=10, blank=True, null=True)
    nm_material = models.CharField(max_length=240, blank=True, null=True)
    nm_condicao = models.CharField(max_length=50, blank=True, null=True)
    cd_regiao_produtiva = models.CharField(max_length=3, blank=True, null=True)
    cd_unidade_produtiva = models.CharField(max_length=3, blank=True, null=True)
    nm_conservante = models.CharField(max_length=50, blank=True, null=True)
    cd_id_tubo_lab = models.CharField(max_length=12, blank=True, null=True)
    dt_confirmacao = models.DateField(blank=True, null=True)
    cd_operador_confirma = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_amostra_exame'


class TbAmostraExame2(models.Model):
    cd_amostra = models.IntegerField()
    cd_atendimento = models.IntegerField()
    cd_ocorrencia = models.IntegerField()
    nu_pedido = models.FloatField()
    dt_pedido = models.DateField()
    nu_amostra_exame = models.IntegerField()
    cd_grupo_frasco = models.IntegerField()
    cd_grupo_produto = models.IntegerField()
    fl_libera_interface = models.CharField(max_length=1, blank=True, null=True)
    cd_grupo = models.CharField(max_length=10, blank=True, null=True)
    nm_material = models.CharField(max_length=240, blank=True, null=True)
    nm_condicao = models.CharField(max_length=50, blank=True, null=True)
    cd_regiao_produtiva = models.CharField(max_length=3, blank=True, null=True)
    cd_unidade_produtiva = models.CharField(max_length=3, blank=True, null=True)
    nm_conservante = models.CharField(max_length=50, blank=True, null=True)
    cd_id_tubo_lab = models.CharField(max_length=12, blank=True, null=True)
    dt_confirmacao = models.DateField(blank=True, null=True)
    cd_operador_confirma = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_amostra_exame2'


class TbAmostraFotoUnidade(models.Model):
    cd_unidade_atendimento = models.CharField(max_length=3)
    dt_operacao = models.DateField()
    nm_operador = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'tb_amostra_foto_unidade'


class TbAmostraProcedimento(models.Model):
    cd_atendimento = models.IntegerField()
    cd_ocorrencia = models.IntegerField()
    cd_ordem = models.IntegerField()
    cd_procedimento = models.CharField(max_length=8)
    cd_amostra = models.IntegerField()
    fl_interfaceado = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_amostra_procedimento'


class TbAmostraProcedimento2(models.Model):
    cd_atendimento = models.IntegerField()
    cd_ocorrencia = models.IntegerField()
    cd_ordem = models.IntegerField()
    cd_procedimento = models.CharField(max_length=8)
    cd_amostra = models.IntegerField()
    fl_interfaceado = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_amostra_procedimento2'


class TbAmostraRast(models.Model):
    cd_lote = models.ForeignKey('TbLoteRast', models.DO_NOTHING, db_column='cd_lote', primary_key=True)
    cd_amostra_coleta = models.ForeignKey(TbAmostraExame, models.DO_NOTHING, db_column='cd_amostra_coleta')
    cd_tubo_coleta = models.IntegerField()
    dt_amostra_coleta = models.DateField()
    cd_amostra_lab = models.ForeignKey(TbAmostraExame, models.DO_NOTHING, db_column='cd_amostra_lab', blank=True, null=True)
    cd_tubo_lab = models.IntegerField(blank=True, null=True)
    dt_amostra_lab = models.DateField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_amostra_rast'
        unique_together = (('cd_lote', 'cd_amostra_coleta', 'cd_tubo_coleta'),)


class TbAnaliseGlosa(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_cobranca = models.ForeignKey('TbCobrancaPaciente', models.DO_NOTHING, db_column='cd_cobranca')
    cd_produto = models.CharField(max_length=8)
    fl_tipo_produto = models.CharField(max_length=1, blank=True, null=True)
    dt_analise = models.DateField()
    qt_paga = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    vl_total_pago = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    cd_convenio = models.IntegerField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=120, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_analise_glosa'
        unique_together = (('cd_atendimento', 'cd_cobranca', 'cd_produto', 'dt_analise'),)


class TbAnaliseGnnutriTemp(models.Model):
    nm_operador = models.CharField(max_length=20, blank=True, null=True)
    dt_registro = models.DateField(blank=True, null=True)
    fl_tipo = models.CharField(max_length=1, blank=True, null=True)
    cd_autorizacao_senha = models.FloatField(blank=True, null=True)
    cd_requisicao = models.FloatField(blank=True, null=True)
    nu_comanda = models.CharField(max_length=10, blank=True, null=True)
    cd_senha = models.CharField(max_length=30, blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    qt_material = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_analise_gnnutri_temp'


class TbAnaliseInterface(models.Model):
    cd_amostra = models.IntegerField()
    cd_tipo = models.BooleanField()
    nu_pedido = models.IntegerField()
    nm_paciente = models.CharField(max_length=45)
    dt_amostra = models.DateField()
    nm_arquivo = models.CharField(max_length=30)
    nm_operador = models.CharField(max_length=20)
    nm_tela = models.CharField(max_length=10)
    nu_lote = models.IntegerField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_analise_interface'


class TbAnaliseOncologiaTemp(models.Model):
    nm_operador = models.CharField(max_length=15, blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    dt_referencia = models.DateField(blank=True, null=True)
    fl_referencia = models.CharField(max_length=1, blank=True, null=True)
    cd_material = models.IntegerField(blank=True, null=True)
    cd_atendimento = models.BigIntegerField(blank=True, null=True)
    nu_comanda = models.CharField(max_length=9, blank=True, null=True)
    qt_faturado = models.FloatField(blank=True, null=True)
    vl_faturado = models.FloatField(blank=True, null=True)
    cd_senha = models.CharField(max_length=20, blank=True, null=True)
    cd_brasindice = models.IntegerField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    qt_autorizado = models.FloatField(blank=True, null=True)
    vl_autorizado = models.FloatField(blank=True, null=True)
    cd_brasindice2 = models.IntegerField(blank=True, null=True)
    cd_complemento_brasindice2 = models.CharField(max_length=4, blank=True, null=True)
    qt_autorizado2 = models.FloatField(blank=True, null=True)
    vl_autorizado2 = models.FloatField(blank=True, null=True)
    cd_brasindice3 = models.IntegerField(blank=True, null=True)
    cd_complemento_brasindice3 = models.CharField(max_length=4, blank=True, null=True)
    qt_autorizado3 = models.FloatField(blank=True, null=True)
    vl_autorizado3 = models.FloatField(blank=True, null=True)
    cd_requisicao = models.BigIntegerField(blank=True, null=True)
    qt_requisicao = models.FloatField(blank=True, null=True)
    vl_requisicao = models.FloatField(blank=True, null=True)
    qt_dosagem_req = models.FloatField(blank=True, null=True)
    cd_unidade_usual_req = models.CharField(max_length=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_analise_oncologia_temp'


class TbAnaliseTempoTmp(models.Model):
    cd_filial = models.CharField(max_length=3)
    nm_fantasia = models.CharField(max_length=20)
    nm_paciente = models.CharField(max_length=45)
    cd_atendimento = models.IntegerField()
    dt_atendimento = models.DateField(blank=True, null=True)
    hr_atendimento = models.CharField(max_length=5, blank=True, null=True)
    dt_fim_atendimento = models.DateField(blank=True, null=True)
    hr_fim_atendimento = models.CharField(max_length=5, blank=True, null=True)
    qt_horas = models.CharField(max_length=10, blank=True, null=True)
    ds_diagnostico = models.CharField(max_length=4000, blank=True, null=True)
    cd_atendimento_ant = models.FloatField(blank=True, null=True)
    dt_atendimento_ant = models.DateField(blank=True, null=True)
    hr_atendimento_ant = models.CharField(max_length=5, blank=True, null=True)
    dt_fim_atendimento_ant = models.DateField(blank=True, null=True)
    hr_fim_atendimento_ant = models.CharField(max_length=5, blank=True, null=True)
    ds_diagnostico_ant = models.CharField(max_length=4000, blank=True, null=True)
    cd_usuario = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_analise_tempo_tmp'


class TbAnaliseVisitaEnfermagem(models.Model):
    cd_operador = models.CharField(max_length=20, blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    nm_filial = models.CharField(max_length=100, blank=True, null=True)
    cd_posto = models.CharField(max_length=6, blank=True, null=True)
    nm_posto = models.CharField(max_length=100, blank=True, null=True)
    cd_acomodacao = models.CharField(max_length=6, blank=True, null=True)
    nu_leito = models.IntegerField(blank=True, null=True)
    cd_carteira_usuario = models.CharField(max_length=20, blank=True, null=True)
    nm_paciente = models.CharField(max_length=100, blank=True, null=True)
    cd_atendimento = models.BigIntegerField(blank=True, null=True)
    cd_cid10 = models.CharField(max_length=10, blank=True, null=True)
    nm_cid10 = models.CharField(max_length=1000, blank=True, null=True)
    cd_perfil = models.IntegerField(blank=True, null=True)
    nm_perfil = models.CharField(max_length=100, blank=True, null=True)
    dt_hr_visita_ini_ant = models.DateField(blank=True, null=True)
    qt_tolerancia = models.CharField(max_length=50, blank=True, null=True)
    dt_hr_visita_realizada = models.DateField(blank=True, null=True)
    ds_atraso = models.CharField(max_length=300, blank=True, null=True)
    nm_usuario = models.CharField(max_length=20, blank=True, null=True)
    ds_usuario = models.CharField(max_length=100, blank=True, null=True)
    vl_fr = models.CharField(max_length=40, blank=True, null=True)
    vl_pa = models.CharField(max_length=40, blank=True, null=True)
    vl_dor_toracica = models.CharField(max_length=40, blank=True, null=True)
    vl_snc = models.CharField(max_length=40, blank=True, null=True)
    vl_temp = models.CharField(max_length=40, blank=True, null=True)
    vl_fc = models.CharField(max_length=40, blank=True, null=True)
    vl_vomito = models.CharField(max_length=40, blank=True, null=True)
    vl_padrao_resp = models.CharField(max_length=40, blank=True, null=True)
    cd_ordem_analise = models.IntegerField(blank=True, null=True)
    dt_classificacao = models.DateField(blank=True, null=True)
    cd_profissional = models.IntegerField(blank=True, null=True)
    fl_biometria_obrigatoria = models.CharField(max_length=1, blank=True, null=True)
    fl_digital_capturada_pac = models.CharField(max_length=1, blank=True, null=True)
    ds_justificativa_nao_captura = models.CharField(max_length=300, blank=True, null=True)
    vl_pressao_arterial = models.CharField(max_length=40, blank=True, null=True)
    fl_bio_face_obrigatoria = models.CharField(max_length=1, blank=True, null=True)
    fl_bio_face_validada = models.CharField(max_length=1, blank=True, null=True)
    nu_tentativas_bio_face = models.IntegerField(blank=True, null=True)
    ds_jus_bio_face_negativa = models.CharField(max_length=240, blank=True, null=True)
    fl_class_pos_cirurgica = models.CharField(max_length=1, blank=True, null=True)
    nu_vigencia_pos = models.IntegerField(blank=True, null=True)
    fl_isolamento_contato = models.CharField(max_length=1, blank=True, null=True)
    vl_sinais_vitais = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_analise_visita_enfermagem'


class TbAnamnese(models.Model):
    ds_anamnese = models.CharField(primary_key=True, max_length=18)

    class Meta:
        managed = False
        db_table = 'tb_anamnese'


class TbAnamneseMamografia(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ordem')
    ds_indicacao_queixa = models.CharField(max_length=255, blank=True, null=True)
    ds_evolucao = models.CharField(max_length=255, blank=True, null=True)
    ds_um = models.CharField(max_length=60, blank=True, null=True)
    ds_menarca = models.CharField(max_length=60, blank=True, null=True)
    ds_menopausa = models.CharField(max_length=60, blank=True, null=True)
    nu_gestacao = models.FloatField(blank=True, null=True)
    nu_gestacao_para = models.FloatField(blank=True, null=True)
    nu_gestacao_aborto = models.FloatField(blank=True, null=True)
    fl_aleitamento = models.CharField(max_length=1, blank=True, null=True)
    nu_aleitamento_duracao = models.FloatField(blank=True, null=True)
    fl_ca_mama_mae = models.CharField(max_length=1, blank=True, null=True)
    fl_ca_mama_irma = models.CharField(max_length=1, blank=True, null=True)
    fl_ca_mama_avo = models.CharField(max_length=1, blank=True, null=True)
    fl_ca_mama_tia = models.CharField(max_length=1, blank=True, null=True)
    fl_biopsia_md = models.CharField(max_length=1, blank=True, null=True)
    dt_biopsia_md = models.DateField(blank=True, null=True)
    fl_biopsia_me = models.CharField(max_length=1, blank=True, null=True)
    dt_biopsia_me = models.DateField(blank=True, null=True)
    fl_quadrantectomia_md = models.CharField(max_length=1, blank=True, null=True)
    dt_quadrantectomia_md = models.DateField(blank=True, null=True)
    fl_quadrantectomia_me = models.CharField(max_length=1, blank=True, null=True)
    dt_quadrantectomia_me = models.DateField(blank=True, null=True)
    fl_mastectomia_md = models.CharField(max_length=1, blank=True, null=True)
    dt_mastectomia_md = models.DateField(blank=True, null=True)
    fl_mastectomia_me = models.CharField(max_length=1, blank=True, null=True)
    dt_mastectomia_me = models.DateField(blank=True, null=True)
    fl_plastica_md = models.CharField(max_length=1, blank=True, null=True)
    dt_plastica_md = models.DateField(blank=True, null=True)
    fl_plastica_me = models.CharField(max_length=1, blank=True, null=True)
    dt_plastica_me = models.DateField(blank=True, null=True)
    fl_exame_anterior = models.CharField(max_length=1, blank=True, null=True)
    ds_exame_mama_d = models.CharField(max_length=255, blank=True, null=True)
    ds_exame_mama_e = models.CharField(max_length=255, blank=True, null=True)
    fl_tecnica = models.CharField(max_length=1, blank=True, null=True)
    ds_cc_mama_d_milo = models.CharField(max_length=255, blank=True, null=True)
    ds_cc_mama_e_milo = models.CharField(max_length=255, blank=True, null=True)
    nu_filmes_desp = models.FloatField(blank=True, null=True)
    nu_filmes_util = models.FloatField(blank=True, null=True)
    nm_profissional = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_anamnese_mamografia'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem'),)


class TbAnamnesePaciente(models.Model):
    cd_paciente = models.ForeignKey('TbItensAnamnese', models.DO_NOTHING, db_column='cd_paciente', primary_key=True)
    ds_anamnese = models.ForeignKey('TbItensAnamnese', models.DO_NOTHING, db_column='ds_anamnese')
    dt_anamnese = models.DateField()
    ds_descricao = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_anamnese_paciente'
        unique_together = (('cd_paciente', 'dt_anamnese', 'ds_anamnese'),)


class TbAnestProcedRealizado(models.Model):
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_ocorrencia = models.FloatField(blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    cd_profissional = models.FloatField()
    cd_tipo_ato_profissional = models.FloatField()
    cd_procedimento = models.CharField(max_length=20)
    cd_senha_autorizacao = models.CharField(max_length=30)
    cd_grupo_produto = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_anest_proced_realizado'


class TbAnoMesPlantao(models.Model):
    cd_medico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    ano_referencia = models.IntegerField()
    mes_referencia = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_ano_mes_plantao'
        unique_together = (('cd_medico', 'ano_referencia', 'mes_referencia'),)


class TbAntimicrobianoObservacao(models.Model):
    cd_material = models.FloatField(primary_key=True)
    ds_observacao = models.CharField(max_length=500, blank=True, null=True)
    fl_uso_restrito = models.CharField(max_length=1, blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)
    ds_historico_clinico = models.CharField(max_length=500, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_antimicrobiano_observacao'


class TbAntimicrobianoUsoRestrito(models.Model):
    cd_material = models.FloatField(primary_key=True)
    cd_indicacao = models.FloatField()
    ds_indicacao = models.CharField(max_length=500, blank=True, null=True)
    fl_grava = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_antimicrobiano_uso_restrito'
        unique_together = (('cd_material', 'cd_indicacao'),)


class TbAparelhosGasesTaxas(models.Model):
    cd_item = models.IntegerField(primary_key=True)
    ds_item = models.CharField(max_length=40)
    fl_mostrar_na_ns = models.CharField(max_length=1, blank=True, null=True)
    nu_ordem_impressao = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_aparelhos_gases_taxas'


class TbAparelhosProcedimentos(models.Model):
    cd_item = models.FloatField(primary_key=True)
    cd_procedimento = models.CharField(max_length=8)

    class Meta:
        managed = False
        db_table = 'tb_aparelhos_procedimentos'
        unique_together = (('cd_item', 'cd_procedimento'),)


class TbApexLog(models.Model):
    cd_apex_log = models.FloatField(primary_key=True)
    cd_operador = models.CharField(max_length=30)
    nm_sistema = models.CharField(max_length=100)
    dt_transacao = models.DateField()
    hr_transacao = models.CharField(max_length=5)
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento', blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_posto = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_posto', blank=True, null=True)
    fl_login = models.CharField(max_length=1)
    nr_session_id = models.CharField(max_length=50, blank=True, null=True)
    nr_ip = models.CharField(max_length=50, blank=True, null=True)
    ds_log = models.CharField(max_length=2000, blank=True, null=True)
    fl_tipo_local = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_apex_log'


class TbAprazaPrescMatMed(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_prescricao_plano = models.ForeignKey('TbPrescricaoPlano', models.DO_NOTHING, db_column='cd_ordem_prescricao_plano')
    cd_ordem = models.IntegerField()
    dt_aplicado = models.DateField(blank=True, null=True)
    hr_aplicado = models.IntegerField(blank=True, null=True)
    dt_aprazamento = models.DateField()
    hr_aprazamento = models.IntegerField()
    qt_aprazamento = models.IntegerField(blank=True, null=True)
    qt_aplicada = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)
    cd_ordem_hv = models.ForeignKey('TbPrescricaoMedicaHv', models.DO_NOTHING, db_column='cd_ordem_hv', blank=True, null=True)
    cd_ordem_proc_plano_uso = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_ordem_proc_plano_uso', blank=True, null=True)
    ds_justificativa_nao_adm = models.CharField(max_length=300, blank=True, null=True)
    fl_gerado_gasto = models.CharField(max_length=1, blank=True, null=True)
    cd_status_administracao_med = models.ForeignKey('TbStatusAdministracaoMed', models.DO_NOTHING, db_column='cd_status_administracao_med', blank=True, null=True)
    cd_codigos_barra_lidos = models.CharField(max_length=2000, blank=True, null=True)
    fl_paciente_lido = models.CharField(max_length=1, blank=True, null=True)
    dt_preparo = models.DateField(blank=True, null=True)
    hr_preparo = models.IntegerField(blank=True, null=True)
    fl_bt_iniciar = models.CharField(max_length=1, blank=True, null=True)
    cd_terminal_status = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao_status = models.DateField(blank=True, null=True)
    cd_operador_status = models.CharField(max_length=30, blank=True, null=True)
    fl_carro_parada_c = models.CharField(max_length=1, blank=True, null=True)
    dt_hr_paciente_procedimento = models.DateField(blank=True, null=True)
    fl_bio_digital_obrigatoria = models.CharField(max_length=1, blank=True, null=True)
    fl_bio_digital_coletada = models.CharField(max_length=1, blank=True, null=True)
    ds_jus_digital_nao_coletada = models.CharField(max_length=1000, blank=True, null=True)
    fl_bio_face_obrigatoria = models.CharField(max_length=1, blank=True, null=True)
    fl_bio_face_validada = models.CharField(max_length=1, blank=True, null=True)
    ds_jus_bio_face_negativa = models.CharField(max_length=1000, blank=True, null=True)
    qt_dose_adm = models.IntegerField(blank=True, null=True)
    cd_unid_usual_dose_adm = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unid_usual_dose_adm', blank=True, null=True)
    cd_supervisor_lib_mav = models.CharField(max_length=10, blank=True, null=True)
    dt_liberacao_mav = models.DateField(blank=True, null=True)
    cd_supervisor_lib_codbar = models.CharField(max_length=10, blank=True, null=True)
    ds_justifica_mudanca_horario = models.CharField(max_length=1000, blank=True, null=True)
    dt_mudanca_horario = models.DateField(blank=True, null=True)
    cd_user_mudanca = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_apraza_presc_mat_med'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_prescricao_plano', 'cd_ordem'),)


class TbAprazamentoDieta(models.Model):
    cd_atendimento = models.ForeignKey('TbDietaPaciente', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbDietaPaciente', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbDietaPaciente', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_dieta = models.ForeignKey('TbDietaPaciente', models.DO_NOTHING, db_column='cd_ordem_dieta')
    cd_ordem = models.IntegerField()
    dt_aprazamento = models.DateField()
    hr_aprazamento = models.IntegerField()
    dt_aplicacao = models.DateField(blank=True, null=True)
    hr_aplicacao = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_tipo_cardapio = models.IntegerField()
    nu_refeicao = models.IntegerField(unique=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)
    ds_justificativa_nao_adm = models.CharField(max_length=300, blank=True, null=True)
    fl_paciente_lido = models.CharField(max_length=1, blank=True, null=True)
    dt_preparo = models.DateField(blank=True, null=True)
    hr_preparo = models.IntegerField(blank=True, null=True)
    fl_bio_digital_obrigatoria = models.CharField(max_length=1, blank=True, null=True)
    fl_bio_digital_coletada = models.CharField(max_length=1, blank=True, null=True)
    ds_jus_digital_nao_coletada = models.CharField(max_length=1000, blank=True, null=True)
    fl_bio_face_obrigatoria = models.CharField(max_length=1, blank=True, null=True)
    fl_bio_face_validada = models.CharField(max_length=1, blank=True, null=True)
    ds_jus_bio_face_negativa = models.CharField(max_length=1000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_aprazamento_dieta'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_dieta', 'cd_ordem'),)


class TbAprazamentoPrescAvaliacao(models.Model):
    cd_atendimento = models.ForeignKey('TbPrescricaoAvaliacao', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPrescricaoAvaliacao', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbPrescricaoAvaliacao', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_avaliacao = models.ForeignKey('TbPrescricaoAvaliacao', models.DO_NOTHING, db_column='cd_ordem_avaliacao')
    cd_ordem_aprazamento = models.IntegerField()
    dt_aprazamento = models.DateField()
    hr_aprazamento = models.IntegerField(blank=True, null=True)
    dt_aplicado = models.DateField(blank=True, null=True)
    hr_aplicado = models.IntegerField(blank=True, null=True)
    ds_texto = models.CharField(max_length=4000, blank=True, null=True)
    ds_texto_livre = models.TextField(blank=True, null=True)
    ds_data = models.DateField(blank=True, null=True)
    ds_numero = models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)
    ds_lista = models.CharField(max_length=4000, blank=True, null=True)
    ds_check = models.CharField(max_length=1, blank=True, null=True)
    ds_imagem = models.BinaryField(blank=True, null=True)
    ds_som = models.TextField(blank=True, null=True)  # This field type is a guess.
    ds_video = models.BinaryField(blank=True, null=True)
    ds_formula = models.CharField(max_length=2000, blank=True, null=True)
    fl_formula = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_atributo = models.CharField(max_length=20)
    fl_tipo_valor = models.CharField(max_length=20)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    ds_resultado = models.CharField(max_length=2000, blank=True, null=True)
    fl_turno = models.CharField(max_length=1, blank=True, null=True)
    fl_mantido = models.CharField(max_length=1, blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)
    cd_unidade_usual = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_usual', blank=True, null=True)
    vl_formula = models.CharField(max_length=240, blank=True, null=True)
    ds_mutiplo_valor = models.TextField(blank=True, null=True)
    fl_resultado_acumulado = models.CharField(max_length=1, blank=True, null=True)
    ds_numero_acumulado = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    ds_justificativa_nao_adm = models.CharField(max_length=30, blank=True, null=True)
    sinal_balanco = models.CharField(max_length=1, blank=True, null=True)
    cd_avaliacao = models.IntegerField(blank=True, null=True)
    cd_nivel_avaliacao = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_componente_avaliacao = models.IntegerField(blank=True, null=True)
    cd_avaliacao_referenciada = models.IntegerField(blank=True, null=True)
    id_componente = models.CharField(max_length=2000, blank=True, null=True)
    cd_papel = models.ForeignKey('TbPapel', models.DO_NOTHING, db_column='cd_papel', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_aprazamento_presc_avaliacao'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_avaliacao', 'cd_ordem_aprazamento'),)


class TbApresentacao(models.Model):
    cd_apresentacao = models.CharField(primary_key=True, max_length=4)
    nm_apresentacao = models.CharField(max_length=45)
    cd_termo = models.CharField(max_length=12, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_apresentacao'


class TbApresentacaoDiluicao(models.Model):
    cd_principio_ativo = models.ForeignKey('TbPrincipioAtivo', models.DO_NOTHING, db_column='cd_principio_ativo', primary_key=True)
    cd_ocorrencia_diluicao = models.IntegerField()
    cd_apresentacao = models.ForeignKey(TbApresentacao, models.DO_NOTHING, db_column='cd_apresentacao')
    cd_estado_fisico = models.ForeignKey('TbEstadoFisico', models.DO_NOTHING, db_column='cd_estado_fisico')
    qt_volume = models.FloatField(blank=True, null=True)
    qt_dosagem = models.FloatField()
    cd_unidade_dosagem = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_dosagem')
    ds_recomendacoes = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_apresentacao_diluicao'
        unique_together = (('cd_principio_ativo', 'cd_ocorrencia_diluicao'),)


class TbApresentacaoGasto(models.Model):
    cd_apresentacao = models.ForeignKey(TbApresentacao, models.DO_NOTHING, db_column='cd_apresentacao', primary_key=True)
    cd_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_mat_med')

    class Meta:
        managed = False
        db_table = 'tb_apresentacao_gasto'
        unique_together = (('cd_apresentacao', 'cd_mat_med'),)


class TbApuracaoLeitosPostos(models.Model):
    cd_posto = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_posto', primary_key=True)
    qt_apuracao = models.FloatField(blank=True, null=True)
    dt_apuracao = models.DateField()
    qt_leitos_ocupados = models.FloatField(blank=True, null=True)
    qt_leitos_ocup_inst = models.FloatField(blank=True, null=True)
    qt_leitos_dayclinic = models.FloatField(blank=True, null=True)
    qt_leitos_bloqueados = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_apuracao_leitos_postos'
        unique_together = (('cd_posto', 'dt_apuracao'),)


class TbApuracaoVisAcoEme(models.Model):
    dt_apuracao = models.DateField(primary_key=True)
    cd_posto = models.CharField(max_length=6)
    cd_atendimento = models.IntegerField()
    cd_acomodacao = models.CharField(max_length=6, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_apuracao_vis_aco_eme'
        unique_together = (('dt_apuracao', 'cd_posto', 'cd_atendimento'),)


class TbArqFisicoAtend(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_setor_arquivo = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_arquivo', blank=True, null=True)
    cd_estante = models.CharField(max_length=10, blank=True, null=True)
    cd_prateleira = models.CharField(max_length=10, blank=True, null=True)
    cd_arquivo = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_arq_fisico_atend'


class TbArquivoBfile(models.Model):
    cd_id = models.FloatField(primary_key=True)
    ds_bfile = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'tb_arquivo_bfile'


class TbAsa(models.Model):
    cd_asa = models.FloatField(primary_key=True)
    ds_asa = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_asa'


class TbAspectoPaciente(models.Model):
    cd_aspecto = models.BooleanField(primary_key=True)
    nm_aspecto = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_aspecto_paciente'


class TbAssinaturaMedico(models.Model):
    cd_medico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    assinatura = models.TextField(blank=True, null=True)  # This field type is a guess.
    dt_inclusao = models.DateField(blank=True, null=True)
    ds_terminal = models.CharField(max_length=40, blank=True, null=True)
    nm_usuario = models.CharField(max_length=30, blank=True, null=True)
    cd_senha = models.CharField(unique=True, max_length=6, blank=True, null=True)
    cd_dedo = models.IntegerField(blank=True, null=True)
    template_digital = models.CharField(max_length=600, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_assinatura_medico'


class TbAssociacaoCcSetor(models.Model):
    cd_setor = models.CharField(primary_key=True, max_length=6)
    id_centro_custo = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_associacao_cc_setor'
        unique_together = (('cd_setor', 'id_centro_custo'),)


class TbAtendRecebimentos(models.Model):
    dt_mes_base = models.CharField(max_length=20, blank=True, null=True)
    cd_convenio = models.FloatField(blank=True, null=True)
    dt_atendimento = models.DateField(blank=True, null=True)
    dt_fim_atendimento = models.DateField(blank=True, null=True)
    cd_atendimento = models.FloatField(unique=True, blank=True, null=True)
    cd_plano = models.FloatField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    cd_paciente = models.FloatField(blank=True, null=True)
    nm_paciente = models.CharField(max_length=45, blank=True, null=True)
    nu_cgc_cpf = models.FloatField(blank=True, null=True)
    nu_rg_paciente = models.BigIntegerField(blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    email = models.CharField(max_length=60, blank=True, null=True)
    cd_senha_hap_vida = models.CharField(max_length=40, blank=True, null=True)
    tipo_atendimento = models.CharField(max_length=45, blank=True, null=True)
    tipo_conta = models.CharField(max_length=45, blank=True, null=True)
    cd_obrigacao = models.FloatField(blank=True, null=True)
    vl_adiantamento = models.FloatField(blank=True, null=True)
    vl_conta_hosp = models.FloatField(blank=True, null=True)
    vl_desconto = models.FloatField(blank=True, null=True)
    vl_pago = models.FloatField(blank=True, null=True)
    vl_saldo = models.FloatField(blank=True, null=True)
    cd_cobranca = models.FloatField(blank=True, null=True)
    dt_cobranca = models.DateField(blank=True, null=True)
    cd_pessoa = models.FloatField(blank=True, null=True)
    ds_operador = models.CharField(max_length=45, blank=True, null=True)
    ds_situacao = models.CharField(max_length=45, blank=True, null=True)
    cd_unidade_atendimento = models.FloatField(blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_status_obrigacao = models.FloatField(blank=True, null=True)
    ds_status = models.CharField(max_length=45, blank=True, null=True)
    dt_inclusao = models.DateField(blank=True, null=True)
    dt_alteracao = models.DateField(blank=True, null=True)
    vl_sld_cob_jur = models.FloatField(blank=True, null=True)
    vl_pg_cob_jur = models.FloatField(blank=True, null=True)
    fl_auditoria = models.FloatField(blank=True, null=True)
    ds_auditoria = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atend_recebimentos'


class TbAtendSam(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    dt_coleta = models.DateField()
    hr_coleta = models.IntegerField()
    vl_temp = models.IntegerField(blank=True, null=True)
    vl_fc = models.IntegerField(blank=True, null=True)
    vl_fr = models.IntegerField(blank=True, null=True)
    vl_pas = models.IntegerField(blank=True, null=True)
    vl_avsd = models.IntegerField(blank=True, null=True)
    vl_mews = models.IntegerField(blank=True, null=True)
    cd_usuario_recebe = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atend_sam'
        unique_together = (('cd_atendimento', 'dt_coleta', 'hr_coleta'),)


class TbAtendimentoCaucao(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_usu_liberou_caucao = models.CharField(max_length=30, blank=True, null=True)
    ds_just_liberou_caucao = models.CharField(max_length=1000, blank=True, null=True)
    vl_devolucao_caucao = models.FloatField(blank=True, null=True)
    cd_usu_devolucao_caucao = models.CharField(max_length=30, blank=True, null=True)
    dt_devolucao_caucao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atendimento_caucao'


class TbAtendimentoCirurgicoImp(models.Model):
    cd_atendimento = models.FloatField(primary_key=True)
    cd_ocorrencia = models.FloatField()
    cd_ordem = models.FloatField()
    cd_procedimento = models.FloatField()
    cd_paciente = models.FloatField()
    dt_impresso = models.DateField(blank=True, null=True)
    fl_impresso = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_atendimento_cirurgico_imp'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem'),)


class TbAtendimentoDeclaracao(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    nm_acompanhante = models.CharField(max_length=45, blank=True, null=True)
    dt_inicial = models.DateField()
    dt_final = models.DateField()
    dt_operacao = models.DateField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atendimento_declaracao'


class TbAtendimentoDocDigit(models.Model):
    cd_ocorrencia = models.FloatField(primary_key=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento')
    dt_digitalizacao = models.DateField(blank=True, null=True)
    ds_ocorrencia = models.CharField(max_length=100, blank=True, null=True)
    hr_digitalizacao = models.IntegerField(blank=True, null=True)
    cd_tipo_doc_digit = models.ForeignKey('TbTipoDocDigit', models.DO_NOTHING, db_column='cd_tipo_doc_digit', blank=True, null=True)
    dt_transacao = models.DateTimeField(blank=True, null=True)
    im_digitalizacao = models.BinaryField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    terminal = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atendimento_doc_digit'


class TbAtendimentoEncAuto(models.Model):
    cd_senha_master = models.ForeignKey('TbSenhaAtendimentoSa', models.DO_NOTHING, db_column='cd_senha_master', primary_key=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    fl_status_ant = models.FloatField(blank=True, null=True)
    dt_encerramento = models.DateField()
    fl_consolidado = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atendimento_enc_auto'
        unique_together = (('cd_senha_master', 'dt_encerramento'),)


class TbAtendimentoFluxo(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    cd_ocorrencia = models.FloatField(blank=True, null=True)
    cd_fluxo_local = models.ForeignKey('TbFluxoLocal', models.DO_NOTHING, db_column='cd_fluxo_local', blank=True, null=True)
    dt_operecao = models.DateField(blank=True, null=True)
    cd_usuario_registro = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atendimento_fluxo'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_fluxo_local'),)


class TbAtendimentoLicenca(models.Model):
    cd_atendimento = models.FloatField(primary_key=True)
    dt_inicial = models.DateField()
    nu_periodo = models.FloatField()
    nu_ctps = models.FloatField()
    nu_serie_ctps = models.CharField(max_length=10)
    cd_uf_ctps = models.CharField(max_length=2)
    dt_operacao = models.DateField()
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    nu_documento_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atendimento_licenca'
        unique_together = (('cd_atendimento', 'dt_operacao'),)


class TbAtendimentoMovDoc(models.Model):
    cd_atendimento_mov_doc = models.FloatField(primary_key=True)
    cd_atendimento = models.FloatField()
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_senha_autoriza = models.CharField(max_length=20, blank=True, null=True)
    cd_tipo_documento_escaneavel = models.FloatField()
    nu_documento = models.FloatField()
    ds_arquivo = models.CharField(max_length=30, blank=True, null=True)
    cd_setor_origem = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_destino = models.CharField(max_length=6, blank=True, null=True)
    fl_tipo_envio = models.NullBooleanField()
    fl_obrigatorio = models.NullBooleanField()
    fl_status = models.NullBooleanField()
    dt_instancia = models.DateField(blank=True, null=True)
    cd_processo_doc_atend = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atendimento_mov_doc'
        unique_together = (('cd_atendimento', 'cd_tipo_documento_escaneavel', 'nu_documento', 'cd_procedimento', 'cd_senha_autoriza'),)


class TbAtendimentoQuestionario(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    fl_cirurgia = models.CharField(max_length=1)
    ds_cirurgia = models.CharField(max_length=500, blank=True, null=True)
    fl_acidente = models.CharField(max_length=1)
    ds_acidente = models.CharField(max_length=500, blank=True, null=True)
    fl_habito = models.CharField(max_length=1)
    ds_habito = models.CharField(max_length=500, blank=True, null=True)
    fl_doenca = models.CharField(max_length=1)
    ds_doenca = models.CharField(max_length=500, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atendimento_questionario'


class TbAtestadoMedico(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    dt_emissao = models.DateField()
    hr_emissao = models.IntegerField(blank=True, null=True)
    qt_dias = models.IntegerField()
    cid10 = models.CharField(max_length=6, blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    cd_medico_atendente = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_medico_atendente', blank=True, null=True)
    nu_documento = models.ForeignKey('TbDocumentoProntuario', models.DO_NOTHING, blank=True, null=True)
    fl_coacao = models.CharField(max_length=1, blank=True, null=True)
    ds_senha = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atestado_medico'
        unique_together = (('cd_atendimento', 'dt_emissao'),)


class TbAtivaDesativaItem(models.Model):
    cd_filial = models.CharField(max_length=3)
    qt_meses = models.IntegerField()
    dt_atu = models.DateField()
    cd_usuario = models.CharField(max_length=10, blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ativa_desativa_item'


class TbAtividade(models.Model):
    cd_atividade = models.IntegerField(primary_key=True)
    nm_atividade = models.CharField(max_length=60)
    cd_atividade_pai = models.IntegerField(blank=True, null=True)
    nm_icone = models.CharField(max_length=40, blank=True, null=True)
    nm_bloco_entrada = models.CharField(max_length=60, blank=True, null=True)
    fl_query = models.CharField(max_length=1, blank=True, null=True)
    fl_insert = models.CharField(max_length=1, blank=True, null=True)
    fl_update = models.CharField(max_length=1, blank=True, null=True)
    fl_delete = models.CharField(max_length=1, blank=True, null=True)
    fl_status = models.CharField(max_length=1)
    nm_fomulario = models.CharField(max_length=50, blank=True, null=True)
    nm_relatorio = models.CharField(max_length=240, blank=True, null=True)
    nm_item = models.CharField(max_length=50, blank=True, null=True)
    nu_ordem_apresentacao = models.IntegerField(blank=True, null=True)
    cd_menu = models.CharField(unique=True, max_length=10, blank=True, null=True)
    fl_menu = models.CharField(max_length=3, blank=True, null=True)
    nm_formulario_pep_eme = models.CharField(max_length=50, blank=True, null=True)
    nm_icone_pep = models.CharField(max_length=40, blank=True, null=True)
    nm_parameter = models.CharField(max_length=240, blank=True, null=True)
    fl_emergencia = models.CharField(max_length=1, blank=True, null=True)
    fl_internacao = models.CharField(max_length=1, blank=True, null=True)
    fl_cirurgico = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_grupo = models.ForeignKey('TbTipoGrupoAvaliacao', models.DO_NOTHING, db_column='fl_tipo_grupo', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atividade'


class TbAtividadeOcorrenciaAdm(models.Model):
    cd_sistema = models.ForeignKey('TbOcorrenciaAdministrativa', models.DO_NOTHING, db_column='cd_sistema', primary_key=True)
    cd_ocorrencia = models.ForeignKey('TbOcorrenciaAdministrativa', models.DO_NOTHING, db_column='cd_ocorrencia')
    dt_inicio_atividade = models.DateField()
    dt_final_atividade = models.DateField(blank=True, null=True)
    cd_consultor = models.FloatField()
    ds_atividade = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atividade_ocorrencia_adm'
        unique_together = (('cd_sistema', 'cd_ocorrencia', 'dt_inicio_atividade'),)


class TbAtualizarCadastro(models.Model):
    vendedor = models.CharField(max_length=45, blank=True, null=True)
    empresa = models.CharField(max_length=51, blank=True, null=True)
    endereco_empresa = models.CharField(max_length=307, blank=True, null=True)
    endereco_tit = models.CharField(max_length=307, blank=True, null=True)
    cpf_tit = models.FloatField(blank=True, null=True)
    titular = models.CharField(max_length=45, blank=True, null=True)
    cd_usuario = models.CharField(max_length=14, blank=True, null=True)
    cd_pessoa = models.FloatField(blank=True, null=True)
    beneficiario = models.CharField(max_length=70, blank=True, null=True)
    nascimento = models.DateField(blank=True, null=True)
    cidade = models.CharField(max_length=60, blank=True, null=True)
    ind = models.CharField(max_length=4000, blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    senha = models.CharField(max_length=6, blank=True, null=True)
    nu_cpf = models.FloatField(blank=True, null=True)
    nm_mae = models.CharField(max_length=60, blank=True, null=True)
    nu_celular1 = models.CharField(max_length=10, blank=True, null=True)
    nu_celular2 = models.CharField(max_length=10, blank=True, null=True)
    email = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_atualizar_cadastro'


class TbAudioConferenciaPep(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_ordem = models.IntegerField()
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    hr_inicio = models.IntegerField(blank=True, null=True)
    dt_fim = models.DateField(blank=True, null=True)
    hr_fim = models.IntegerField(blank=True, null=True)
    cd_medico_origem = models.IntegerField(blank=True, null=True)
    cd_medico_destino = models.IntegerField(blank=True, null=True)
    ds_observacoes_origem = models.CharField(max_length=1000, blank=True, null=True)
    ds_observacoes_destino = models.CharField(max_length=1000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_audio_conferencia_pep'
        unique_together = (('cd_atendimento', 'cd_ordem'),)


class TbAuditAcoes(models.Model):
    id_session = models.CharField(max_length=20, blank=True, null=True)
    cd_acao = models.FloatField()
    cd_tipo_acesso = models.NullBooleanField()
    cd_papel = models.IntegerField(blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_operador2 = models.CharField(max_length=30, blank=True, null=True)
    ds_operador2 = models.CharField(max_length=45, blank=True, null=True)
    cd_atividade = models.IntegerField(blank=True, null=True)
    nm_atividade = models.CharField(max_length=60, blank=True, null=True)
    dt_acao = models.DateTimeField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_tela = models.CharField(max_length=60, blank=True, null=True)
    nu_tentativa = models.IntegerField(blank=True, null=True)
    ds_acao = models.CharField(max_length=500, blank=True, null=True)
    ds_obs = models.CharField(max_length=2000, blank=True, null=True)
    ds_filial = models.CharField(max_length=20, blank=True, null=True)
    ds_papel = models.CharField(max_length=60, blank=True, null=True)
    cd_campo = models.CharField(max_length=60, blank=True, null=True)
    cd_valor_old = models.CharField(max_length=2000, blank=True, null=True)
    cd_valor_new = models.CharField(max_length=2000, blank=True, null=True)
    cd_tabela = models.CharField(max_length=60, blank=True, null=True)
    id_transacao = models.FloatField(blank=True, null=True)
    ds_ip = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_audit_acoes'


class TbAuditRequisicaoPerdas(models.Model):
    cd_requisicao = models.IntegerField()
    cd_setor_controle = models.CharField(max_length=6)
    cd_setor_requisitante = models.CharField(max_length=6)
    cd_material = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    qt_material = models.FloatField(blank=True, null=True)
    cd_audit_hospital = models.CharField(max_length=10, blank=True, null=True)
    ds_observ_hospital = models.CharField(max_length=200, blank=True, null=True)
    dt_audit_hospital = models.DateField(blank=True, null=True)
    cd_audit_logistica = models.CharField(max_length=10, blank=True, null=True)
    ds_observ_logistica = models.CharField(max_length=200, blank=True, null=True)
    dt_audit_logistica = models.DateField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    fl_audit = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_audit_requisicao_perdas'


class TbAuditarIp(models.Model):
    ds_ip = models.CharField(max_length=30)
    cd_operador = models.CharField(max_length=30)
    dt_audit = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_auditar_ip'


class TbAuditoriaObito(models.Model):
    id_auditoria_obito = models.FloatField(primary_key=True)
    dt_obito = models.DateField(blank=True, null=True)
    hr_obito = models.CharField(max_length=15, blank=True, null=True)
    dt_limite_audit = models.DateField(blank=True, null=True)
    cd_atendimento = models.ForeignKey('TbPrescricaoAlta', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPrescricaoAlta', models.DO_NOTHING, db_column='cd_ocorrencia_plano', blank=True, null=True)
    cd_ordem_prescricao = models.ForeignKey('TbPrescricaoAlta', models.DO_NOTHING, db_column='cd_ordem_prescricao', blank=True, null=True)
    cd_ordem_alta = models.ForeignKey('TbPrescricaoAlta', models.DO_NOTHING, db_column='cd_ordem_alta', blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)
    dt_alta_medica = models.DateField(blank=True, null=True)
    hr_alta_medica = models.IntegerField(blank=True, null=True)
    dt_alta_adm = models.DateField(blank=True, null=True)
    hr_alta_adm = models.IntegerField(blank=True, null=True)
    nm_paciente = models.CharField(max_length=45, blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_auditoria_obito'


class TbAuditoriaObitoItem(models.Model):
    id_auditoria_obito = models.FloatField(primary_key=True)
    cd_ordem = models.FloatField()
    cd_medico_auditor = models.FloatField(blank=True, null=True)
    dt_auditoria = models.DateField(blank=True, null=True)
    cd_cid_contribuicao = models.CharField(max_length=4, blank=True, null=True)
    ds_auditoria = models.CharField(max_length=3000, blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    cd_usuario_cancelou = models.CharField(max_length=10, blank=True, null=True)
    cd_cid_contribuicao2 = models.CharField(max_length=4, blank=True, null=True)
    cd_cid_contribuicao3 = models.CharField(max_length=4, blank=True, null=True)
    cd_cid_principal = models.CharField(max_length=4, blank=True, null=True)
    fl_obito_oncologia = models.CharField(max_length=1, blank=True, null=True)
    fl_obito_elucidativo = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem_original = models.FloatField(blank=True, null=True)
    cd_cid_contribuicao4 = models.CharField(max_length=4, blank=True, null=True)
    cd_cid_contribuicao5 = models.CharField(max_length=4, blank=True, null=True)
    ds_observacao_auditor = models.CharField(max_length=3000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_auditoria_obito_item'
        unique_together = (('id_auditoria_obito', 'cd_ordem'),)


class TbAuditoriaProcedimentoKit(models.Model):
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    fl_auditoria = models.CharField(max_length=1, blank=True, null=True)
    dt_auditoria = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_auditoria_procedimento_kit'


class TbAutorOncoHist(models.Model):
    cd_autorizacao_senha = models.FloatField(primary_key=True)
    dt_autorizacao_tratamento = models.DateField()
    nu_item_tratamento = models.FloatField()
    dt_autorizacao = models.DateField(blank=True, null=True)
    cd_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_mat_med', blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade_atendimento = models.ForeignKey('TbFilial', models.DO_NOTHING, db_column='cd_unidade_atendimento', blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_paciente = models.ForeignKey('TbPaciente', models.DO_NOTHING, db_column='cd_paciente', blank=True, null=True)
    cd_pessoa_hosp = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa_hosp', blank=True, null=True)
    cd_pessoa_hap = models.FloatField(blank=True, null=True)
    nm_pessoa = models.CharField(max_length=45, blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    nome_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_estoq = models.FloatField(blank=True, null=True)
    prc_mat_med_estoq = models.FloatField(blank=True, null=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_autor_onco_hist'
        unique_together = (('cd_autorizacao_senha', 'dt_autorizacao_tratamento', 'nu_item_tratamento'),)


class TbAutorizaCheque(models.Model):
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa', primary_key=True)
    dt_validade = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_autoriza_cheque'


class TbAutorizacaoAcesso(models.Model):
    cd_papel = models.ForeignKey('TbPapel', models.DO_NOTHING, db_column='cd_papel', primary_key=True)
    cd_menu = models.ForeignKey(TbAtividade, models.DO_NOTHING, db_column='cd_menu')
    tp_privilegio = models.CharField(max_length=1)
    ds_privilegio = models.CharField(max_length=15)

    class Meta:
        managed = False
        db_table = 'tb_autorizacao_acesso'
        unique_together = (('cd_papel', 'cd_menu', 'tp_privilegio', 'ds_privilegio'),)


class TbAutorizacaoPepPosto(models.Model):
    cd_setor = models.CharField(primary_key=True, max_length=6)
    cd_atendimento = models.FloatField()
    dt_gravacao = models.DateField()
    hr_gravacao = models.IntegerField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_autorizacao_pep_posto'
        unique_together = (('cd_setor', 'cd_atendimento', 'dt_gravacao'),)


class TbAutorizacaoProcedimentoSa(models.Model):
    cd_atendimento = models.FloatField(primary_key=True)
    cd_senha_master = models.FloatField()
    cd_exame = models.FloatField()
    cd_procedimento = models.CharField(max_length=20)
    cd_restricao = models.CharField(max_length=1000, blank=True, null=True)
    cd_senha_autoriza = models.CharField(max_length=30, blank=True, null=True)
    cd_pre_autorizacao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_autorizacao_procedimento_sa'
        unique_together = (('cd_atendimento', 'cd_senha_master', 'cd_exame', 'cd_procedimento'),)


class TbAuxExameTemp(models.Model):
    cd_atendimento = models.FloatField(primary_key=True)
    cd_grupo = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_aux_exame_temp'
        unique_together = (('cd_atendimento', 'cd_grupo'),)


class TbAuxGrupoTemp(models.Model):
    usuario = models.CharField(primary_key=True, max_length=100)
    cd_grupo = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_aux_grupo_temp'
        unique_together = (('usuario', 'cd_grupo'),)


class TbAvaliacao(models.Model):
    cd_avaliacao = models.IntegerField(primary_key=True)
    nm_avaliacao = models.CharField(max_length=255)
    cd_subgrupo_avaliacao = models.ForeignKey('TbSubgrupoAvaliacao', models.DO_NOTHING, db_column='cd_subgrupo_avaliacao')
    fl_uso = models.CharField(max_length=1)
    nm_documento = models.CharField(max_length=80, blank=True, null=True)
    fl_tipo_grupo = models.ForeignKey('TbTipoGrupoAvaliacao', models.DO_NOTHING, db_column='fl_tipo_grupo', blank=True, null=True)
    cd_tipo_solicitacao = models.ForeignKey('TbTipoSolicServicos', models.DO_NOTHING, db_column='cd_tipo_solicitacao', blank=True, null=True)
    cd_especie_avaliacao = models.CharField(max_length=100, blank=True, null=True)
    id_mnemonico_avaliacao = models.CharField(max_length=200, blank=True, null=True)
    cd_tipo_documento_prontuario = models.ForeignKey('TbTipoDocumentoProntuario', models.DO_NOTHING, db_column='cd_tipo_documento_prontuario', blank=True, null=True)
    fl_expandir = models.CharField(max_length=1, blank=True, null=True)
    fl_imp_sem_resultado = models.CharField(max_length=1, blank=True, null=True)
    fl_importa_dados_novos_itens = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_avaliacao'


class TbAvaliacaoAtalho(models.Model):
    chave = models.CharField(primary_key=True, max_length=200)
    ordem = models.CharField(max_length=200)
    cd_avaliacao = models.ForeignKey(TbAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', blank=True, null=True)
    nome = models.CharField(max_length=300)
    nome_item = models.CharField(max_length=500)
    id_componente = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_avaliacao_atalho'
        unique_together = (('chave', 'ordem', 'nome'),)


class TbAvaliacaoCid10(models.Model):
    cd_avaliacao = models.IntegerField()
    cd_cid10 = models.CharField(max_length=4, blank=True, null=True)
    cd_formulario_protocolo = models.CharField(max_length=30, blank=True, null=True)
    cd_avaliacao_cid10 = models.FloatField(primary_key=True)
    cd_macrodiag_cid10 = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_avaliacao_cid10'


class TbAvaliacaoExcecaoItem(models.Model):
    cd_avaliacao = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_nivel_avaliacao = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_ordem')
    cd_avaliacao_ref_exceto = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_avaliacao_ref_exceto')
    cd_nivel_avaliacao_ref_exceto = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_nivel_avaliacao_ref_exceto')
    cd_ordem_ref_exceto = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_ordem_ref_exceto')

    class Meta:
        managed = False
        db_table = 'tb_avaliacao_excecao_item'
        unique_together = (('cd_avaliacao', 'cd_nivel_avaliacao', 'cd_ordem', 'cd_avaliacao_ref_exceto', 'cd_nivel_avaliacao_ref_exceto', 'cd_ordem_ref_exceto'),)


class TbAvaliacaoObjeto(models.Model):
    cd_avaliacao = models.ForeignKey(TbAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_ordem = models.IntegerField()
    nm_botao = models.CharField(max_length=30, blank=True, null=True)
    cd_tipo_objeto = models.NullBooleanField()
    nm_objeto = models.CharField(max_length=50, blank=True, null=True)
    cd_ordem_apresentacao = models.IntegerField(blank=True, null=True)
    fl_habilitado = models.CharField(max_length=1, blank=True, null=True)
    cd_operador_cadastrou = models.CharField(max_length=10, blank=True, null=True)
    dt_cadastro = models.DateField(blank=True, null=True)
    cd_tipo_documento_prontuario = models.ForeignKey('TbTipoDocumentoProntuario', models.DO_NOTHING, db_column='cd_tipo_documento_prontuario', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_avaliacao_objeto'
        unique_together = (('cd_avaliacao', 'cd_ordem'),)


class TbAvaliacaoRegra(models.Model):
    cd_avaliacao = models.ForeignKey(TbAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_regra = models.IntegerField()
    nm_regra = models.CharField(max_length=240, blank=True, null=True)
    vl_conclusao_regra = models.CharField(max_length=240, blank=True, null=True)
    cd_mnemonico_modelo = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_avaliacao_regra'
        unique_together = (('cd_avaliacao', 'cd_regra'),)


class TbAvaliacaoRegraCondicao(models.Model):
    cd_avaliacao = models.ForeignKey(TbAvaliacaoRegra, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_regra = models.ForeignKey(TbAvaliacaoRegra, models.DO_NOTHING, db_column='cd_regra')
    nu_ordem_regra = models.IntegerField()
    cd_nivel_avaliacao = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_ordem')
    cd_predicado = models.CharField(max_length=2)
    vl_valor_condicao = models.CharField(max_length=240)
    cd_operador_logico = models.CharField(max_length=3, blank=True, null=True)
    qt_peso_condicao = models.IntegerField(blank=True, null=True)
    identificador_item = models.CharField(max_length=2000, blank=True, null=True)
    campo_sam = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_avaliacao_regra_condicao'
        unique_together = (('cd_avaliacao', 'cd_regra', 'nu_ordem_regra'),)


class TbAvaliacaoSolicAtividade(models.Model):
    cd_avaliacao = models.ForeignKey(TbAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_tipo_solicitacao = models.ForeignKey('TbTipoSolicServicos', models.DO_NOTHING, db_column='cd_tipo_solicitacao')
    cd_componente_avaliacao = models.ForeignKey('TbComponenteAvaliacao', models.DO_NOTHING, db_column='cd_componente_avaliacao')
    fl_obrigatorio = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_avaliacao_solic_atividade'
        unique_together = (('cd_avaliacao', 'cd_tipo_solicitacao', 'cd_componente_avaliacao'),)


class TbAvaliacaoStatusTempo(models.Model):
    cd_avaliacao = models.ForeignKey(TbAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_tipo_solicitacao = models.ForeignKey('TbTipoSolicServicos', models.DO_NOTHING, db_column='cd_tipo_solicitacao')
    fl_status_solicitacao = models.IntegerField()
    qt_tempo_limite = models.IntegerField(blank=True, null=True)
    cd_unidade_tempo_limite = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_tempo_limite', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_avaliacao_status_tempo'
        unique_together = (('cd_avaliacao', 'cd_tipo_solicitacao', 'fl_status_solicitacao'),)


class TbAvaliacaoTipoModelo(models.Model):
    cd_avaliacao = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_nivel_avaliacao = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_ordem')
    cd_tipo = models.IntegerField()
    cd_seq = models.IntegerField()
    ds_texto = models.CharField(max_length=4000, blank=True, null=True)
    ds_texto_livre = models.TextField(blank=True, null=True)
    ds_data = models.DateField(blank=True, null=True)
    ds_numero = models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)
    ds_imagem = models.BinaryField(blank=True, null=True)
    ds_som = models.TextField(blank=True, null=True)  # This field type is a guess.
    ds_video = models.BinaryField(blank=True, null=True)
    cd_profissional = models.IntegerField(blank=True, null=True)
    cid10 = models.CharField(max_length=4, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_avaliacao_tipo_modelo'
        unique_together = (('cd_avaliacao', 'cd_nivel_avaliacao', 'cd_ordem', 'cd_tipo', 'cd_seq'),)


class TbAvaliacaoTipoModeloItem(models.Model):
    cd_tipo = models.FloatField(primary_key=True)
    nm_tipo = models.CharField(max_length=200, blank=True, null=True)
    cd_profissional = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_avaliacao_tipo_modelo_item'


class TbAvisoAlta(models.Model):
    cd_recepcao = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_recepcao', blank=True, null=True)
    nm_usuar_emi = models.CharField(max_length=8)
    cd_posto = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_posto')
    cd_acomodacao = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_acomodacao')
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento')
    dt_emissao = models.DateField(primary_key=True)
    hr_emissao = models.IntegerField()
    nm_usuar_rec = models.CharField(max_length=8, blank=True, null=True)
    dt_recebeu = models.DateField(blank=True, null=True)
    hr_recebeu = models.IntegerField(blank=True, null=True)
    nm_mensagem = models.CharField(max_length=60, blank=True, null=True)
    nm_usuar_central = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_usuar_central', blank=True, null=True)
    dt_recebeu_central = models.DateField(blank=True, null=True)
    hr_recebeu_central = models.IntegerField(blank=True, null=True)
    nm_usuar_far = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_usuar_far', blank=True, null=True)
    dt_recebeu_far = models.DateField(blank=True, null=True)
    hr_recebeu_far = models.IntegerField(blank=True, null=True)
    tp_aviso = models.IntegerField(blank=True, null=True)
    nm_usuar_day = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_usuar_day', blank=True, null=True)
    dt_recebeu_day = models.DateField(blank=True, null=True)
    hr_recebeu_day = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_aviso_alta'
        unique_together = (('dt_emissao', 'hr_emissao', 'cd_atendimento'),)


class TbAvisoAux(models.Model):
    cd_recepcao = models.CharField(max_length=6, blank=True, null=True)
    nm_usuar_emi = models.CharField(max_length=8)
    cd_posto = models.CharField(max_length=6)
    cd_acomodacao = models.CharField(max_length=6)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    dt_emissao = models.DateField(blank=True, null=True)
    hr_emissao = models.IntegerField(blank=True, null=True)
    nm_usuar_rec = models.CharField(max_length=8, blank=True, null=True)
    dt_recebeu = models.DateField(blank=True, null=True)
    hr_recebeu = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_aviso_aux'


class TbB2BErro(models.Model):
    cd_laboratorio_apoio = models.IntegerField(primary_key=True)
    cd_lote = models.FloatField()
    dt_importacao = models.DateField()
    sq_erro = models.FloatField()
    fl_tipo = models.FloatField(blank=True, null=True)
    ds_erro = models.CharField(max_length=1000, blank=True, null=True)
    nm_arquivo = models.CharField(max_length=100, blank=True, null=True)
    nm_paciente = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_b2b_erro'
        unique_together = (('cd_laboratorio_apoio', 'cd_lote', 'dt_importacao', 'sq_erro'),)


class TbB2BXml(models.Model):
    cd_laboratorio_apoio = models.FloatField(primary_key=True)
    dt_registro = models.DateField()
    fl_tipo = models.FloatField(blank=True, null=True)
    ds_conteudo = models.TextField(blank=True, null=True)
    nm_arquivo = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_b2b_xml'
        unique_together = (('cd_laboratorio_apoio', 'dt_registro'),)


class TbBaixaMatHemo(models.Model):
    cd_baixa = models.CharField(primary_key=True, max_length=10)
    cd_material = models.FloatField()
    qtd_baixa = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_baixa_mat_hemo'
        unique_together = (('cd_baixa', 'cd_material'),)


class TbBandeiraCartao(models.Model):
    cd_bandeira_cartao = models.IntegerField(primary_key=True)
    ds_bandeira_cartao = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_bandeira_cartao'


class TbBemPessoa(models.Model):
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa', primary_key=True)
    nu_ordem_bem = models.CharField(max_length=1)
    ds_bem = models.CharField(max_length=60)
    vl_mercado_bem = models.DecimalField(max_digits=30, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_bem_pessoa'
        unique_together = (('cd_pessoa', 'nu_ordem_bem'),)


class TbBioquimicoSenha(models.Model):
    nm_operador = models.CharField(max_length=10)
    ds_senha = models.CharField(max_length=6)
    fl_ativo = models.CharField(max_length=1)
    dt_senha = models.DateField()
    cd_operador_audit = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_bioquimico_senha'


class TbBlobTemp(models.Model):
    cd_blob = models.IntegerField(primary_key=True)
    im_blob = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_blob_temp'


class TbCabBaixaMatHemo(models.Model):
    cd_baixa = models.CharField(primary_key=True, max_length=10)
    dt_baixa = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_cab_baixa_mat_hemo'


class TbCalendarioEscalaHotelaria(models.Model):
    cd_escala_hotelaria = models.FloatField(primary_key=True)
    nm_operador = models.CharField(max_length=30)
    cd_ordem = models.FloatField()
    cd_ordem_calendario = models.FloatField()
    nr_dia = models.FloatField()
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_inclusao = models.DateField(blank=True, null=True)
    dt_ult_alteracao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_calendario_escala_hotelaria'
        unique_together = (('cd_escala_hotelaria', 'nm_operador', 'cd_ordem', 'cd_ordem_calendario'),)


class TbCallCenterProd(models.Model):
    id = models.FloatField(primary_key=True)
    data = models.DateField()
    dia_semana = models.FloatField()
    qt_chamadas_recebidas = models.FloatField()
    perc_perda = models.FloatField()
    tme = models.FloatField()
    nivel_servico = models.FloatField()
    tma = models.FloatField()
    dt_ini_vigencia = models.DateField()
    dt_fin_vigencia = models.DateField(blank=True, null=True)
    user_ini = models.CharField(max_length=10)
    user_fin = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_call_center_prod'


class TbCaracteristicaFisica(models.Model):
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa', primary_key=True)
    nm_conjuge = models.CharField(max_length=45, blank=True, null=True)
    nm_naturalidade = models.CharField(max_length=45, blank=True, null=True)
    nr_nacionalidade = models.CharField(max_length=20, blank=True, null=True)
    cd_cbo = models.ForeignKey('TbCbo', models.DO_NOTHING, db_column='cd_cbo', blank=True, null=True)
    cd_religiao = models.ForeignKey('TbReligiao', models.DO_NOTHING, db_column='cd_religiao', blank=True, null=True)
    cd_estado_civil = models.ForeignKey('TbEstadoCivil', models.DO_NOTHING, db_column='cd_estado_civil', blank=True, null=True)
    cd_vinculo_empregaticio = models.ForeignKey('TbVinculoEmpregaticio', models.DO_NOTHING, db_column='cd_vinculo_empregaticio', blank=True, null=True)
    cd_escolaridade = models.ForeignKey('TbEscolaridade', models.DO_NOTHING, db_column='cd_escolaridade', blank=True, null=True)
    cd_cor = models.ForeignKey('TbCor', models.DO_NOTHING, db_column='cd_cor', blank=True, null=True)
    cd_grupo_sanguineo = models.CharField(max_length=2, blank=True, null=True)
    cd_fator_rh = models.CharField(max_length=1, blank=True, null=True)
    nu_cart_trab = models.FloatField(blank=True, null=True)
    nu_serie_cart_trab = models.FloatField(blank=True, null=True)
    nu_tit_eleit = models.FloatField(blank=True, null=True)
    cd_uf_tit_eleit = models.ForeignKey('TbUf', models.DO_NOTHING, db_column='cd_uf_tit_eleit', blank=True, null=True)
    nu_zona_tit_eleit = models.FloatField(blank=True, null=True)
    nu_secao_tit_eleit = models.FloatField(blank=True, null=True)
    nu_certidao_reservista = models.FloatField(blank=True, null=True)
    nu_cart_nac_habilit = models.FloatField(blank=True, null=True)
    fl_tipo_cart_nac_habilit = models.CharField(max_length=1, blank=True, null=True)
    vl_salario_mensal = models.DecimalField(max_digits=30, decimal_places=2, blank=True, null=True)
    vl_renda_familiar = models.DecimalField(max_digits=30, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_caracteristica_fisica'


class TbCaracteristicaJuridica(models.Model):
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa', primary_key=True)
    nu_insc_inss = models.CharField(max_length=15, blank=True, null=True)
    nu_alvara = models.CharField(max_length=15, blank=True, null=True)
    nu_contrato_social = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_caracteristica_juridica'


class TbCardapio(models.Model):
    cd_cardapio = models.IntegerField(primary_key=True)
    nm_cardapio = models.CharField(max_length=60)
    cd_um = models.FloatField(blank=True, null=True)
    vl_cardapio = models.FloatField(blank=True, null=True)
    dt_vigencia = models.DateField(blank=True, null=True)
    cd_tipo_cardapio = models.ForeignKey('TbTipoCardapio', models.DO_NOTHING, db_column='cd_tipo_cardapio')
    cd_filial = models.ForeignKey('TbFilial', models.DO_NOTHING, db_column='cd_filial')

    class Meta:
        managed = False
        db_table = 'tb_cardapio'


class TbCardapioDietaData(models.Model):
    dt_cardapio = models.DateField()
    cd_dieta = models.IntegerField(primary_key=True)
    dt_elaboracao = models.DateField(blank=True, null=True)
    dt_revisao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cardapio_dieta_data'
        unique_together = (('cd_dieta', 'dt_cardapio'),)


class TbCardapioDietaDia(models.Model):
    cd_dieta = models.IntegerField(primary_key=True)
    cd_cardapio = models.IntegerField()
    qt_diaria = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_cardapio_dieta_dia'
        unique_together = (('cd_dieta', 'cd_cardapio'),)


class TbCardapioSemanal(models.Model):
    dt_cardapio = models.DateField(primary_key=True)
    cd_cardapio = models.ForeignKey(TbCardapio, models.DO_NOTHING, db_column='cd_cardapio')
    cd_ordem = models.IntegerField()
    dt_elaboracao_cardapio = models.DateField()
    dt_revisao_cardapio = models.DateField(blank=True, null=True)
    cd_dieta = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cardapio_semanal'
        unique_together = (('dt_cardapio', 'cd_cardapio', 'cd_ordem'),)


class TbCarroParadaAud(models.Model):
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', primary_key=True)
    dt_aud = models.DateField()
    cd_usuario_farm = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cd_usuario_farm')
    cd_usuario_enfe = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cd_usuario_enfe')
    ds_obs = models.CharField(max_length=2000, blank=True, null=True)
    cd_lacre_rompido = models.FloatField(blank=True, null=True)
    cd_lacre_novo = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_carro_parada_aud'
        unique_together = (('cd_setor', 'dt_aud'),)


class TbCarteiraBanco(models.Model):
    cd_carteira = models.IntegerField(primary_key=True)
    cd_banco = models.ForeignKey(TbAgenciaBancaria, models.DO_NOTHING, db_column='cd_banco')
    cd_agencia = models.ForeignKey(TbAgenciaBancaria, models.DO_NOTHING, db_column='cd_agencia')
    cd_carteira_cobranca = models.ForeignKey('TbCarteiraCobranca', models.DO_NOTHING, db_column='cd_carteira_cobranca')
    cd_carteira_banco = models.CharField(max_length=10)
    cd_variacao_banco = models.CharField(max_length=10)
    fl_numeracao = models.CharField(max_length=1)
    fl_emissao = models.CharField(max_length=1)
    fl_expedicao = models.CharField(max_length=1)
    ds_carteira = models.CharField(max_length=45)
    cd_cedente = models.CharField(max_length=9)
    nu_convenio = models.CharField(max_length=10)
    qt_prazo_maximo = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_carteira_banco'


class TbCarteiraCobranca(models.Model):
    cd_carteira_cobranca = models.IntegerField(primary_key=True)
    ds_carteira_cobranca = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'tb_carteira_cobranca'


class TbCategoriaCid10(models.Model):
    cd_grupo_cid10 = models.ForeignKey('TbSubgrupoCid10', models.DO_NOTHING, db_column='cd_grupo_cid10', primary_key=True)
    cd_subgrupo_cid10 = models.ForeignKey('TbSubgrupoCid10', models.DO_NOTHING, db_column='cd_subgrupo_cid10')
    cd_categoria_cid10 = models.CharField(max_length=4)
    nm_categoria_cid10 = models.CharField(max_length=125)

    class Meta:
        managed = False
        db_table = 'tb_categoria_cid10'
        unique_together = (('cd_grupo_cid10', 'cd_subgrupo_cid10', 'cd_categoria_cid10'),)


class TbCaucaoValor(models.Model):
    id = models.FloatField(primary_key=True)
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio')
    descricao = models.CharField(max_length=45)
    vlr_caucao = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    observacao = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_caucao_valor'
        unique_together = (('cd_convenio', 'descricao'),)


class TbCausaObito(models.Model):
    cd_causa_obito = models.IntegerField(primary_key=True)
    ds_causa_obito = models.CharField(max_length=200)

    class Meta:
        managed = False
        db_table = 'tb_causa_obito'


class TbCbo(models.Model):
    cd_subgrupo = models.ForeignKey('TbSubgrupoCbo', models.DO_NOTHING, db_column='cd_subgrupo')
    cd_cbo = models.CharField(primary_key=True, max_length=8)
    nm_cbo = models.CharField(max_length=240, blank=True, null=True)
    nr_cbo = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cbo'


class TbCboS(models.Model):
    cd_cbo_s = models.CharField(max_length=7)
    ds_cbo_s = models.CharField(max_length=80)

    class Meta:
        managed = False
        db_table = 'tb_cbo_s'


class TbCcUnidadePde(models.Model):
    cd_centro = models.FloatField(primary_key=True)
    ds_centro = models.CharField(max_length=256)

    class Meta:
        managed = False
        db_table = 'tb_cc_unidade_pde'


class TbCedenteSacado(models.Model):
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa', primary_key=True)
    cd_tipo_cedente_sacado = models.ForeignKey('TbTipoCedente', models.DO_NOTHING, db_column='cd_tipo_cedente_sacado')
    dt_ultima_transacao = models.DateField()
    fl_status = models.NullBooleanField()
    dt_validade = models.DateField(blank=True, null=True)
    fl_exclusivo = models.CharField(max_length=1, blank=True, null=True)
    nu_ident_insc_munic = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cedente_sacado'


class TbCentroCustoCarnet(models.Model):
    cd_carnet = models.ForeignKey('TmCarnet', models.DO_NOTHING, db_column='cd_carnet', primary_key=True)
    cd_centro_custo = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_centro_custo')
    vl_rateio = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_centro_custo_carnet'
        unique_together = (('cd_carnet', 'cd_centro_custo'),)


class TbCentroCustoNota(models.Model):
    cd_nota = models.ForeignKey('TmNota', models.DO_NOTHING, db_column='cd_nota', primary_key=True)
    cd_centro_custo = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_centro_custo')
    vl_rateio = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_centro_custo_nota'
        unique_together = (('cd_nota', 'cd_centro_custo'),)


class TbCentroCustoObrigacao(models.Model):
    cd_obrigacao = models.ForeignKey('TmObrigacao', models.DO_NOTHING, db_column='cd_obrigacao', primary_key=True)
    cd_centro_custo = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_centro_custo')
    vl_rateio = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_centro_custo_obrigacao'
        unique_together = (('cd_obrigacao', 'cd_centro_custo'),)


class TbCentroCustoPedido(models.Model):
    cd_pedido = models.ForeignKey('TmPedidoFornecedor', models.DO_NOTHING, db_column='cd_pedido', primary_key=True)
    cd_centro_custo = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_centro_custo')
    vl_rateio = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_centro_custo_pedido'
        unique_together = (('cd_pedido', 'cd_centro_custo'),)


class TbCentroCustoTransacao(models.Model):
    cd_movimento_conta = models.ForeignKey('TmMovimentoTransacao', models.DO_NOTHING, db_column='cd_movimento_conta', primary_key=True)
    cd_ordem_transacao = models.ForeignKey('TmMovimentoTransacao', models.DO_NOTHING, db_column='cd_ordem_transacao')
    cd_centro_custo = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_centro_custo')
    vl_rateio = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_centro_custo_transacao'
        unique_together = (('cd_movimento_conta', 'cd_ordem_transacao', 'cd_centro_custo'),)


class TbCentroCustoTransferencia(models.Model):
    cd_transferencia = models.ForeignKey('TmTransferenciaFilial', models.DO_NOTHING, db_column='cd_transferencia', primary_key=True)
    cd_centro_custo = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_centro_custo')
    qt_transferencia = models.FloatField(blank=True, null=True)
    vl_transferencia = models.FloatField()
    cd_operacao = models.ForeignKey('TbOperacao', models.DO_NOTHING, db_column='cd_operacao', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_centro_custo_transferencia'
        unique_together = (('cd_transferencia', 'cd_centro_custo'),)


class TbCepBairro(models.Model):
    nm_bairro = models.CharField(max_length=60)
    nr_bairro = models.CharField(max_length=30, blank=True, null=True)
    nm_localidade_bairro = models.CharField(max_length=60)
    cd_tipo_localidade = models.CharField(max_length=1)
    cd_uf_bairro = models.CharField(primary_key=True, max_length=2)
    cd_cep_bairro = models.CharField(max_length=8)

    class Meta:
        managed = False
        db_table = 'tb_cep_bairro'
        unique_together = (('cd_uf_bairro', 'nm_localidade_bairro', 'cd_tipo_localidade', 'nm_bairro'),)


class TbCepLocalidade(models.Model):
    nm_localidade = models.CharField(max_length=60)
    cd_cep_localidade = models.CharField(max_length=8)
    cd_uf_localidade = models.ForeignKey('TbUf', models.DO_NOTHING, db_column='cd_uf_localidade', primary_key=True)
    cd_tipo_localidade = models.CharField(max_length=1, blank=True, null=True)
    nr_localidade = models.CharField(max_length=15)
    nm_municipio = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cep_localidade'
        unique_together = (('cd_uf_localidade', 'nm_localidade'),)


class TbCepLogradouro(models.Model):
    nm_logradouro = models.CharField(max_length=60)
    nr_logradouro = models.CharField(max_length=25)
    nm_localidade_logradouro = models.ForeignKey(TbCepLocalidade, models.DO_NOTHING, db_column='nm_localidade_logradouro')
    nm_bairro_logradouro_1 = models.CharField(max_length=30, blank=True, null=True)
    nm_bairro_logradouro_2 = models.CharField(max_length=30, blank=True, null=True)
    cd_cep_logradouro = models.CharField(max_length=8)
    cd_uf_logradouro = models.ForeignKey('TbUf', models.DO_NOTHING, db_column='cd_uf_logradouro')
    cd_tipo_logradouro = models.ForeignKey('TbTipoLogradouro', models.DO_NOTHING, db_column='cd_tipo_logradouro')

    class Meta:
        managed = False
        db_table = 'tb_cep_logradouro'


class TbCertificacaoUnidade(models.Model):
    cd_unidade_atendimento = models.CharField(max_length=3)
    dt_operacao = models.DateField()
    nm_operador = models.CharField(max_length=10)
    dt_inicio_certifica = models.DateField(blank=True, null=True)
    dt_ultimo_processamento = models.DateField(blank=True, null=True)
    nu_dias = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_certificacao_unidade'


class TbCheckCidInternacao(models.Model):
    nome = models.CharField(max_length=256, blank=True, null=True)
    idade = models.FloatField(blank=True, null=True)
    dt_entrada = models.DateField(blank=True, null=True)
    hr_entrada = models.IntegerField(blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)
    hr_solicitacao = models.IntegerField(blank=True, null=True)
    diagnostico = models.CharField(max_length=256, blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_check_cid_internacao'


class TbChefiaComite(models.Model):
    cd_comite = models.ForeignKey('TbProfissionalComite', models.DO_NOTHING, db_column='cd_comite', primary_key=True)
    cd_profissional = models.ForeignKey('TbProfissionalComite', models.DO_NOTHING, db_column='cd_profissional')
    dt_assume_chefia = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_chefia_comite'
        unique_together = (('cd_comite', 'cd_profissional'),)


class TbChefiaPlantaoMedico(models.Model):
    cd_operador_medico = models.CharField(primary_key=True, max_length=10)
    cd_filial = models.ForeignKey('TbFilial', models.DO_NOTHING, db_column='cd_filial')
    cd_operador_cadastrou = models.CharField(max_length=10, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_chefia_plantao_medico'
        unique_together = (('cd_operador_medico', 'cd_filial'),)


class TbChefiaPlantaoMedicoEspec(models.Model):
    cd_operador_medico = models.ForeignKey(TbChefiaPlantaoMedico, models.DO_NOTHING, db_column='cd_operador_medico', primary_key=True)
    cd_filial = models.ForeignKey(TbChefiaPlantaoMedico, models.DO_NOTHING, db_column='cd_filial')
    cd_local_atendimento = models.ForeignKey('TbGrupoAtendimentoSa', models.DO_NOTHING, db_column='cd_local_atendimento')
    cd_grupo_atendimento = models.ForeignKey('TbGrupoAtendimentoSa', models.DO_NOTHING, db_column='cd_grupo_atendimento')
    cd_operador_cadastrou = models.CharField(max_length=10, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_chefia_plantao_medico_espec'
        unique_together = (('cd_operador_medico', 'cd_filial', 'cd_local_atendimento', 'cd_grupo_atendimento'),)


class TbChequeCaucao(models.Model):
    cd_atendimento = models.ForeignKey('TbConvenioPagador', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ordem')
    cd_ordem_caucao = models.IntegerField()
    cd_convenio_pagador = models.ForeignKey('TbConvenioPagador', models.DO_NOTHING, db_column='cd_convenio_pagador', blank=True, null=True)
    dt_paga_caucao = models.DateField(blank=True, null=True)
    cd_caucao = models.IntegerField(blank=True, null=True)
    cd_cobranca = models.ForeignKey('TbCobrancaPaciente', models.DO_NOTHING, db_column='cd_cobranca', blank=True, null=True)
    fl_cheque = models.CharField(max_length=1, blank=True, null=True)
    cd_banco = models.ForeignKey(TbAgenciaBancaria, models.DO_NOTHING, db_column='cd_banco', blank=True, null=True)
    cd_agencia = models.ForeignKey(TbAgenciaBancaria, models.DO_NOTHING, db_column='cd_agencia', blank=True, null=True)
    nu_cheque = models.CharField(max_length=10, blank=True, null=True)
    vl_caucao = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    ds_observacao = models.CharField(max_length=200, blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    dt_recibo = models.DateField(blank=True, null=True)
    nu_parcelas = models.FloatField(blank=True, null=True)
    cd_bandeira_cartao = models.FloatField(blank=True, null=True)
    cd_forma_pagamento = models.ForeignKey('TbFormaPagamento', models.DO_NOTHING, db_column='cd_forma_pagamento', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cheque_caucao'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem', 'cd_ordem_caucao'),)


class TbChequeRecebido(models.Model):
    cd_cheque_recebido = models.FloatField(primary_key=True)
    cd_banco = models.ForeignKey(TbAgenciaBancaria, models.DO_NOTHING, db_column='cd_banco')
    cd_agencia = models.ForeignKey(TbAgenciaBancaria, models.DO_NOTHING, db_column='cd_agencia')
    nu_cheque = models.CharField(max_length=10)
    cd_cedente_sacado = models.ForeignKey(TbCedenteSacado, models.DO_NOTHING, db_column='cd_cedente_sacado', blank=True, null=True)
    dt_cheque = models.DateField()
    dt_liberacao_deposito = models.DateField(blank=True, null=True)
    cd_obrigacao = models.ForeignKey('TmObrigacao', models.DO_NOTHING, db_column='cd_obrigacao', blank=True, null=True)
    fl_status = models.CharField(max_length=1)
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cheque_recebido'


class TbCid(models.Model):
    cd_grupo_cid = models.ForeignKey('TbGrupoCid', models.DO_NOTHING, db_column='cd_grupo_cid', primary_key=True)
    cd_cid = models.FloatField(unique=True)
    nm_cid = models.CharField(max_length=240)
    nr_cid = models.CharField(max_length=50, blank=True, null=True)
    qt_dias = models.IntegerField(blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fin_vigencia = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cid'
        unique_together = (('cd_grupo_cid', 'cd_cid'),)


class TbCid10(models.Model):
    cid10 = models.CharField(primary_key=True, max_length=4)
    opc = models.CharField(max_length=1, blank=True, null=True)
    cat = models.CharField(max_length=1, blank=True, null=True)
    subcat = models.CharField(max_length=1, blank=True, null=True)
    descr = models.CharField(max_length=50, blank=True, null=True)
    restrsexo = models.CharField(max_length=1, blank=True, null=True)
    cd_grupo_cid10 = models.ForeignKey(TbCategoriaCid10, models.DO_NOTHING, db_column='cd_grupo_cid10', blank=True, null=True)
    cd_subgrupo_cid10 = models.ForeignKey(TbCategoriaCid10, models.DO_NOTHING, db_column='cd_subgrupo_cid10', blank=True, null=True)
    cd_categoria_cid10 = models.ForeignKey(TbCategoriaCid10, models.DO_NOTHING, db_column='cd_categoria_cid10', blank=True, null=True)
    nm_cid10 = models.CharField(max_length=400, blank=True, null=True)
    fl_uso = models.CharField(max_length=1, blank=True, null=True)
    obs = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cid10'


class TbCid10Aux(models.Model):
    id_cid = models.CharField(primary_key=True, max_length=100)
    descricao = models.CharField(max_length=1000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cid10_aux'


class TbCid10Axu(models.Model):
    id_cid_10 = models.CharField(primary_key=True, max_length=10)
    descricao = models.CharField(max_length=400, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cid10_axu'


class TbCidProcedimento(models.Model):
    cid10 = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cid10', primary_key=True)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')

    class Meta:
        managed = False
        db_table = 'tb_cid_procedimento'
        unique_together = (('cid10', 'cd_procedimento'),)


class TbCirurgiaMaterial(models.Model):
    cd_ato_cirurgico = models.FloatField(primary_key=True)
    nm_ato_cirurgico = models.CharField(max_length=128, blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fin_vigencia = models.DateField(blank=True, null=True)
    user_ini = models.CharField(max_length=10, blank=True, null=True)
    user_fin = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cirurgia_material'


class TbClasseAcomodacao(models.Model):
    cd_classe_acomodacao = models.IntegerField(primary_key=True)
    nm_classe_acomodacao = models.CharField(max_length=20)
    cd_tipo_classe_acomodacao = models.ForeignKey('TbTipoClasseAcomodacao', models.DO_NOTHING, db_column='cd_tipo_classe_acomodacao', blank=True, null=True)
    cd_tipo_acomodacao = models.ForeignKey('TbTipoAcomodacaoAns', models.DO_NOTHING, db_column='cd_tipo_acomodacao', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_classe_acomodacao'


class TbClasseAcomodacaoConvenio(models.Model):
    cd_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_convenio', primary_key=True)
    cd_plano_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano_convenio')
    cd_classe_acomodacao = models.ForeignKey(TbClasseAcomodacao, models.DO_NOTHING, db_column='cd_classe_acomodacao')
    fl_pagamento = models.CharField(max_length=1)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fin_vigencia = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_classe_acomodacao_convenio'
        unique_together = (('cd_convenio', 'cd_plano_convenio', 'cd_classe_acomodacao'),)


class TbClasseMedico(models.Model):
    cd_classe_medico = models.IntegerField(primary_key=True)
    nm_classe_medico = models.CharField(max_length=45, blank=True, null=True)
    nu_tempo_correcao = models.FloatField(blank=True, null=True)
    fl_pre_laudo = models.CharField(max_length=1, blank=True, null=True)
    fl_laudo_pendente = models.CharField(max_length=1, blank=True, null=True)
    fl_laudo_definitivo = models.CharField(max_length=1, blank=True, null=True)
    nu_qtde_crct_laudo = models.FloatField(blank=True, null=True)
    fl_fura_fila = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_classe_medico'


class TbClasseRemessaAtendimento(models.Model):
    cd_classe_atendimento = models.FloatField(primary_key=True)
    ds_classe_atendimento = models.CharField(max_length=64)

    class Meta:
        managed = False
        db_table = 'tb_classe_remessa_atendimento'


class TbClasseReposicao(models.Model):
    cd_classe_reposicao = models.IntegerField(primary_key=True)
    dsc_classe_reposicao = models.CharField(max_length=45)
    rep_automatica = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_classe_reposicao'


class TbClasseTipoClassificacao(models.Model):
    fl_tipo_classificacao = models.BooleanField(primary_key=True)
    ds_fl_tipo_classificacao = models.CharField(max_length=45, blank=True, null=True)
    cd_tipo_produto_servico = models.CharField(max_length=5)

    class Meta:
        managed = False
        db_table = 'tb_classe_tipo_classificacao'


class TbClasseTipoOperacao(models.Model):
    cd_classe_tipo_operacao = models.IntegerField(primary_key=True)
    nm_classe_tipo_operacao = models.CharField(max_length=45)
    fl_natureza = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_classe_tipo_operacao'


class TbClasseTipoOperacao(models.Model):
    cd_classe_tipo_operacao = models.IntegerField(primary_key=True)
    nm_classe_tipo_operacao = models.CharField(max_length=45)
    fl_natureza = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_classe_tipo_operacao_'


class TbClassiPrioridadeExame(models.Model):
    cd_prioridade = models.FloatField(primary_key=True)
    ds_prioridade = models.CharField(max_length=300)
    tempo_processo = models.FloatField(blank=True, null=True)
    cd_color = models.CharField(max_length=50, blank=True, null=True)
    cd_risco_associado_emg = models.CharField(unique=True, max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_classi_prioridade_exame'


class TbClassificacao(models.Model):
    cd_classificacao = models.IntegerField(primary_key=True)
    nm_classificacao = models.CharField(unique=True, max_length=45)
    cd_tipo_classificacao = models.ForeignKey('TbTipoClassificacao', models.DO_NOTHING, db_column='cd_tipo_classificacao')
    fl_3_comanda = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_classificacao'


class TbClassificacaoOncologia(models.Model):
    cd_classificacao_oncologia = models.IntegerField(primary_key=True)
    nm_classificacao = models.CharField(max_length=45, blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_classificacao_oncologia'


class TbClinica(models.Model):
    cd_clinica = models.IntegerField(primary_key=True)
    nm_clinica = models.CharField(max_length=20)
    cd_especial = models.ForeignKey('TbEspecialSus', models.DO_NOTHING, db_column='cd_especial', blank=True, null=True)
    qt_leitos = models.IntegerField(blank=True, null=True)
    fl_espec_emergencia = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_clinica'


class TbClinicaMovimento(models.Model):
    cd_convenio = models.ForeignKey('TbConvenioClinica', models.DO_NOTHING, db_column='cd_convenio', primary_key=True)
    cd_clinica = models.ForeignKey('TbConvenioClinica', models.DO_NOTHING, db_column='cd_clinica')
    dt_movimento = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_clinica_movimento'
        unique_together = (('cd_convenio', 'cd_clinica', 'dt_movimento'),)


class TbCns(models.Model):
    seq_unico = models.FloatField(primary_key=True)
    nu_cns = models.CharField(max_length=15, blank=True, null=True)
    nu_cpf = models.CharField(max_length=11, blank=True, null=True)
    nm_nome = models.CharField(max_length=100, blank=True, null=True)
    nm_nome_social = models.CharField(max_length=100, blank=True, null=True)
    nm_nome_mae = models.CharField(max_length=100, blank=True, null=True)
    nm_nome_pai = models.CharField(max_length=100, blank=True, null=True)
    fl_sexo = models.CharField(max_length=1, blank=True, null=True)
    cd_cor = models.ForeignKey('TbCor', models.DO_NOTHING, db_column='cd_cor', blank=True, null=True)
    cd_etnia = models.ForeignKey('TbEtniaIndigena', models.DO_NOTHING, db_column='cd_etnia', blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    fl_tipo_sanguineo = models.CharField(max_length=3, blank=True, null=True)
    dt_obito = models.DateField(blank=True, null=True)
    nr_nacionalidade = models.CharField(max_length=20, blank=True, null=True)
    nm_naturalidade = models.CharField(max_length=45, blank=True, null=True)
    nm_naturalidade_uf = models.ForeignKey('TbUf', models.DO_NOTHING, db_column='nm_naturalidade_uf', blank=True, null=True)
    nm_pais_nascimento = models.CharField(max_length=45, blank=True, null=True)
    dt_naturalizacao = models.DateField(blank=True, null=True)
    nm_port_naturalizacao = models.CharField(max_length=45, blank=True, null=True)
    dt_entrada = models.DateField(blank=True, null=True)
    nm_email_principal = models.CharField(max_length=100, blank=True, null=True)
    nm_email_principal_conf = models.CharField(max_length=100, blank=True, null=True)
    nm_email_alternativo = models.CharField(max_length=100, blank=True, null=True)
    nm_email_alternativo_conf = models.CharField(max_length=100, blank=True, null=True)
    fl_tipo_fone = models.CharField(max_length=45, blank=True, null=True)
    nu_ddd_fone = models.CharField(max_length=2, blank=True, null=True)
    nu_fone = models.CharField(max_length=10, blank=True, null=True)
    fl_nomade = models.CharField(max_length=1, blank=True, null=True)
    nm_residencia_pais = models.CharField(max_length=45, blank=True, null=True)
    nu_residencia_cep = models.CharField(max_length=10, blank=True, null=True)
    nm_residencia_munic = models.CharField(max_length=45, blank=True, null=True)
    nm_residencia_uf = models.ForeignKey('TbUf', models.DO_NOTHING, db_column='nm_residencia_uf', blank=True, null=True)
    nm_residencia_logradouro = models.CharField(max_length=45, blank=True, null=True)
    nm_residencia_bairro = models.CharField(max_length=45, blank=True, null=True)
    nu_residencia_numero = models.CharField(max_length=45, blank=True, null=True)
    nm_residencia_complemento = models.CharField(max_length=45, blank=True, null=True)
    nu_dnv = models.IntegerField(blank=True, null=True)
    nu_pis = models.CharField(max_length=45, blank=True, null=True)
    nu_rg = models.BigIntegerField(blank=True, null=True)
    nm_orgao_rg = models.CharField(max_length=45, blank=True, null=True)
    nm_uf_orgao_rg = models.CharField(max_length=2, blank=True, null=True)
    dt_emissao_rg = models.DateField(blank=True, null=True)
    nu_titulo = models.BigIntegerField(blank=True, null=True)
    nu_titulo_zona = models.IntegerField(blank=True, null=True)
    nu_titulo_secao = models.IntegerField(blank=True, null=True)
    nu_ctps = models.BigIntegerField(blank=True, null=True)
    nu_ctps_serie = models.IntegerField(blank=True, null=True)
    dt_ctps_emissao = models.DateField(blank=True, null=True)
    nu_cnh = models.BigIntegerField(blank=True, null=True)
    nm_cnh_uf = models.ForeignKey('TbUf', models.DO_NOTHING, db_column='nm_cnh_uf', blank=True, null=True)
    dt_cnh_emissao = models.DateField(blank=True, null=True)
    nu_passaporte = models.CharField(max_length=15, blank=True, null=True)
    nu_passaporte_pais = models.CharField(max_length=15, blank=True, null=True)
    dt_passaporte_validade = models.DateField(blank=True, null=True)
    dt_passaporte_emissao = models.DateField(blank=True, null=True)
    fl_certidao_modelo = models.CharField(max_length=1, blank=True, null=True)
    nm_certidao_cartorio = models.CharField(max_length=15, blank=True, null=True)
    nm_certidao_livro = models.CharField(max_length=15, blank=True, null=True)
    nm_certidao_folha = models.CharField(max_length=15, blank=True, null=True)
    nm_certidao_termo = models.CharField(max_length=15, blank=True, null=True)
    dt_certidao_emissao = models.DateField(blank=True, null=True)
    nu_certidao_cod01 = models.FloatField(blank=True, null=True)
    nu_certidao_cod02 = models.FloatField(blank=True, null=True)
    nu_certidao_cod03 = models.FloatField(blank=True, null=True)
    nu_certidao_cod04 = models.FloatField(blank=True, null=True)
    nu_certidao_cod05 = models.FloatField(blank=True, null=True)
    nu_certidao_cod06 = models.FloatField(blank=True, null=True)
    nu_certidao_cod07 = models.FloatField(blank=True, null=True)
    nu_certidao_cod08 = models.FloatField(blank=True, null=True)
    nu_certidao_cod09 = models.FloatField(blank=True, null=True)
    cd_paciente = models.FloatField(blank=True, null=True)
    cd_pessoa = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cns'


class TbCobrancaPaciente(models.Model):
    cd_cobranca = models.CharField(primary_key=True, max_length=15)
    nu_guia = models.CharField(max_length=15, blank=True, null=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    cd_convenio = models.ForeignKey('TbConvenioPagador', models.DO_NOTHING, db_column='cd_convenio', blank=True, null=True)
    cd_plano_convenio = models.ForeignKey('TbConvenioPagador', models.DO_NOTHING, db_column='cd_plano_convenio', blank=True, null=True)
    dt_cobranca = models.DateField(blank=True, null=True)
    dt_competencia = models.DateField(blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    dt_final = models.DateField(blank=True, null=True)
    cd_um = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um', blank=True, null=True)
    vl_cobranca = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    pc_taxa_servico = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    vl_taxa_servico = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_saldo = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    ds_observacao = models.CharField(max_length=260, blank=True, null=True)
    vl_diaria = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    nu_capa_processo = models.FloatField(blank=True, null=True)
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa', blank=True, null=True)
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_sequencia = models.FloatField(blank=True, null=True)
    vl_pacote = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    cd_cobranca_ordem = models.FloatField(blank=True, null=True)
    cd_cobranca_pai = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_cobranca_pai', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cobranca_paciente'
        unique_together = (('cd_atendimento', 'cd_convenio', 'nu_guia', 'cd_pessoa', 'cd_cobranca_ordem'),)


class TbCobrancaPacienteAudit(models.Model):
    cd_cobranca = models.ForeignKey(TbCobrancaPaciente, models.DO_NOTHING, db_column='cd_cobranca', primary_key=True)
    dt_auditoria_fin = models.DateField(blank=True, null=True)
    cd_usuario_fin = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_usuario_fin', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cobranca_paciente_audit'


class TbCobrancaPacienteParcial(models.Model):
    cd_cobranca_paciente_parcial = models.FloatField(primary_key=True)
    cd_cobranca = models.ForeignKey(TbCobrancaPaciente, models.DO_NOTHING, db_column='cd_cobranca', unique=True)
    fl_status = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_cobranca_paciente_parcial'


class TbCodBarraDevolucao(models.Model):
    cd_devolucao = models.IntegerField(blank=True, null=True)
    cd_cod_barra = models.CharField(max_length=100, blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_requisicao = models.IntegerField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cod_barra_devolucao'
        unique_together = (('cd_devolucao', 'cd_cod_barra'),)


class TbCodbarraCxReservaPosto(models.Model):
    cd_codigo_barra = models.CharField(primary_key=True, max_length=100)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor')
    seq = models.FloatField()
    cd_material = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_codbarra_cx_reserva_posto'
        unique_together = (('cd_codigo_barra', 'seq'),)


class TbCodigoBarra(models.Model):
    cd_codigo_barra = models.CharField(primary_key=True, max_length=100)
    id_lote_validade = models.CharField(max_length=12, blank=True, null=True)
    fl_status = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_codigo_barra'


class TbCodigoBarraHist(models.Model):
    cd_codigo_barra = models.CharField(primary_key=True, max_length=100)
    id_lote_validade = models.CharField(max_length=12)
    dt_validade = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_codigo_barra_hist'
        unique_together = (('cd_codigo_barra', 'id_lote_validade'),)


class TbCodigoBarraImpresso(models.Model):
    cd_codigo_barra = models.CharField(max_length=100)
    cd_material = models.FloatField(blank=True, null=True)
    cd_lote = models.CharField(max_length=30, blank=True, null=True)
    id_lote_validade = models.CharField(max_length=12, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    cd_impresso = models.FloatField(primary_key=True)

    class Meta:
        managed = False
        db_table = 'tb_codigo_barra_impresso'
        unique_together = (('cd_impresso', 'cd_codigo_barra'),)


class TbCodigoRetornoBioface(models.Model):
    cd_retorno = models.FloatField(primary_key=True)
    tipo_retorno = models.CharField(max_length=1)
    ds_retorno = models.CharField(max_length=1000)
    ds_motivo = models.CharField(max_length=2000)

    class Meta:
        managed = False
        db_table = 'tb_codigo_retorno_bioface'


class TbComanda(models.Model):
    nu_comanda = models.CharField(unique=True, max_length=8)
    cd_ocorrencia = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ordem')
    cd_ordem_cmd = models.IntegerField()
    cd_atendimento = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    dt_comanda = models.DateField()
    cd_setor_origem = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_origem', blank=True, null=True)
    cd_setor_destino = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_destino', blank=True, null=True)
    fl_requisicao_devolucao = models.NullBooleanField()
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)
    cd_ocorrencia_pacote = models.IntegerField(blank=True, null=True)
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional', blank=True, null=True)
    fl_carro_parada = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_comanda'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem', 'cd_ordem_cmd'),)


class TbComandaMatMed(models.Model):
    cd_atendimento = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='cd_ordem')
    cd_ordem_cmd = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='cd_ordem_cmd')
    cd_ordem_m = models.IntegerField()
    cd_cobranca = models.ForeignKey(TbCobrancaPaciente, models.DO_NOTHING, db_column='cd_cobranca', blank=True, null=True)
    cd_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_mat_med')
    cd_convenio_pagador = models.ForeignKey('TbConvenioPagador', models.DO_NOTHING, db_column='cd_convenio_pagador')
    hr_comanda = models.IntegerField(blank=True, null=True)
    qt_material = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    vl_material = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    qt_entregue = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    vl_total = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    qt_devolvido = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    fl_sinal = models.CharField(max_length=1, blank=True, null=True)
    qt_material_paga = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    vl_total_pago = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    ds_observacao = models.CharField(max_length=120, blank=True, null=True)
    fl_status_pago = models.CharField(max_length=3, blank=True, null=True)
    qt_entregue_real = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_natureza_glosa = models.ForeignKey('TbNaturezaGlosa', models.DO_NOTHING, db_column='cd_natureza_glosa', blank=True, null=True)
    cd_fornecedor = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_fornecedor', blank=True, null=True)
    nu_nota_fornecedor = models.BigIntegerField(blank=True, null=True)
    qt_requisicao = models.FloatField(blank=True, null=True)
    cd_item_hapvida = models.CharField(max_length=12, blank=True, null=True)
    vl_item_hap = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    fl_tipo_classificacao = models.NullBooleanField()
    cd_ocorrencia_pacote = models.FloatField(blank=True, null=True)
    fl_faturamento_restrito = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_comanda_mat_med'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem', 'cd_ordem_cmd', 'cd_ordem_m'),)


class TbComandaPabx(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ordem')
    cd_ordem_pabx = models.IntegerField()
    cd_cobranca = models.ForeignKey(TbCobrancaPaciente, models.DO_NOTHING, db_column='cd_cobranca', blank=True, null=True)
    hr_ligacao = models.IntegerField(blank=True, null=True)
    nu_duracao = models.IntegerField(blank=True, null=True)
    vl_custo = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    cd_ramal = models.ForeignKey('TbRamal', models.DO_NOTHING, db_column='cd_ramal')
    nu_discado = models.CharField(max_length=20, blank=True, null=True)
    ds_observacao = models.CharField(max_length=30, blank=True, null=True)
    dt_ligacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_comanda_pabx'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem', 'cd_ordem_pabx'),)


class TbComandaParametros(models.Model):
    nu_comanda = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='nu_comanda')
    dt_comanda = models.DateField()
    cd_setor_origem = models.CharField(max_length=6, blank=True, null=True)
    dt_reposta = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_comanda_parametros'


class TbComandaTaxa(models.Model):
    cd_atendimento = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='cd_ordem')
    cd_ordem_cmd = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='cd_ordem_cmd')
    cd_ordem_tx = models.IntegerField()
    cd_taxas = models.ForeignKey('TbTaxas', models.DO_NOTHING, db_column='cd_taxas')
    cd_cobranca = models.ForeignKey(TbCobrancaPaciente, models.DO_NOTHING, db_column='cd_cobranca', blank=True, null=True)
    cd_convenio_pagador = models.ForeignKey('TbConvenioPagador', models.DO_NOTHING, db_column='cd_convenio_pagador')
    hr_comanda = models.IntegerField(blank=True, null=True)
    qt_taxa = models.IntegerField(blank=True, null=True)
    vl_taxa = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_total = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    fl_sinal = models.CharField(max_length=1, blank=True, null=True)
    qt_taxa_paga = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    vl_total_pago = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    ds_observacao = models.CharField(max_length=120, blank=True, null=True)
    fl_status_pago = models.CharField(max_length=3, blank=True, null=True)
    cd_natureza_glosa = models.ForeignKey('TbNaturezaGlosa', models.DO_NOTHING, db_column='cd_natureza_glosa', blank=True, null=True)
    cd_item_hapvida = models.CharField(max_length=12, blank=True, null=True)
    vl_item_hap = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    cd_ocorrencia_pacote = models.FloatField(blank=True, null=True)
    fl_faturamento_restrito = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_comanda_taxa'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem', 'cd_ordem_cmd', 'cd_ordem_tx'),)


class TbComandoObrigacao(models.Model):
    cd_comando_obrigacao = models.FloatField(primary_key=True)
    nm_comando_obrigacao = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'tb_comando_obrigacao'


class TbComandoXml(models.Model):
    nu_protocolo = models.BigIntegerField()
    obj_version = models.BigIntegerField()

    class Meta:
        managed = False
        db_table = 'tb_comando_xml'


class TbComissaoGarcon(models.Model):
    cd_garcon = models.IntegerField(primary_key=True)
    dt_ano_mes = models.CharField(max_length=6)
    vl_comissao = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_comissao_garcon'
        unique_together = (('cd_garcon', 'dt_ano_mes'),)


class TbComite(models.Model):
    cd_comite = models.IntegerField(primary_key=True)
    nm_comite = models.CharField(max_length=45)
    dt_fundacao = models.DateField()
    dt_expiracao = models.DateField(blank=True, null=True)
    ds_periodic_reuniao = models.CharField(max_length=10, blank=True, null=True)
    dt_proxima_reuniao = models.DateField(blank=True, null=True)
    fl_tipo_comite = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_comite'


class TbComparacaoExececaoParam(models.Model):
    cd_procedimento = models.CharField(max_length=8)
    cd_parametro_referencia = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_comparacao_exececao_param'


class TbComparativoExececaoProced(models.Model):
    cd_procedimento = models.CharField(max_length=8)

    class Meta:
        managed = False
        db_table = 'tb_comparativo_exececao_proced'


class TbComparativoOrdemProced(models.Model):
    cd_procedimento = models.CharField(max_length=8)
    nu_ordem = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_comparativo_ordem_proced'


class TbComparativoProcedEspecial(models.Model):
    cd_procedimento = models.CharField(max_length=8)

    class Meta:
        managed = False
        db_table = 'tb_comparativo_proced_especial'


class TbCompatibilidadeSus(models.Model):
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', primary_key=True)
    cd_procedimento_sus = models.ForeignKey('TbProcedimentoSus', models.DO_NOTHING, db_column='cd_procedimento_sus')

    class Meta:
        managed = False
        db_table = 'tb_compatibilidade_sus'
        unique_together = (('cd_procedimento', 'cd_procedimento_sus'),)


class TbCompoeCardapio(models.Model):
    cd_cardapio = models.ForeignKey(TbCardapio, models.DO_NOTHING, db_column='cd_cardapio', primary_key=True)
    cd_ocorrencia = models.IntegerField()
    cd_mat_med = models.IntegerField()
    cd_unidade = models.CharField(max_length=2)
    qt_conteudo = models.FloatField()
    qt_dieta = models.IntegerField(blank=True, null=True)
    cd_classificacao = models.IntegerField(blank=True, null=True)
    cd_unidade_dieta = models.CharField(max_length=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_compoe_cardapio'
        unique_together = (('cd_cardapio', 'cd_ocorrencia'),)


class TbComponenteAvaliacao(models.Model):
    cd_componente_avaliacao = models.IntegerField(primary_key=True)
    nm_componente_avaliacao = models.CharField(max_length=160)
    classif1 = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_componente_avaliacao'


class TbComponenteNanda(models.Model):
    cd_nanda = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_nanda', primary_key=True)
    cd_ordem = models.IntegerField()
    cd_ordem_pai = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_ordem_pai', blank=True, null=True)
    cd_componente_avaliacao = models.ForeignKey(TbComponenteAvaliacao, models.DO_NOTHING, db_column='cd_componente_avaliacao')

    class Meta:
        managed = False
        db_table = 'tb_componente_nanda'
        unique_together = (('cd_nanda', 'cd_ordem'),)


class TbComposicaoDieta(models.Model):
    cd_dieta = models.ForeignKey('TbDieta', models.DO_NOTHING, db_column='cd_dieta', primary_key=True)
    cd_ordem_dieta = models.IntegerField()
    cd_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_mat_med')
    cd_unidade = models.CharField(max_length=2, blank=True, null=True)
    qt_conteudo = models.IntegerField(blank=True, null=True)
    nm_composicao_dieta = models.CharField(max_length=120, blank=True, null=True)
    fl_gera_consumo = models.CharField(max_length=1, blank=True, null=True)
    fl_consumo_lata = models.CharField(max_length=1, blank=True, null=True)
    fl_parenteral_manipulada = models.CharField(max_length=1, blank=True, null=True)
    fl_parenteral = models.CharField(max_length=1, blank=True, null=True)
    fl_enteral = models.CharField(max_length=1, blank=True, null=True)
    cd_procedimento_nutricao = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento_nutricao', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_composicao_dieta'
        unique_together = (('cd_dieta', 'cd_ordem_dieta'),)


class TbComposicaoDietaAgd(models.Model):
    cd_agenda = models.BigIntegerField(primary_key=True)
    cd_modelo = models.BigIntegerField()
    cd_dieta = models.IntegerField()
    cd_ordem_dieta = models.IntegerField()
    cd_ordem = models.IntegerField()
    nm_composicao_dieta = models.CharField(max_length=120, blank=True, null=True)
    cd_mat_med = models.FloatField(blank=True, null=True)
    qt_composicao = models.IntegerField(blank=True, null=True)
    cd_unidade_usual = models.CharField(max_length=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_composicao_dieta_agd'
        unique_together = (('cd_agenda', 'cd_modelo', 'cd_dieta', 'cd_ordem_dieta', 'cd_ordem'),)


class TbComposicaoDietaPacModelo(models.Model):
    cd_modelo = models.BigIntegerField(primary_key=True)
    cd_ordem_dieta = models.IntegerField()
    cd_ordem = models.IntegerField()
    cd_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_mat_med', blank=True, null=True)
    qt_composicao = models.IntegerField(blank=True, null=True)
    cd_unidade_usual = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_usual', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_composicao_dieta_pac_modelo'
        unique_together = (('cd_modelo', 'cd_ordem_dieta', 'cd_ordem'),)


class TbComposicaoDietaPaciente(models.Model):
    cd_atendimento = models.ForeignKey('TbDietaPaciente', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbDietaPaciente', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbDietaPaciente', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_dieta = models.ForeignKey('TbDietaPaciente', models.DO_NOTHING, db_column='cd_ordem_dieta')
    cd_ordem = models.IntegerField()
    cd_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_mat_med', blank=True, null=True)
    qt_composicao = models.IntegerField(blank=True, null=True)
    cd_unidade_usual = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_usual', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_composicao_dieta_paciente'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_dieta', 'cd_ordem'),)


class TbComposicaoDietaPrescrita(models.Model):
    cd_atendimento = models.ForeignKey(TbAprazamentoDieta, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey(TbAprazamentoDieta, models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey(TbAprazamentoDieta, models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_dieta = models.ForeignKey(TbAprazamentoDieta, models.DO_NOTHING, db_column='cd_ordem_dieta')
    cd_ordem = models.ForeignKey(TbAprazamentoDieta, models.DO_NOTHING, db_column='cd_ordem')
    cd_ordem_composicao = models.IntegerField()
    cd_cardapio = models.ForeignKey(TbCompoeCardapio, models.DO_NOTHING, db_column='cd_cardapio')
    cd_ocorrencia = models.ForeignKey(TbCompoeCardapio, models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_mat_med')
    cd_unidade = models.CharField(max_length=2, blank=True, null=True)
    fl_porcao = models.CharField(max_length=5, blank=True, null=True)
    qt_conteudo = models.IntegerField(blank=True, null=True)
    ds_composicao_dieta = models.CharField(max_length=200, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_composicao_dieta_prescrita'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_dieta', 'cd_ordem', 'cd_ordem_composicao'),)


class TbComprOncoHist(models.Model):
    cd_nota = models.FloatField(primary_key=True)
    cd_ordem = models.FloatField()
    id_ordem_compra = models.FloatField(blank=True, null=True)
    id_pedido_compra = models.FloatField(blank=True, null=True)
    dt_nota = models.DateField(blank=True, null=True)
    cd_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_mat_med', blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade_atendimento = models.ForeignKey('TbFilial', models.DO_NOTHING, db_column='cd_unidade_atendimento', blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_unit = models.FloatField(blank=True, null=True)
    prc_mat_med_unit = models.FloatField(blank=True, null=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_compr_onco_hist'
        unique_together = (('cd_nota', 'cd_ordem'),)


class TbCondicao(models.Model):
    cd_condicao = models.IntegerField(primary_key=True)
    nm_condicao = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_condicao'


class TbCondicoesNniss(models.Model):
    cd_condicao = models.FloatField(primary_key=True)
    cd_condicao_primaria = models.FloatField()
    ds_condicao_primaria = models.CharField(max_length=45)
    condicao_secundaria = models.FloatField(blank=True, null=True)
    ds_condicao = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'tb_condicoes_nniss'


class TbCondicoesSitiosNniss(models.Model):
    cd_condicao_sitio = models.FloatField(primary_key=True)
    cd_ordem_condicao = models.FloatField()
    cd_condicao = models.ForeignKey(TbCondicoesNniss, models.DO_NOTHING, db_column='cd_condicao')
    cd_criterio_inicial = models.ForeignKey('TbCriteriosIniciaisNniss', models.DO_NOTHING, db_column='cd_criterio_inicial')

    class Meta:
        managed = False
        db_table = 'tb_condicoes_sitios_nniss'


class TbConselho(models.Model):
    cd_conselho = models.CharField(primary_key=True, max_length=10)
    ds_conselho = models.CharField(max_length=50)
    fl_medico = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_conselho'


class TbConselhoProfissionalAns(models.Model):
    cd_conselho_profissional = models.CharField(primary_key=True, max_length=10)
    ds_conselho_profissional = models.CharField(max_length=60)
    cd_termo = models.CharField(max_length=12, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_conselho_profissional_ans'


class TbConsigSolicitaItem(models.Model):
    cd_solicitacao = models.IntegerField(primary_key=True)
    cd_material = models.IntegerField()
    sequencial = models.IntegerField(blank=True, null=True)
    qt_solicitada = models.IntegerField(blank=True, null=True)
    qt_autorizada = models.IntegerField(blank=True, null=True)
    fl_consig = models.CharField(max_length=1, blank=True, null=True)
    cd_fornec_solicit = models.IntegerField(blank=True, null=True)
    cd_fornec_autoriz = models.IntegerField(blank=True, null=True)
    fl_transferido = models.CharField(max_length=1, blank=True, null=True)
    fl_alto_custo = models.CharField(max_length=1, blank=True, null=True)
    qt_transferida = models.IntegerField(blank=True, null=True)
    qt_devolvida = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_consig_solicita_item'
        unique_together = (('cd_solicitacao', 'cd_material'),)


class TbConsigSolicitacao(models.Model):
    cd_solicitacao = models.IntegerField(primary_key=True)
    cd_setor_solicitante = models.CharField(max_length=6, blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_profissional = models.IntegerField(blank=True, null=True)
    cd_paciente = models.IntegerField(blank=True, null=True)
    cd_agenda = models.IntegerField(blank=True, null=True)
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    dt_cirurgia = models.DateField(blank=True, null=True)
    hr_cirurgia = models.IntegerField(blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)
    nm_paciente = models.CharField(max_length=45, blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    fl_transferido = models.CharField(max_length=1, blank=True, null=True)
    ds_autorizacao = models.CharField(max_length=25, blank=True, null=True)
    ds_observacao = models.CharField(max_length=240, blank=True, null=True)
    ds_liberacao = models.CharField(max_length=25, blank=True, null=True)
    ds_transferencia = models.CharField(max_length=25, blank=True, null=True)
    cd_devolucao = models.IntegerField(blank=True, null=True)
    cd_transferencia = models.IntegerField(blank=True, null=True)
    cd_setor_controle = models.CharField(max_length=6, blank=True, null=True)
    fl_origem_solicitacao = models.CharField(max_length=1, blank=True, null=True)
    cd_nota = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_consig_solicitacao'


class TbConstraints(models.Model):
    cons_name = models.CharField(max_length=4000, blank=True, null=True)
    tipo = models.CharField(max_length=1, blank=True, null=True)
    owner = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_constraints'


class TbConsumoDiario(models.Model):
    cd_material = models.FloatField(primary_key=True)
    cd_setor_controle = models.CharField(max_length=6)
    cd_setor_destino = models.CharField(max_length=6)
    dt_consumo = models.DateField()
    qt_consumo = models.FloatField()
    nu_protocolo = models.IntegerField(blank=True, null=True)
    vl_consumo_unit = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_consumo_diario'
        unique_together = (('cd_material', 'cd_setor_controle', 'cd_setor_destino', 'dt_consumo'),)


class TbConsumoMatEqui(models.Model):
    cd_serial = models.ForeignKey('TbEquipamentoLaboratorio', models.DO_NOTHING, db_column='cd_serial', primary_key=True)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')
    cd_material = models.FloatField()
    qt_consumo = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_consumo_mat_equi'
        unique_together = (('cd_serial', 'cd_procedimento', 'cd_material'),)


class TbConsumoMatEquiVar(models.Model):
    cd_serial = models.ForeignKey('TbEquipamentoLaboratorio', models.DO_NOTHING, db_column='cd_serial', primary_key=True)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')
    cd_material = models.FloatField()
    cd_variavel = models.FloatField()
    qt_consumo = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_consumo_mat_equi_var'
        unique_together = (('cd_serial', 'cd_procedimento', 'cd_material', 'cd_variavel'),)


class TbContaBancariaPessoa(models.Model):
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa', primary_key=True)
    cd_banco = models.ForeignKey(TbAgenciaBancaria, models.DO_NOTHING, db_column='cd_banco')
    cd_agencia = models.ForeignKey(TbAgenciaBancaria, models.DO_NOTHING, db_column='cd_agencia')
    cd_tipo_conta_bancaria = models.ForeignKey('TbTipoContaBancaria', models.DO_NOTHING, db_column='cd_tipo_conta_bancaria')
    nu_conta_bancaria = models.CharField(max_length=20, blank=True, null=True)
    cd_dv_conta = models.CharField(max_length=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_conta_bancaria_pessoa'


class TbContaCorrenteCl(models.Model):
    cd_cobranca = models.ForeignKey(TbCobrancaPaciente, models.DO_NOTHING, db_column='cd_cobranca', primary_key=True)
    cd_ocorrencia = models.IntegerField()
    dt_movimento = models.DateField()
    cd_tipo_movimento = models.ForeignKey('TbTipoMovimento', models.DO_NOTHING, db_column='cd_tipo_movimento')
    vl_movimento = models.DecimalField(max_digits=18, decimal_places=2)
    vl_saldo = models.DecimalField(max_digits=18, decimal_places=2)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)
    cd_grupo_produto = models.ForeignKey('TbGrupoProduto', models.DO_NOTHING, db_column='cd_grupo_produto', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_conta_corrente_cl'
        unique_together = (('cd_cobranca', 'cd_ocorrencia'),)


class TbContaOperador(models.Model):
    nm_usuario = models.CharField(primary_key=True, max_length=20)
    cd_conta_bancaria = models.ForeignKey('TmContaCorrente', models.DO_NOTHING, db_column='cd_conta_bancaria')

    class Meta:
        managed = False
        db_table = 'tb_conta_operador'
        unique_together = (('nm_usuario', 'cd_conta_bancaria'),)


class TbContagemEncerrada(models.Model):
    cd_setor = models.CharField(primary_key=True, max_length=6)
    dt_referencia = models.CharField(max_length=6)
    qt_ativos = models.FloatField(blank=True, null=True)
    qt_contados = models.FloatField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=10, blank=True, null=True)
    dt_encerramento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_contagem_encerrada'
        unique_together = (('cd_setor', 'dt_referencia'),)


class TbContatoPessoa(models.Model):
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa', primary_key=True)
    nm_contato_pessoa = models.CharField(max_length=45)
    nr_cargo_contato = models.CharField(max_length=25, blank=True, null=True)
    nu_telefone_contato = models.IntegerField(blank=True, null=True)
    dt_nascimento_contato = models.DateField(blank=True, null=True)
    ds_contato = models.ForeignKey('TbDescricaoContato', models.DO_NOTHING, db_column='ds_contato')
    fl_status = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_contato_pessoa'
        unique_together = (('cd_pessoa', 'nm_contato_pessoa'),)


class TbContratoFornecedor(models.Model):
    cd_fornecedor = models.CharField(primary_key=True, max_length=15)
    cd_lista = models.CharField(max_length=15)
    dt_contrato = models.DateField()
    cd_forncd_hosp = models.FloatField(blank=True, null=True)
    cd_forncd_psc = models.FloatField(blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_contrato_fornecedor'
        unique_together = (('cd_fornecedor', 'cd_lista'),)


class TbContribuicaoPrevidencia(models.Model):
    dt_vigencia = models.DateField(primary_key=True)
    qt_salarios = models.IntegerField()
    nu_meses_classe = models.IntegerField()
    vl_salario_base = models.DecimalField(max_digits=18, decimal_places=2)
    pc_aliquota = models.DecimalField(max_digits=3, decimal_places=1)
    vl_contribuicao = models.DecimalField(max_digits=18, decimal_places=2)

    class Meta:
        managed = False
        db_table = 'tb_contribuicao_previdencia'
        unique_together = (('dt_vigencia', 'qt_salarios'),)


class TbControlaDesativados(models.Model):
    cd_material = models.FloatField()
    dt_desativado = models.DateField()
    cd_usuario = models.CharField(max_length=15)
    cd_setor_controle = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'tb_controla_desativados'


class TbControlaProdutividade(models.Model):
    cd_produtividade = models.IntegerField(primary_key=True)
    mes_ano_referencia = models.DateField()
    dt_processamento = models.DateField()
    vl_total_bruto = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_total_desconto = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_empresa = models.ForeignKey('TbFilial', models.DO_NOTHING, db_column='cd_empresa', blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    dt_vencimento_folha = models.DateField(blank=True, null=True)
    fl_complemento = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_controla_produtividade'


class TbControlaTimerPep(models.Model):
    tipo = models.CharField(primary_key=True, max_length=50)
    data_reg = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_controla_timer_pep'
        unique_together = (('tipo', 'data_reg'),)


class TbControleAcessoVidaImagem(models.Model):
    cd_operador = models.CharField(primary_key=True, max_length=20)
    tp_operador = models.FloatField(blank=True, null=True)
    cd_tela = models.CharField(max_length=20)
    dt_registro = models.DateField(blank=True, null=True)
    cd_operador_cadastro = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_controle_acesso_vida_imagem'
        unique_together = (('cd_operador', 'cd_tela'),)


class TbControleDevolucao(models.Model):
    cd_devolucao = models.FloatField(primary_key=True)
    cd_material = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_material')
    qt_material = models.FloatField(blank=True, null=True)
    cd_codigo_barra = models.CharField(max_length=4000, blank=True, null=True)
    cd_operador = models.CharField(max_length=12, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_controle_devolucao'
        unique_together = (('cd_devolucao', 'cd_material'),)


class TbControleGeracaoLaudo(models.Model):
    cd_id = models.FloatField(primary_key=True)
    dt_inicio = models.DateField()
    dt_fim = models.DateField()
    fl_importado_hap = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_controle_geracao_laudo'


class TbControleGeracaoTempo(models.Model):
    cd_id = models.FloatField(primary_key=True)
    fl_tipo = models.CharField(max_length=1)
    dt_inicio = models.DateField()
    dt_fim = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_controle_geracao_tempo'
        unique_together = (('cd_id', 'fl_tipo'),)


class TbControleGeracaoTiss(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans')
    nu_remessa = models.FloatField()
    fl_status_prestador = models.NullBooleanField()
    fl_geracao = models.CharField(max_length=1, blank=True, null=True)
    nu_lote_envio = models.FloatField(blank=True, null=True)
    nu_protocolo = models.FloatField(primary_key=True)
    dt_geracao = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)
    nu_protocolo_operadora = models.FloatField(blank=True, null=True)
    fl_status_operadora = models.NullBooleanField()
    ds_mensagem_operadora = models.CharField(max_length=4000, blank=True, null=True)
    dt_mensagem_operadora = models.DateField(blank=True, null=True)
    nu_registro_operadora = models.FloatField(blank=True, null=True)
    cd_glosa = models.FloatField(blank=True, null=True)
    nu_grupo_guias = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_controle_geracao_tiss'


class TbControleIrrigacao(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem_prescricao = models.IntegerField()
    cd_ordem_irrigacao = models.IntegerField()
    dt_inicio = models.DateField(blank=True, null=True)
    hr_inicio = models.IntegerField(blank=True, null=True)
    hr_termino = models.IntegerField(blank=True, null=True)
    vl_liquido_infundido = models.FloatField(blank=True, null=True)
    vl_liquido_drenado = models.FloatField(blank=True, null=True)
    vl_balanco_parcial = models.FloatField(blank=True, null=True)
    vl_balanco_total = models.FloatField(blank=True, null=True)
    cd_retencao = models.CharField(max_length=2, blank=True, null=True)
    cd_aspecto = models.CharField(max_length=2, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_profissional_valida = models.IntegerField(blank=True, null=True)
    vl_soro_retido = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_controle_irrigacao'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_irrigacao'),)


class TbControleRepasseAntecipado(models.Model):
    cd_unidade_atendimento = models.CharField(primary_key=True, max_length=3)
    cd_convenio = models.CharField(max_length=4)
    dt_antecipacao = models.DateField()
    cd_pessoa_cobra = models.FloatField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_geracao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_controle_repasse_antecipado'
        unique_together = (('cd_unidade_atendimento', 'cd_convenio', 'dt_antecipacao'),)


class TbControleRepasseMedico(models.Model):
    nu_remessa = models.FloatField(primary_key=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_geracao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_controle_repasse_medico'


class TbControleSaldoDosagem(models.Model):
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', primary_key=True)
    cd_material = models.IntegerField()
    cd_ocorrencia = models.IntegerField()
    dt_inicio_uso = models.DateField(blank=True, null=True)
    hr_inicio_uso = models.IntegerField(blank=True, null=True)
    qt_dosagem_apresentacao = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    qt_volume_ml = models.FloatField(blank=True, null=True)
    qt_horas_estabilidade = models.IntegerField(blank=True, null=True)
    qt_saldo_ml = models.FloatField(blank=True, null=True)
    dt_fim_uso = models.DateField(blank=True, null=True)
    hr_fim_uso = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_controle_saldo_dosagem'
        unique_together = (('cd_setor', 'cd_material', 'cd_ocorrencia'),)


class TbControleUsuarios(models.Model):
    cod_usuario = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cod_usuario', blank=True, null=True)
    ult_acesso = models.DateField(blank=True, null=True)
    ult_atualizacao = models.DateField(blank=True, null=True)
    cd_funcionario = models.IntegerField(blank=True, null=True)
    nu_matricula = models.IntegerField(blank=True, null=True)
    nm_operador = models.CharField(max_length=45, blank=True, null=True)
    cd_acesso = models.CharField(max_length=45, blank=True, null=True)
    cd_acesso_db = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_controle_usuarios'


class TbConvenioAgendaIntern(models.Model):
    cd_agenda = models.ForeignKey('TmAgendaInternacao', models.DO_NOTHING, db_column='cd_agenda', primary_key=True)
    cd_convenio_agendado = models.BooleanField()
    cd_convenio_base = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_convenio_base')
    cd_plano_base = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano_base')
    cd_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_convenio')
    cd_plano = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano')
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    dt_validade = models.DateField(blank=True, null=True)
    cd_categoria = models.CharField(max_length=1, blank=True, null=True)
    cd_franquia = models.CharField(max_length=2, blank=True, null=True)
    cd_tabela_proced = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_proced', blank=True, null=True)
    pc_desconto_proced = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_tabela_taxa = models.ForeignKey('TbTabelaTaxa', models.DO_NOTHING, db_column='cd_tabela_taxa', blank=True, null=True)
    pc_desconto_taxa = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_tabela_mat_med = models.ForeignKey('TbTabelaMatMed', models.DO_NOTHING, db_column='cd_tabela_mat_med', blank=True, null=True)
    pc_desconto_mat_med = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_tabela_medicamento = models.ForeignKey('TbTabelaMatMed', models.DO_NOTHING, db_column='cd_tabela_medicamento', blank=True, null=True)
    pc_desconto_medicamento = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_desconto = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_convenio_agenda_intern'
        unique_together = (('cd_agenda', 'cd_convenio_base', 'cd_plano_base'), ('cd_agenda', 'cd_convenio_agendado'),)


class TbConvenioAgendado(models.Model):
    cd_convenio_agendado = models.BooleanField()
    cd_agenda = models.ForeignKey('TmAgendaMedica', models.DO_NOTHING, db_column='cd_agenda', primary_key=True)
    cd_convenio_base = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_convenio_base')
    cd_plano_base = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano_base')
    cd_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_convenio')
    cd_plano = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano')
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    dt_validade = models.DateField(blank=True, null=True)
    cd_categoria = models.CharField(max_length=1, blank=True, null=True)
    cd_franquia = models.CharField(max_length=2, blank=True, null=True)
    cd_tabela_proced = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_proced', blank=True, null=True)
    pc_desconto_proced = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_tabela_taxa = models.ForeignKey('TbTabelaTaxa', models.DO_NOTHING, db_column='cd_tabela_taxa', blank=True, null=True)
    pc_desconto_taxa = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_tabela_mat_med = models.ForeignKey('TbTabelaMatMed', models.DO_NOTHING, db_column='cd_tabela_mat_med', blank=True, null=True)
    pc_desconto_mat_med = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_desconto = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_convenio_agendado'
        unique_together = (('cd_agenda', 'cd_convenio_base', 'cd_plano_base'), ('cd_agenda', 'cd_convenio_agendado'),)


class TbConvenioClinica(models.Model):
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio', primary_key=True)
    cd_clinica = models.ForeignKey(TbClinica, models.DO_NOTHING, db_column='cd_clinica')

    class Meta:
        managed = False
        db_table = 'tb_convenio_clinica'
        unique_together = (('cd_convenio', 'cd_clinica'),)


class TbConvenioFaturamento(models.Model):
    cd_grupo = models.ForeignKey('TbGrupoFaturamento', models.DO_NOTHING, db_column='cd_grupo', primary_key=True)
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio')

    class Meta:
        managed = False
        db_table = 'tb_convenio_faturamento'
        unique_together = (('cd_grupo', 'cd_convenio'),)


class TbConvenioFilialCruzado(models.Model):
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio', primary_key=True)
    cd_filial = models.ForeignKey('TbFilial', models.DO_NOTHING, db_column='cd_filial')
    cd_usuario = models.CharField(max_length=30)
    dt_atualizacao = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_convenio_filial_cruzado'


class TbConvenioPagador(models.Model):
    cd_convenio_pagador = models.BooleanField()
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_convenio_base = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_convenio_base')
    cd_plano_base = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano_base')
    cd_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_convenio')
    cd_plano = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano')
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    dt_validade = models.DateField(blank=True, null=True)
    cd_tabela_proced = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_proced', blank=True, null=True)
    pc_desconto_proced = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_tabela_taxa = models.ForeignKey('TbTabelaTaxa', models.DO_NOTHING, db_column='cd_tabela_taxa', blank=True, null=True)
    pc_desconto_taxa = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_tabela_mat_med = models.ForeignKey('TbTabelaMatMed', models.DO_NOTHING, db_column='cd_tabela_mat_med', blank=True, null=True)
    pc_desconto_mat_med = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_desconto = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_tabela_medicamento = models.ForeignKey('TbTabelaMatMed', models.DO_NOTHING, db_column='cd_tabela_medicamento', blank=True, null=True)
    pc_desconto_medicamento = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_um_proced = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_proced', blank=True, null=True)
    cd_um_taxa = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_taxa')
    cd_um_mat_med = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_mat_med')
    cd_um_medicamento = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_medicamento')
    cd_categoria = models.CharField(max_length=1, blank=True, null=True)
    cd_franquia = models.CharField(max_length=2, blank=True, null=True)
    nm_empresa_conveniada = models.CharField(max_length=45, blank=True, null=True)
    pc_acrescimo_taxa = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_acrescimo_mat_med = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_acrescimo_medicamento = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_convenio_pagador'
        unique_together = (('cd_atendimento', 'cd_convenio_base', 'cd_plano_base'), ('cd_atendimento', 'cd_convenio_pagador'),)


class TbConvenioPagadorProced(models.Model):
    cd_convenio_pagador = models.ForeignKey(TbConvenioPagador, models.DO_NOTHING, db_column='cd_convenio_pagador', primary_key=True)
    cd_atendimento = models.ForeignKey(TbConvenioPagador, models.DO_NOTHING, db_column='cd_atendimento')
    cd_grupo_procedimento = models.ForeignKey('TbGrupoProcedimento', models.DO_NOTHING, db_column='cd_grupo_procedimento')
    cd_tabela_proced = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_proced')
    pc_desconto_proced = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_um_proced = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_proced')
    fl_prioridade = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_convenio_pagador_proced'
        unique_together = (('cd_convenio_pagador', 'cd_atendimento', 'cd_grupo_procedimento'),)


class TbConversaoUnidade(models.Model):
    cd_unidade_origem = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_origem', primary_key=True)
    cd_unidade_destino = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_destino')
    vl_conversao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_conversao_unidade'
        unique_together = (('cd_unidade_origem', 'cd_unidade_destino'),)


class TbCopiaVlFixoAux(models.Model):
    cd_convenio = models.FloatField(blank=True, null=True)
    cd_plano_convenio = models.FloatField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=10, blank=True, null=True)
    dt_vigencia_ref = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_copia_vl_fixo_aux'


class TbCor(models.Model):
    cd_cor = models.BooleanField(primary_key=True)
    ds_cor = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_cor'


class TbCorAtendimentoSa(models.Model):
    cd_cor_atendimento = models.IntegerField(primary_key=True)
    ds_cor_atendimento = models.CharField(max_length=30, blank=True, null=True)
    cd_cor_paleta = models.CharField(max_length=15)

    class Meta:
        managed = False
        db_table = 'tb_cor_atendimento_sa'


class TbCotacaoGravada(models.Model):
    cd_cotacao = models.IntegerField(primary_key=True)
    cd_setor = models.CharField(max_length=6)
    cd_grupo = models.IntegerField()
    dt_gravacao = models.DateField(blank=True, null=True)
    vl_oc = models.DecimalField(max_digits=15, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cotacao_gravada'
        unique_together = (('cd_cotacao', 'cd_setor', 'cd_grupo'),)


class TbCotacaoOncologia(models.Model):
    cd_modelo_cotacao = models.IntegerField(primary_key=True)
    cd_cotacao = models.IntegerField(blank=True, null=True)
    dt_modelo_cotacao = models.DateField(blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    cd_mat_med = models.IntegerField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qt_atual = models.IntegerField(blank=True, null=True)
    qt_material = models.IntegerField(blank=True, null=True)
    qt_sugerida = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=15, blank=True, null=True)
    cd_operador_alterou = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cotacao_oncologia'


class TbCotacaoOrdemCompra(models.Model):
    cd_cotacao = models.IntegerField(primary_key=True)
    id_ordem_compra = models.FloatField()
    id_forncd = models.FloatField(blank=True, null=True)
    ds_tipo = models.CharField(max_length=15, blank=True, null=True)
    cod_lista_forncd = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cotacao_ordem_compra'
        unique_together = (('cd_cotacao', 'id_ordem_compra'),)


class TbCountConsultas(models.Model):
    dt_atendimento = models.DateField(blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    nm_setor = models.CharField(max_length=45, blank=True, null=True)
    ds_grupo_atendimento = models.CharField(max_length=45, blank=True, null=True)
    ds_operador = models.CharField(max_length=45, blank=True, null=True)
    hora00 = models.FloatField(blank=True, null=True)
    hora01 = models.FloatField(blank=True, null=True)
    hora02 = models.FloatField(blank=True, null=True)
    hora03 = models.FloatField(blank=True, null=True)
    hora04 = models.FloatField(blank=True, null=True)
    hora05 = models.FloatField(blank=True, null=True)
    hora06 = models.FloatField(blank=True, null=True)
    hora07 = models.FloatField(blank=True, null=True)
    hora08 = models.FloatField(blank=True, null=True)
    hora09 = models.FloatField(blank=True, null=True)
    hora10 = models.FloatField(blank=True, null=True)
    hora11 = models.FloatField(blank=True, null=True)
    hora12 = models.FloatField(blank=True, null=True)
    hora13 = models.FloatField(blank=True, null=True)
    hora14 = models.FloatField(blank=True, null=True)
    hora15 = models.FloatField(blank=True, null=True)
    hora16 = models.FloatField(blank=True, null=True)
    hora17 = models.FloatField(blank=True, null=True)
    hora18 = models.FloatField(blank=True, null=True)
    hora19 = models.FloatField(blank=True, null=True)
    hora20 = models.FloatField(blank=True, null=True)
    hora21 = models.FloatField(blank=True, null=True)
    hora22 = models.FloatField(blank=True, null=True)
    hora23 = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_count_consultas'


class TbCpfInvalidoDemed(models.Model):
    nu_cgc_cpf = models.FloatField(primary_key=True)
    dt_registro = models.DateField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cpf_invalido_demed'


class TbCpfUsuarioDependente(models.Model):
    cd_usuario = models.CharField(primary_key=True, max_length=14)
    nu_cpf = models.FloatField()
    nm_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_cpf_usuario_dependente'


class TbCriteriosCondicoesNniss(models.Model):
    cd_criterio_condicao = models.FloatField(primary_key=True)
    cd_condicao_sitio = models.ForeignKey(TbCondicoesSitiosNniss, models.DO_NOTHING, db_column='cd_condicao_sitio')
    cd_criterio = models.ForeignKey('TbCriteriosNniss', models.DO_NOTHING, db_column='cd_criterio')

    class Meta:
        managed = False
        db_table = 'tb_criterios_condicoes_nniss'


class TbCriteriosIniciaisNniss(models.Model):
    cd_criterio_inicial = models.FloatField(primary_key=True)
    ordem_criterio_inicial = models.FloatField()
    cd_sitio_p = models.ForeignKey('TbSitiosPrincipalEspecifico', models.DO_NOTHING, db_column='cd_sitio_p')
    cd_sitio_e = models.ForeignKey('TbSitiosPrincipalEspecifico', models.DO_NOTHING, db_column='cd_sitio_e')
    ds_criterio_inicial = models.CharField(max_length=450)

    class Meta:
        managed = False
        db_table = 'tb_criterios_iniciais_nniss'


class TbCriteriosNniss(models.Model):
    cd_criterio = models.FloatField(primary_key=True)
    cd_criterio_inicial = models.ForeignKey(TbCriteriosIniciaisNniss, models.DO_NOTHING, db_column='cd_criterio_inicial')
    ds_criterio = models.CharField(max_length=4000)
    cd_criterio_pai = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_criterio_pai', blank=True, null=True)
    fl_exame = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_criterios_nniss'


class TbCustoProcedimentoExames(models.Model):
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', primary_key=True)
    cd_filial = models.ForeignKey('TbFilial', models.DO_NOTHING, db_column='cd_filial')
    vl_custo = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    dt_vigencia = models.DateField()
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)
    vl_custo_rateio = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_custo_estimado = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_custo_procedimento_exames'
        unique_together = (('cd_procedimento', 'cd_filial', 'dt_vigencia'),)


class TbCustoTaxasDiarias(models.Model):
    cd_taxas = models.ForeignKey('TbTaxas', models.DO_NOTHING, db_column='cd_taxas', primary_key=True)
    cd_filial = models.ForeignKey('TbFilial', models.DO_NOTHING, db_column='cd_filial')
    vl_custo = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    dt_vigencia = models.DateField()
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)
    vl_custo_rateio = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_custo_estimado = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_custo_taxas_diarias'
        unique_together = (('cd_taxas', 'cd_filial', 'dt_vigencia'),)


class TbDadosExecutanteAns(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans')
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_seq_registro = models.FloatField(blank=True, null=True)
    nu_guia_prestador = models.CharField(max_length=20, blank=True, null=True)
    nu_cnpj_executante = models.CharField(max_length=14)
    nm_executante = models.CharField(max_length=70)
    nm_profissional = models.CharField(max_length=70, blank=True, null=True)
    cd_sigla_conselho = models.CharField(max_length=7, blank=True, null=True)
    nu_conselho = models.CharField(max_length=15, blank=True, null=True)
    uf_conselho = models.CharField(max_length=2, blank=True, null=True)
    cd_prestador_na_operadora = models.CharField(max_length=20, blank=True, null=True)
    cd_tipo_prof = models.CharField(max_length=8, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dados_executante_ans'


class TbDadosGinecoObstetrico(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    dt_ult_mens = models.DateField(blank=True, null=True)
    fl_vida_sexual_ativa = models.CharField(max_length=1, blank=True, null=True)
    fl_uso_anticoncepcional = models.CharField(max_length=1, blank=True, null=True)
    nm_anticoncepcional = models.CharField(max_length=20, blank=True, null=True)
    qt_tempo_uso_anticoncep = models.IntegerField(blank=True, null=True)
    dt_provavel_parto = models.DateField(blank=True, null=True)
    ds_observacoes = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dados_gineco_obstetrico'


class TbDadosRn(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    dt_nasc = models.DateField(blank=True, null=True)
    hr_nasc = models.IntegerField(blank=True, null=True)
    fl_nat_morto = models.CharField(max_length=1, blank=True, null=True)
    fl_sexo_rn = models.CharField(max_length=1, blank=True, null=True)
    fl_patologia = models.CharField(max_length=1, blank=True, null=True)
    nu_peso_rn = models.IntegerField()
    fl_cor_rn = models.CharField(max_length=1, blank=True, null=True)
    fl_reanimacao = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dados_rn'


class TbDadosSolicitanteAns(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans')
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_seq_registro = models.FloatField(blank=True, null=True)
    nu_guia_prestador = models.CharField(max_length=20, blank=True, null=True)
    nu_cnpj_solicitante = models.CharField(max_length=14)
    nm_contratado = models.CharField(max_length=70)
    nm_profissional = models.CharField(max_length=70, blank=True, null=True)
    cd_sigla_conselho = models.CharField(max_length=7, blank=True, null=True)
    nu_conselho = models.CharField(max_length=15, blank=True, null=True)
    uf_conselho = models.CharField(max_length=2, blank=True, null=True)
    cd_prestador_na_operadora = models.CharField(max_length=20, blank=True, null=True)
    cd_tipo_prof = models.CharField(max_length=8, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dados_solicitante_ans'


class TbDataCheckErro(models.Model):
    cd_atendimento = models.IntegerField()
    cd_ref = models.FloatField(blank=True, null=True)
    cd_proced_param_referencia = models.FloatField(blank=True, null=True)
    fl_origem = models.CharField(max_length=1)
    ds_erro = models.CharField(max_length=2048, blank=True, null=True)
    dt_erro = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_data_check_erro'


class TbDataCheckMedprev(models.Model):
    cd_id = models.FloatField(primary_key=True)
    cd_programa = models.FloatField()
    fl_sexo = models.CharField(max_length=2)
    cd_procedimento = models.ForeignKey('TbProcedParamReferencia', models.DO_NOTHING, db_column='cd_procedimento')
    cd_metodo_realizado = models.ForeignKey('TbProcedParamReferencia', models.DO_NOTHING, db_column='cd_metodo_realizado')
    cd_parametro_referencia = models.ForeignKey('TbProcedParamReferencia', models.DO_NOTHING, db_column='cd_parametro_referencia')
    cd_ordem = models.ForeignKey('TbProcedParamReferencia', models.DO_NOTHING, db_column='cd_ordem')
    fl_tipo_valor = models.CharField(max_length=1)
    cd_referencia = models.CharField(max_length=1)
    ds_intervalo1 = models.CharField(max_length=50)
    ds_intervalo2 = models.CharField(max_length=50, blank=True, null=True)
    nu_ig_inicio = models.FloatField(blank=True, null=True)
    nu_ig_fim = models.FloatField(blank=True, null=True)
    dt_inicio = models.DateField()
    dt_fim = models.DateField(blank=True, null=True)
    cd_ref = models.ForeignKey('TbParamParametroReferencia', models.DO_NOTHING, db_column='cd_ref', blank=True, null=True)
    cd_proced_param_referencia = models.FloatField(blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)
    qt_idade_inicial = models.FloatField(blank=True, null=True)
    qt_idade_final = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_data_check_medprev'


class TbDataCheckResultado(models.Model):
    cd_data_check_resultado = models.FloatField(primary_key=True)
    cd_atendimento = models.IntegerField()
    cd_ocorrencia = models.IntegerField()
    cd_ordem = models.IntegerField()
    cd_ref = models.ForeignKey('TbParamParametroReferencia', models.DO_NOTHING, db_column='cd_ref')
    cd_proced_param_referencia = models.FloatField()
    vl_resultado_parametro = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    ds_resultado_procedimento = models.CharField(max_length=50, blank=True, null=True)
    fl_origem = models.CharField(max_length=1)
    dt_check = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_data_check_resultado'


class TbDataCheckUnidade(models.Model):
    cd_unidade_atendimento = models.CharField(max_length=3)
    dt_operacao = models.DateField()
    nm_operador = models.CharField(max_length=10)
    dt_inicio = models.DateField(blank=True, null=True)
    dt_ultimo_processamento = models.DateField(blank=True, null=True)
    nu_dias = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_data_check_unidade'


class TbDataCorte(models.Model):
    dt_corte = models.DateField(primary_key=True)

    class Meta:
        managed = False
        db_table = 'tb_data_corte'


class TbDefinePlantaoMedicoVd(models.Model):
    cd_medico = models.FloatField(primary_key=True)
    mes_ano = models.DateField()
    plantao = models.FloatField(blank=True, null=True)
    grupo_procedimento = models.FloatField(blank=True, null=True)
    cd_empresa = models.FloatField()
    fl_grupo_principal = models.CharField(max_length=1, blank=True, null=True)
    dt_plantao = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_define_plantao_medico_vd'
        unique_together = (('cd_medico', 'mes_ano', 'cd_empresa', 'dt_plantao'),)


class TbDefineSAvisoMedicoVd(models.Model):
    cd_medico = models.FloatField(primary_key=True)
    mes_ano = models.DateField()
    dt_plantao = models.DateField()
    grupo_procedimento = models.FloatField(blank=True, null=True)
    cd_empresa = models.FloatField()
    sobre_aviso = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_define_s_aviso_medico_vd'
        unique_together = (('cd_medico', 'mes_ano', 'cd_empresa', 'dt_plantao'),)


class TbDemoAnaliseContaAns(models.Model):
    nu_registro_ans = models.CharField(primary_key=True, max_length=6)
    nu_demonstrativo = models.CharField(max_length=20)
    nu_cnpj_operadora = models.CharField(max_length=14)
    nm_operadora = models.CharField(max_length=70, blank=True, null=True)
    dt_emissao = models.DateField()
    cnpj_prestador = models.CharField(max_length=14, blank=True, null=True)
    cpf_prestador = models.CharField(max_length=11, blank=True, null=True)
    cd_prestador = models.CharField(max_length=20, blank=True, null=True)
    nm_contratado = models.CharField(max_length=70, blank=True, null=True)
    vl_processado_geral = models.FloatField(blank=True, null=True)
    vl_liberado_geral = models.FloatField(blank=True, null=True)
    vl_glosa_geral = models.FloatField(blank=True, null=True)
    nu_remessa = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_demo_analise_conta_ans'
        unique_together = (('nu_registro_ans', 'nu_demonstrativo'),)


class TbDemoPagamentoAns(models.Model):
    nu_registro_ans = models.CharField(primary_key=True, max_length=6)
    nu_demonstrativo = models.CharField(max_length=20)
    nu_cnpj_operadora = models.CharField(max_length=14)
    nm_operadora = models.CharField(max_length=70, blank=True, null=True)
    dt_emissao = models.DateField()
    cnpj_prestador = models.CharField(max_length=14, blank=True, null=True)
    cpf_prestador = models.CharField(max_length=11, blank=True, null=True)
    cd_prestador = models.CharField(max_length=20, blank=True, null=True)
    nm_contratado = models.CharField(max_length=70, blank=True, null=True)
    dt_pagamento = models.DateField(blank=True, null=True)
    cd_forma_pagamento = models.CharField(max_length=1, blank=True, null=True)
    vl_geral_informado = models.FloatField(blank=True, null=True)
    vl_geral_processado = models.FloatField(blank=True, null=True)
    vl_geral_glosa = models.FloatField(blank=True, null=True)
    vl_geral_liberado = models.FloatField(blank=True, null=True)
    vl_total = models.FloatField(blank=True, null=True)
    vl_final_liberado = models.FloatField(blank=True, null=True)
    nu_remessa = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_demo_pagamento_ans'
        unique_together = (('nu_registro_ans', 'nu_demonstrativo'),)


class TbDemostrativoProcGlosa(models.Model):
    nu_remessa = models.ForeignKey('TbItemRemessaGlosa', models.DO_NOTHING, db_column='nu_remessa')
    nu_item_remessa = models.ForeignKey('TbItemRemessaGlosa', models.DO_NOTHING, db_column='nu_item_remessa')
    nu_processo = models.ForeignKey('TbItemRemessaGlosa', models.DO_NOTHING, db_column='nu_processo')
    nm_beneficiario = models.CharField(max_length=70, blank=True, null=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    cd_ocorrencia_guia = models.IntegerField(blank=True, null=True)
    nu_guia = models.CharField(max_length=16, blank=True, null=True)
    nu_seq_item_guia = models.FloatField(blank=True, null=True)
    cd_tipo_servico = models.IntegerField(blank=True, null=True)
    dt_servico = models.DateField(blank=True, null=True)
    cd_servico = models.CharField(max_length=20, blank=True, null=True)
    cd_servico_hapvida = models.CharField(max_length=20, blank=True, null=True)
    cd_servico_convert = models.CharField(max_length=20, blank=True, null=True)
    nm_servico = models.CharField(max_length=70, blank=True, null=True)
    cd_senha_autoriza = models.CharField(max_length=20, blank=True, null=True)
    cd_posicao_prof = models.FloatField(blank=True, null=True)
    qt_servico = models.FloatField(blank=True, null=True)
    vl_processado = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    qt_servico_pago = models.FloatField(blank=True, null=True)
    vl_liberado = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    qt_glosada = models.FloatField(blank=True, null=True)
    vl_glosado = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    cd_glosa = models.IntegerField(blank=True, null=True)
    qt_a_recuperar = models.FloatField(blank=True, null=True)
    vl_a_recuperar = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_saldo = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    cd_natureza_glosa = models.ForeignKey('TbNaturezaGlosa', models.DO_NOTHING, db_column='cd_natureza_glosa', blank=True, null=True)
    cd_motivo = models.IntegerField(blank=True, null=True)
    nu_remessa_glosa = models.FloatField(blank=True, null=True)
    dt_remessa_glosa = models.DateField(blank=True, null=True)
    fl_erro = models.CharField(max_length=1, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)
    fl_pacote = models.CharField(max_length=1, blank=True, null=True)
    nu_lote = models.CharField(max_length=16, blank=True, null=True)
    dt_producao = models.DateField(blank=True, null=True)
    nu_carteira_benef = models.CharField(max_length=20, blank=True, null=True)
    nu_registro_ans = models.CharField(max_length=6, blank=True, null=True)
    fl_opme = models.CharField(max_length=1, blank=True, null=True)
    cd_tabela_usada = models.CharField(max_length=2, blank=True, null=True)
    ds_parecer = models.CharField(max_length=500, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_demostrativo_proc_glosa'


class TbDependentePessoa(models.Model):
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa', primary_key=True)
    nu_ordem_dependente = models.IntegerField()
    nm_dependente = models.CharField(max_length=45)
    dt_nasc_dependente = models.DateField(blank=True, null=True)
    cd_tipo_dependente = models.IntegerField()
    nm_nacionalidade = models.CharField(max_length=25, blank=True, null=True)
    fl_sexo = models.CharField(max_length=1, blank=True, null=True)
    fl_dependencia_inss = models.CharField(max_length=1, blank=True, null=True)
    dt_limite_inss = models.DateField(blank=True, null=True)
    fl_dependencia_irrf = models.CharField(max_length=1, blank=True, null=True)
    dt_limite_irrf = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dependente_pessoa'
        unique_together = (('cd_pessoa', 'nu_ordem_dependente'),)


class TbDescCredProdutividade(models.Model):
    cd_medico = models.FloatField(blank=True, null=True)
    cd_empresa = models.FloatField(blank=True, null=True)
    dt_referencia = models.DateField(blank=True, null=True)
    tp_operacao = models.FloatField(blank=True, null=True)
    cd_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)
    cd_autorizador = models.CharField(max_length=30, blank=True, null=True)
    dt_autorizacao = models.DateField(blank=True, null=True)
    ds_motivo = models.CharField(max_length=1000, blank=True, null=True)
    vl_op = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_desc_cred_produtividade'


class TbDescricaoContato(models.Model):
    ds_contato = models.CharField(primary_key=True, max_length=25)

    class Meta:
        managed = False
        db_table = 'tb_descricao_contato'


class TbDescricaoMovCaixa(models.Model):
    cd_grupo_mov_caixa = models.ForeignKey('TbGrupoMovCaixa', models.DO_NOTHING, db_column='cd_grupo_mov_caixa', primary_key=True)
    cd_descricao_mov_caixa = models.FloatField()
    ds_descricao_mov_caixa = models.CharField(max_length=40)
    fl_tipo_mov_caixa = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_descricao_mov_caixa'
        unique_together = (('cd_grupo_mov_caixa', 'cd_descricao_mov_caixa'),)


class TbDetalheResumoAns(models.Model):
    nu_registro_ans = models.CharField(primary_key=True, max_length=6)
    nu_demonstrativo = models.CharField(max_length=20)
    nu_lote = models.CharField(max_length=20)
    nu_protocolo = models.CharField(max_length=12)
    dt_envio_lote = models.DateField(blank=True, null=True)
    nu_fatura = models.CharField(max_length=20, blank=True, null=True)
    vl_informado = models.FloatField(blank=True, null=True)
    vl_processado = models.FloatField(blank=True, null=True)
    vl_liberado = models.FloatField(blank=True, null=True)
    vl_glosa = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_detalhe_resumo_ans'
        unique_together = (('nu_registro_ans', 'nu_demonstrativo', 'nu_lote', 'nu_protocolo'),)


class TbDevMatMedLido(models.Model):
    cd_solicitacao = models.FloatField(primary_key=True)
    cd_codigo_barra = models.CharField(max_length=100)
    cd_devolucao = models.FloatField(blank=True, null=True)
    cd_lote = models.CharField(max_length=30, blank=True, null=True)
    dt_validade = models.DateField(blank=True, null=True)
    cd_setor_origem = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_destino = models.CharField(max_length=6, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dev_mat_med_lido'
        unique_together = (('cd_solicitacao', 'cd_codigo_barra'),)


class TbDevolucaoProntuario(models.Model):
    cd_devolucao_prontuario = models.FloatField(primary_key=True)
    cd_atendimento = models.FloatField()
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento')
    dt_envio = models.DateField(blank=True, null=True)
    dt_recebimento = models.DateField(blank=True, null=True)
    cd_tipo_devolucao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_devolucao_prontuario'


class TbDiaSemana(models.Model):
    cd_dia_semana = models.IntegerField(primary_key=True)
    nm_dia_semana = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_dia_semana'


class TbDiaSemana9(models.Model):
    cd_dia_semana = models.IntegerField(blank=True, null=True)
    nm_dia_semana = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_dia_semana9'


class TbDiagnostico(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_tipo_diagnostico = models.ForeignKey('TbTipoDiagnostico', models.DO_NOTHING, db_column='cd_tipo_diagnostico')
    cd_diagnostico = models.ForeignKey(TbCid, models.DO_NOTHING, db_column='cd_diagnostico', blank=True, null=True)
    cd_diagnostico_cid10 = models.CharField(max_length=6, blank=True, null=True)
    cd_tipo_alta_ambulatorio = models.ForeignKey('TbTipoAlta', models.DO_NOTHING, db_column='cd_tipo_alta_ambulatorio', blank=True, null=True)
    dt_alta_automatica = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_diagnostico'
        unique_together = (('cd_atendimento', 'cd_tipo_diagnostico'),)


class TbDiagnosticoAtendimento(models.Model):
    cd_atendimento = models.ForeignKey('TbPlanoTratamentoUso', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPlanoTratamentoUso', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_diagnostico = models.IntegerField()
    cd_tipo_diagnostico = models.ForeignKey('TbTipoDiagnostico', models.DO_NOTHING, db_column='cd_tipo_diagnostico')
    dt_diagnostico = models.DateField()
    hr_diagnostico = models.IntegerField()
    cd_cid10 = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cd_cid10', blank=True, null=True)
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_valida = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_valida', blank=True, null=True)
    dt_transacao_valida = models.DateField(blank=True, null=True)
    cd_ordem_plano_trat = models.ForeignKey('TbPlanoTratUsoOcorrencia', models.DO_NOTHING, db_column='cd_ordem_plano_trat', blank=True, null=True)
    fl_confirmado = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_confirma = models.IntegerField(blank=True, null=True)
    dt_transacao_confirma = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_diagnostico_atendimento'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_diagnostico'),)


class TbDiagnosticoEnfermagem(models.Model):
    cd_atendimento = models.ForeignKey('TbPlanoTratamentoUso', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPlanoTratamentoUso', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_diagnostico = models.IntegerField()
    cd_nanda = models.ForeignKey('TbNanda', models.DO_NOTHING, db_column='cd_nanda')
    ds_tratamento = models.CharField(max_length=2000, blank=True, null=True)
    ds_observacao = models.CharField(max_length=240, blank=True, null=True)
    nu_tempo_estimado = models.IntegerField()
    fl_unidade_tempo = models.CharField(max_length=1)
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional')
    dt_inicio = models.DateField()
    dt_fim = models.DateField(blank=True, null=True)
    fl_uso = models.CharField(max_length=1)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_diagnostico_enfermagem'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_diagnostico'),)


class TbDiagnosticoExame(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ordem')
    nu_seq_diagnostico = models.IntegerField()
    cd_modelo_diagnostico = models.ForeignKey('TbModeloDiagnostico', models.DO_NOTHING, db_column='cd_modelo_diagnostico', blank=True, null=True)
    ds_diagnostico_exame = models.CharField(max_length=2000)

    class Meta:
        managed = False
        db_table = 'tb_diagnostico_exame'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem', 'nu_seq_diagnostico'),)


class TbDiagnosticoNutricao(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem = models.IntegerField()
    nu_diagnostico_nutricao = models.IntegerField(unique=True)
    dt_diagnostico = models.DateField(blank=True, null=True)
    hr_diagnostico = models.IntegerField(blank=True, null=True)
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional', blank=True, null=True)
    ds_observacao = models.TextField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_valida = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_profissional_valida', blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    fl_imprimiu_evolucao = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_imprimiu = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_diagnostico_nutricao'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem'),)


class TbDiagnosticoSae(models.Model):
    cd_atendimento = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_avaliacao = models.IntegerField()
    cd_avaliacao = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_avaliacao')
    cd_nivel_avaliacao = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_ordem')
    fl_checado = models.CharField(max_length=1, blank=True, null=True)
    cd_operador = models.CharField(max_length=30)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField()
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)
    cd_profissional_prescreve = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_prescreve', blank=True, null=True)
    cd_profissional_valida = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_valida', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_diagnostico_sae'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_avaliacao'),)


class TbDieta(models.Model):
    cd_dieta = models.IntegerField(primary_key=True)
    nm_dieta = models.CharField(max_length=45)
    ds_indicacao_uso = models.CharField(max_length=240, blank=True, null=True)
    cd_tipo_dieta = models.ForeignKey('TbTipoDieta', models.DO_NOTHING, db_column='cd_tipo_dieta')

    class Meta:
        managed = False
        db_table = 'tb_dieta'


class TbDietaAdm(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.IntegerField()
    dt_dieta_adm = models.DateField()
    cd_dieta = models.IntegerField()
    ds_observacao = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dieta_adm'
        unique_together = (('cd_atendimento', 'cd_ocorrencia'),)


class TbDietaAdmCardapio(models.Model):
    cd_ocorrencia = models.ForeignKey(TbDietaAdm, models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_atendimento = models.ForeignKey(TbDietaAdm, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_cardapio = models.IntegerField()
    dt_dieta_adm = models.DateField()
    hr_dieta_adm = models.IntegerField()
    cd_tipo_cardapio = models.IntegerField()
    ds_observacao = models.CharField(max_length=200, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dieta_adm_cardapio'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ocorrencia_cardapio'),)


class TbDietaPaciente(models.Model):
    cd_atendimento = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_dieta = models.IntegerField()
    cd_dieta = models.ForeignKey(TbDieta, models.DO_NOTHING, db_column='cd_dieta')
    dt_prescricao_dieta = models.DateField()
    dt_inicial = models.DateField()
    dt_final = models.DateField(blank=True, null=True)
    cd_medico = models.IntegerField(blank=True, null=True)
    cd_unidade_usual = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_usual')
    nu_frequencia = models.IntegerField(blank=True, null=True)
    qt_dieta = models.IntegerField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=120, blank=True, null=True)
    cd_tipo_acesso = models.ForeignKey('TbTipoAcesso', models.DO_NOTHING, db_column='cd_tipo_acesso', blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    hr_inicio_uso = models.IntegerField(blank=True, null=True)
    cd_profissional_prescreve = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_prescreve', blank=True, null=True)
    cd_profissional_valida = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_valida', blank=True, null=True)
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    fl_bomba_infusao = models.CharField(max_length=1, blank=True, null=True)
    qt_gotejamento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.ForeignKey('TbGotejamento', models.DO_NOTHING, db_column='cd_gotejamento', blank=True, null=True)
    qt_tempo_gotej = models.IntegerField(blank=True, null=True)
    cd_unidade_gotej = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_gotej', blank=True, null=True)
    fl_rotina_rg = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_imprime', blank=True, null=True)
    dt_hr_suspensao = models.DateField(blank=True, null=True)
    fl_enterofix = models.CharField(max_length=1, blank=True, null=True)
    fl_equipo_bomba = models.CharField(max_length=1, blank=True, null=True)
    dt_validacao = models.DateField(blank=True, null=True)
    fl_item_susp_presc_anterior = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dieta_paciente'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_dieta'),)


class TbDietaPacienteAgd(models.Model):
    cd_agenda = models.IntegerField()
    cd_modelo = models.IntegerField()
    cd_ordem_dieta = models.IntegerField()
    cd_dieta = models.IntegerField()
    dt_prescricao_dieta = models.DateField(blank=True, null=True)
    dt_inicial = models.DateField(blank=True, null=True)
    dt_final = models.DateField(blank=True, null=True)
    cd_medico = models.IntegerField(blank=True, null=True)
    cd_unidade_usual = models.CharField(max_length=2)
    nu_frequencia = models.IntegerField(blank=True, null=True)
    qt_dieta = models.IntegerField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=120, blank=True, null=True)
    cd_tipo_acesso = models.IntegerField(blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    hr_inicio_uso = models.IntegerField(blank=True, null=True)
    cd_profissional_prescreve = models.IntegerField(blank=True, null=True)
    cd_profissional_valida = models.IntegerField(blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    fl_bomba_infusao = models.CharField(max_length=1, blank=True, null=True)
    qt_gotejamento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.IntegerField(blank=True, null=True)
    qt_tempo_gotej = models.IntegerField(blank=True, null=True)
    cd_unidade_gotej = models.CharField(max_length=2, blank=True, null=True)
    fl_rotina_rg = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.IntegerField(blank=True, null=True)
    dt_hr_suspensao = models.DateField(blank=True, null=True)
    fl_enterofix = models.CharField(max_length=1, blank=True, null=True)
    fl_equipo_bomba = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dieta_paciente_agd'


class TbDietaPacienteModelo(models.Model):
    cd_modelo = models.ForeignKey('TbPrescricaoMedicaModelo', models.DO_NOTHING, db_column='cd_modelo', primary_key=True)
    cd_ordem_dieta = models.IntegerField()
    cd_dieta = models.ForeignKey(TbDieta, models.DO_NOTHING, db_column='cd_dieta')
    dt_prescricao_dieta = models.DateField(blank=True, null=True)
    dt_inicial = models.DateField(blank=True, null=True)
    dt_final = models.DateField(blank=True, null=True)
    cd_medico = models.IntegerField(blank=True, null=True)
    cd_unidade_usual = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_usual')
    nu_frequencia = models.IntegerField(blank=True, null=True)
    qt_dieta = models.IntegerField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=120, blank=True, null=True)
    cd_tipo_acesso = models.ForeignKey('TbTipoAcesso', models.DO_NOTHING, db_column='cd_tipo_acesso', blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    hr_inicio_uso = models.IntegerField(blank=True, null=True)
    cd_profissional_prescreve = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_prescreve', blank=True, null=True)
    cd_profissional_valida = models.IntegerField(blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    fl_bomba_infusao = models.CharField(max_length=1, blank=True, null=True)
    qt_gotejamento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.ForeignKey('TbGotejamento', models.DO_NOTHING, db_column='cd_gotejamento', blank=True, null=True)
    qt_tempo_gotej = models.IntegerField(blank=True, null=True)
    cd_unidade_gotej = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_gotej', blank=True, null=True)
    fl_rotina_rg = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.IntegerField(blank=True, null=True)
    dt_hr_suspensao = models.DateField(blank=True, null=True)
    fl_enterofix = models.CharField(max_length=1, blank=True, null=True)
    fl_equipo_bomba = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dieta_paciente_modelo'
        unique_together = (('cd_modelo', 'cd_ordem_dieta'),)


class TbDifAjusteRotatLote(models.Model):
    cd_ajuste_rotat_lote = models.FloatField(primary_key=True)
    cd_anomes = models.FloatField()
    cd_setor_controle = models.CharField(max_length=6)
    cd_material = models.FloatField()
    cd_ajuste = models.BigIntegerField()
    qt_contada = models.FloatField()
    vl_saldo = models.FloatField()
    cd_lote = models.CharField(max_length=20, blank=True, null=True)
    qt_lote = models.FloatField(blank=True, null=True)
    vl_saldo_lote = models.FloatField(blank=True, null=True)
    dt_validade = models.DateField(blank=True, null=True)
    dt_ajuste = models.DateField(blank=True, null=True)
    fl_controla_lote = models.CharField(max_length=1, blank=True, null=True)
    fl_validade = models.CharField(max_length=1, blank=True, null=True)
    fl_ajustado = models.CharField(max_length=1, blank=True, null=True)
    dt_ajuste_dif = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dif_ajuste_rotat_lote'


class TbDifAjusteRotativo(models.Model):
    cd_ajuste_rotativo = models.FloatField(primary_key=True)
    cd_anomes = models.FloatField()
    cd_setor_controle = models.CharField(max_length=6)
    cd_material = models.FloatField()
    cd_ajuste = models.BigIntegerField()
    qt_contada = models.FloatField()
    vl_saldo = models.FloatField()
    dt_validade = models.DateField(blank=True, null=True)
    dt_ajuste = models.DateField(blank=True, null=True)
    fl_controla_lote = models.CharField(max_length=1, blank=True, null=True)
    fl_validade = models.CharField(max_length=1, blank=True, null=True)
    fl_ajustado = models.CharField(max_length=1, blank=True, null=True)
    dt_ajuste_dif = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dif_ajuste_rotativo'


class TbDigitalDesafio(models.Model):
    id_sessao = models.CharField(primary_key=True, max_length=40)
    status = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_digital_desafio'


class TbDigitalMotivoAutoriza(models.Model):
    ds_motivo_autoriza = models.CharField(max_length=50)
    dt_autoriza = models.DateField()
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador')
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    fl_digital_pendente = models.CharField(max_length=1, blank=True, null=True)
    ds_justificativa = models.CharField(max_length=256, blank=True, null=True)
    nm_autorizador = models.CharField(max_length=10, blank=True, null=True)
    nm_liberador = models.CharField(max_length=10, blank=True, null=True)
    dt_liberacao = models.DateField(blank=True, null=True)
    fl_face_pendente = models.CharField(max_length=1, blank=True, null=True)
    ds_justificativa_liberacao = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_digital_motivo_autoriza'


class TbDigitalMotivoAutorizaExa(models.Model):
    ds_motivo_autoriza = models.CharField(max_length=50, blank=True, null=True)
    dt_autoriza = models.DateField(blank=True, null=True)
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador', blank=True, null=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    fl_digital_pendente = models.CharField(max_length=1, blank=True, null=True)
    ds_justificativa = models.CharField(max_length=256, blank=True, null=True)
    nm_autorizador = models.CharField(max_length=10, blank=True, null=True)
    nm_liberador = models.CharField(max_length=10, blank=True, null=True)
    dt_liberacao = models.DateField(blank=True, null=True)
    fl_face_pendente = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_digital_motivo_autoriza_exa'


class TbDigitalUsuarioHap(models.Model):
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador', primary_key=True)
    cd_dedo = models.IntegerField()
    template_digital = models.CharField(max_length=600)
    dt_inclusao = models.DateField(blank=True, null=True)
    ds_terminal = models.CharField(max_length=40, blank=True, null=True)
    nm_usuario = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_digital_usuario_hap'


class TbDivergenciaEntregaReq(models.Model):
    cd_requisicao = models.IntegerField(primary_key=True)
    cd_material = models.IntegerField()
    qt_liberada = models.FloatField(blank=True, null=True)
    qt_entregue = models.FloatField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_divergencia_entrega_req'
        unique_together = (('cd_requisicao', 'cd_material'),)


class TbDivergenciaEntregaTra(models.Model):
    cd_transferencia = models.IntegerField(primary_key=True)
    cd_material = models.IntegerField()
    cd_lote = models.CharField(max_length=20)
    dt_validade_lote = models.DateField(blank=True, null=True)
    qt_liberada = models.FloatField(blank=True, null=True)
    qt_entregue = models.FloatField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)
    fl_liberado = models.CharField(max_length=1, blank=True, null=True)
    cd_devolucao = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_divergencia_entrega_tra'
        unique_together = (('cd_transferencia', 'cd_material', 'cd_lote'),)


class TbDnc(models.Model):
    cd_dnc = models.IntegerField(primary_key=True)
    ds_dnc = models.CharField(max_length=240)
    tp_dnc = models.CharField(max_length=2)
    ds_obs = models.CharField(max_length=800, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dnc'
        unique_together = (('cd_dnc', 'tp_dnc'),)


class TbDncCid(models.Model):
    cd_cid = models.CharField(primary_key=True, max_length=4)
    cd_dnc = models.ForeignKey(TbDnc, models.DO_NOTHING, db_column='cd_dnc')
    tp_dnc = models.ForeignKey(TbDnc, models.DO_NOTHING, db_column='tp_dnc')
    ds_dnc = models.CharField(max_length=120, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dnc_cid'
        unique_together = (('cd_cid', 'cd_dnc', 'tp_dnc'),)


class TbDncPacientes(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_dnc_pacientes = models.IntegerField()
    cd_paciente = models.IntegerField(blank=True, null=True)
    nm_paciente = models.CharField(max_length=45)
    dt_atendimento = models.DateField(blank=True, null=True)
    hr_atendimento = models.IntegerField(blank=True, null=True)
    cid10 = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cid10')
    ds_cid10 = models.CharField(max_length=240)
    cd_tipo_cid_i = models.CharField(max_length=2)
    cd_tipo_cid_f = models.CharField(max_length=2, blank=True, null=True)
    cd_status = models.CharField(max_length=1, blank=True, null=True)
    ds_queixa_principal = models.CharField(max_length=1000, blank=True, null=True)
    ds_diagnostico = models.CharField(max_length=1000, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    nm_medico = models.CharField(max_length=45, blank=True, null=True)
    nm_setor = models.CharField(max_length=45, blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    nm_acomodacao = models.CharField(max_length=45, blank=True, null=True)
    ds_exames_fisicos = models.CharField(max_length=350, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dnc_pacientes'
        unique_together = (('cd_atendimento', 'cd_dnc_pacientes'),)


class TbDocProtJuri(models.Model):
    cd_doc_prot_juri = models.FloatField(primary_key=True)
    cd_tipo_doc_prot_juri = models.ForeignKey('TbTipoDocProtJuri', models.DO_NOTHING, db_column='cd_tipo_doc_prot_juri')
    ds_arquivo = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_doc_prot_juri'


class TbDocProtJuriAtendimento(models.Model):
    cd_doc_prot_juri_atendimento = models.FloatField(primary_key=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento')
    cd_doc_prot_juri = models.ForeignKey(TbDocProtJuri, models.DO_NOTHING, db_column='cd_doc_prot_juri')
    dt_doc_scaneado = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_doc_prot_juri_atendimento'


class TbDocProtJuriCaucao(models.Model):
    cd_doc_prot_juri_caucao = models.FloatField(primary_key=True)
    cd_atendimento = models.ForeignKey(TbChequeCaucao, models.DO_NOTHING, db_column='cd_atendimento')
    cd_ocorrencia = models.ForeignKey(TbChequeCaucao, models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey(TbChequeCaucao, models.DO_NOTHING, db_column='cd_ordem')
    cd_ordem_caucao = models.ForeignKey(TbChequeCaucao, models.DO_NOTHING, db_column='cd_ordem_caucao')
    cd_doc_prot_juri = models.ForeignKey(TbDocProtJuri, models.DO_NOTHING, db_column='cd_doc_prot_juri')
    dt_doc_scaneado = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_doc_prot_juri_caucao'


class TbDocProtJuriPaciente(models.Model):
    cd_doc_prot_juri_paciente = models.FloatField(primary_key=True)
    cd_paciente = models.FloatField()
    cd_doc_prot_juri = models.ForeignKey(TbDocProtJuri, models.DO_NOTHING, db_column='cd_doc_prot_juri')
    dt_doc_scaneado = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_doc_prot_juri_paciente'


class TbDocumentoAprazamento(models.Model):
    nu_aprazamento = models.FloatField(primary_key=True)
    nu_documento = models.ForeignKey('TbDocumentoProntuario', models.DO_NOTHING)
    dt_inicio = models.DateField(blank=True, null=True)
    hr_inicio = models.IntegerField(blank=True, null=True)
    dt_termino = models.DateField(blank=True, null=True)
    hr_termino = models.IntegerField(blank=True, null=True)
    ds_status = models.CharField(max_length=80, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_documento_aprazamento'


class TbDocumentoProntuario(models.Model):
    nu_documento_id = models.FloatField(primary_key=True)
    nu_documento_pai = models.ForeignKey('self', models.DO_NOTHING, db_column='nu_documento_pai', blank=True, null=True)
    cd_paciente = models.FloatField()
    cd_tipo_documento_prontuario = models.ForeignKey('TbTipoDocumentoProntuario', models.DO_NOTHING, db_column='cd_tipo_documento_prontuario')
    cd_organizacao_prontuario = models.ForeignKey('TbOrganizacaoProntuario', models.DO_NOTHING, db_column='cd_organizacao_prontuario')
    dt_documento = models.DateField()
    nm_operador = models.CharField(max_length=30)
    user_id = models.CharField(max_length=4000, blank=True, null=True)
    lb_documento = models.BinaryField(blank=True, null=True)
    id_ged = models.CharField(max_length=256, blank=True, null=True)
    ds_mime_types = models.CharField(max_length=80, blank=True, null=True)
    ds_status = models.CharField(max_length=80, blank=True, null=True)
    ds_observacao = models.CharField(max_length=4000, blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_formulario = models.FloatField(blank=True, null=True)
    dt_vigencia = models.DateField(blank=True, null=True)
    cd_profissional = models.FloatField(blank=True, null=True)
    hr_documento = models.IntegerField(blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    lb_fdf_fields = models.BinaryField(blank=True, null=True)
    lb_fdf_comments = models.BinaryField(blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    nm_relatorio = models.CharField(max_length=100, blank=True, null=True)
    ls_parametros = models.CharField(max_length=2000, blank=True, null=True)
    dt_regerado_pdf = models.DateField(blank=True, null=True)
    fl_verificado_pdf = models.CharField(max_length=10, blank=True, null=True)
    user_id_a1 = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_documento_prontuario'


class TbDocumentoProntuarioUser(models.Model):
    nu_documento_id = models.FloatField(primary_key=True)
    nu_documento_pai = models.FloatField(blank=True, null=True)
    cd_paciente = models.FloatField()
    cd_tipo_documento_prontuario = models.FloatField()
    cd_organizacao_prontuario = models.FloatField()
    dt_documento = models.DateField()
    id_ged = models.CharField(max_length=256, blank=True, null=True)
    ds_mime_types = models.CharField(max_length=80, blank=True, null=True)
    ds_status_documento = models.CharField(max_length=80, blank=True, null=True)
    ds_observacao = models.CharField(max_length=4000, blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    rowid_documento_prontuario = models.CharField(max_length=18, blank=True, null=True)
    rowid_pendencia_assinatura = models.CharField(max_length=18, blank=True, null=True)
    nu_pendencia_assinatura = models.FloatField()
    nm_operador = models.CharField(max_length=30)
    ds_operador = models.CharField(max_length=100, blank=True, null=True)
    ds_motivo_assinatura = models.TextField(blank=True, null=True)
    ds_local_assinatura = models.CharField(max_length=100, blank=True, null=True)
    cd_nivel = models.IntegerField(blank=True, null=True)
    ds_status_assinatura = models.CharField(max_length=80, blank=True, null=True)
    user_id = models.CharField(max_length=4000, blank=True, null=True)
    nm_paciente = models.CharField(max_length=45)
    user_id_a1 = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_documento_prontuario_user'
        unique_together = (('nu_documento_id', 'nm_operador'),)


class TbDominioHemodinamica(models.Model):
    cd_tipo = models.CharField(max_length=2)
    ds_tipo = models.CharField(max_length=45)
    cd_referencia = models.CharField(max_length=5)
    ds_abr_referencia = models.CharField(max_length=10)
    ds_referencia = models.CharField(max_length=45)
    cd_ordem = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_dominio_hemodinamica'


class TbEcgLiberado(models.Model):
    cd_atendimento = models.FloatField(primary_key=True)
    cd_ocorrencia = models.FloatField()
    cd_ordem = models.FloatField()
    dt_liberao = models.DateField(blank=True, null=True)
    nm_operador_liberacao = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ecg_liberado'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem'),)


class TbEcgResultado(models.Model):
    nu_accessionumber = models.CharField(primary_key=True, max_length=50)
    fl_alterado = models.CharField(max_length=1)
    dt_processamento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ecg_resultado'


class TbEdicaoBrasindice(models.Model):
    cd_edicao = models.IntegerField(primary_key=True)
    dt_vigencia = models.DateField()
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_edicao_brasindice'


class TbElegibilidadePrototipo(models.Model):
    cd_solicitacao = models.FloatField(primary_key=True)
    nu_carteira_convenio = models.CharField(max_length=14, blank=True, null=True)
    cd_local_atendimento = models.ForeignKey('TbLocalAtendimentoSa', models.DO_NOTHING, db_column='cd_local_atendimento', blank=True, null=True)
    dt_cadastro = models.DateField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    dt_abertura_atd = models.DateField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nm_maquina = models.CharField(max_length=40, blank=True, null=True)
    nu_ramal = models.FloatField(blank=True, null=True)
    cd_pessoa = models.FloatField(blank=True, null=True)
    cd_senha_master = models.FloatField(blank=True, null=True)
    dt_cad_finalizado = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_elegibilidade_prototipo'


class TbEmissaoAutoConta(models.Model):
    cd_sequencia = models.IntegerField(primary_key=True)
    cd_empresa_cobra = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_empresa_cobra')
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio')
    dt_inicial = models.DateField()
    dt_final = models.DateField()
    cd_tipo_geracao_conta = models.IntegerField()
    vl_minimo_conta = models.DecimalField(max_digits=12, decimal_places=2)
    cd_atendimento_inicial = models.IntegerField()
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)
    cd_convenio_final = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_emissao_auto_conta'


class TbEmissaoCheque(models.Model):
    cd_movimento_conta = models.FloatField(primary_key=True)
    dt_emissao = models.DateField()
    fl_emissao = models.NullBooleanField()
    cd_usuario = models.FloatField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_lancamento = models.DateField(blank=True, null=True)
    cd_cheque = models.FloatField(blank=True, null=True)
    nm_portador = models.CharField(max_length=45, blank=True, null=True)
    cd_serie_cheque = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_emissao_cheque'


class TbEmpresaOrganizacao(models.Model):
    cd_empresa_organizacao = models.CharField(primary_key=True, max_length=3)
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa', blank=True, null=True)
    nm_logotipo_empresa = models.CharField(max_length=15)
    fl_desconta_iss = models.CharField(max_length=1, blank=True, null=True)
    fl_desconta_taxa_adm = models.CharField(max_length=1, blank=True, null=True)
    fl_desconta_ir = models.CharField(max_length=1, blank=True, null=True)
    pc_margem_comercial_med = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_margem_comercial_mat = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    fl_tipo_empresa = models.CharField(max_length=1, blank=True, null=True)
    cd_emp_hapvida = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_empresa_organizacao'


class TbEmpresaRast(models.Model):
    cd_empresa_rast = models.IntegerField(primary_key=True)
    nm_empresa = models.CharField(max_length=45)
    nu_cnpj = models.CharField(max_length=20, blank=True, null=True)
    nr_fone_empresa = models.CharField(max_length=20, blank=True, null=True)
    ds_email = models.CharField(max_length=30, blank=True, null=True)
    fl_ativo = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_empresa_rast'


class TbEmpresaRel(models.Model):
    cd_empresa = models.IntegerField(primary_key=True)
    nm_empresa_rel = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_empresa_rel'


class TbEmprestimoTroca(models.Model):
    nu_protocolo = models.IntegerField(primary_key=True)
    cd_setor_origem = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_destino = models.CharField(max_length=6, blank=True, null=True)
    cd_usuario_origem = models.CharField(max_length=10, blank=True, null=True)
    cd_usuario_destino = models.CharField(max_length=10, blank=True, null=True)
    nm_usuario_destino = models.CharField(max_length=35, blank=True, null=True)
    dt_emprestimo = models.DateField(blank=True, null=True)
    dt_devolucao = models.DateField(blank=True, null=True)
    dt_troca = models.DateField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    ds_observacao = models.CharField(max_length=200, blank=True, null=True)
    fl_situacao = models.CharField(max_length=1, blank=True, null=True)
    cd_fornec_origem = models.FloatField(blank=True, null=True)
    cd_fornec_destino = models.FloatField(blank=True, null=True)
    ds_observacao_dev = models.CharField(max_length=200, blank=True, null=True)
    ds_observacao_troca = models.CharField(max_length=200, blank=True, null=True)
    nm_usuario_origem = models.CharField(max_length=35, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    fl_tipo = models.CharField(max_length=1, blank=True, null=True)
    nu_protocolo_refer = models.IntegerField(blank=True, null=True)
    nm_usuario_autorizador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_usuario_autorizador', blank=True, null=True)
    dt_autorizacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_emprestimo_troca'


class TbEncaminhaAmb(models.Model):
    cd_encaminha = models.IntegerField(primary_key=True)
    nm_encaminha = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_encaminha_amb'


class TbEncaminhaInternacao(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    nu_guia_internacao = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_encaminha_internacao'


class TbEnderecoEletronicoBoleto(models.Model):
    cd_usuario = models.CharField(primary_key=True, max_length=14)
    ds_endereco_eletronico = models.CharField(max_length=60, blank=True, null=True)
    dt_cadastro = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_endereco_eletronico_boleto'


class TbEnderecoEletronicoPessoa(models.Model):
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa')
    ds_endereco_eletronico = models.CharField(max_length=60)
    cd_endereco_correspondencia = models.IntegerField()
    fl_tipo_mensagem = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_endereco_eletronico_pessoa'


class TbEnderecoPessoa(models.Model):
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa', primary_key=True)
    nu_endereco = models.IntegerField(blank=True, null=True)
    cd_cep_endereco = models.CharField(max_length=8, blank=True, null=True)
    nm_cidade_endereco = models.ForeignKey(TbCepLocalidade, models.DO_NOTHING, db_column='nm_cidade_endereco', blank=True, null=True)
    cd_uf_endereco = models.ForeignKey(TbCepLocalidade, models.DO_NOTHING, db_column='cd_uf_endereco', blank=True, null=True)
    cd_tipo_logradouro = models.ForeignKey('TbTipoLogradouro', models.DO_NOTHING, db_column='cd_tipo_logradouro', blank=True, null=True)
    nm_rua_endereco = models.CharField(max_length=60, blank=True, null=True)
    nm_bairro_endereco = models.CharField(max_length=60, blank=True, null=True)
    ds_compl_enderero = models.CharField(max_length=60, blank=True, null=True)
    fl_tipo_endereco = models.CharField(max_length=1)
    fl_ender_cobranca = models.CharField(max_length=1, blank=True, null=True)
    nu_telefone = models.CharField(max_length=10, blank=True, null=True)
    nu_ramal = models.CharField(max_length=4, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_endereco_pessoa'
        unique_together = (('cd_pessoa', 'fl_tipo_endereco'),)


class TbEnderecoSetor(models.Model):
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', primary_key=True)
    nu_endereco = models.IntegerField(blank=True, null=True)
    cd_cep_endereco = models.CharField(max_length=8, blank=True, null=True)
    nm_cidade_endereco = models.ForeignKey(TbCepLocalidade, models.DO_NOTHING, db_column='nm_cidade_endereco', blank=True, null=True)
    cd_uf_endereco = models.ForeignKey(TbCepLocalidade, models.DO_NOTHING, db_column='cd_uf_endereco', blank=True, null=True)
    cd_tipo_logradouro = models.ForeignKey('TbTipoLogradouro', models.DO_NOTHING, db_column='cd_tipo_logradouro', blank=True, null=True)
    nm_rua_endereco = models.CharField(max_length=60, blank=True, null=True)
    nm_bairro_endereco = models.CharField(max_length=60, blank=True, null=True)
    ds_compl_enderero = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_endereco_setor'


class TbEnvioEmailAutorizacao(models.Model):
    cd_envio_email_autorizacao = models.FloatField(primary_key=True)
    cd_atendimento = models.FloatField(unique=True)
    cd_setor = models.FloatField()
    ds_assunto = models.CharField(max_length=100)
    dt_envio = models.DateField(blank=True, null=True)
    ds_corpo_envio = models.CharField(max_length=1000, blank=True, null=True)
    dt_recebimento = models.DateField(blank=True, null=True)
    ds_corpo_recebimento = models.CharField(max_length=1000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_envio_email_autorizacao'


class TbEnvioOncologia(models.Model):
    cd_paciente = models.IntegerField(primary_key=True)
    cd_ordem = models.IntegerField()
    cd_modelo_cotacao = models.IntegerField(blank=True, null=True)
    dt_geracao = models.DateField()
    cd_mat_med = models.IntegerField()
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qt_sugerida = models.IntegerField(blank=True, null=True)
    qt_material = models.IntegerField()
    cd_transferencia = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=15, blank=True, null=True)
    cd_operador_alterou = models.CharField(max_length=15, blank=True, null=True)
    cd_operador_trasferiu = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_envio_oncologia'
        unique_together = (('cd_paciente', 'cd_ordem', 'dt_geracao', 'cd_mat_med', 'qt_material'),)


class TbEquipamentoLaboratorio(models.Model):
    cd_serial = models.CharField(primary_key=True, max_length=20)
    nm_equipamento = models.CharField(max_length=60)
    ds_equipamento = models.CharField(max_length=120, blank=True, null=True)
    nm_fornecedor = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_equipamento_laboratorio'


class TbEquipeProcedimentoAns(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans')
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_seq_registro = models.FloatField(blank=True, null=True)
    nu_registro_ans = models.CharField(max_length=6)
    nu_cgc_cpf_executante = models.CharField(max_length=14)
    nu_cnes_executante = models.CharField(max_length=7, blank=True, null=True)
    nu_guia = models.CharField(max_length=20, blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8)
    nu_seq_procedimento = models.CharField(max_length=2)
    cd_grau_participacao = models.CharField(max_length=2)
    nu_cpf_profissonal = models.CharField(max_length=14)
    nm_profissional = models.CharField(max_length=70)
    cd_conselho_prof = models.CharField(max_length=7)
    nu_conselho = models.CharField(max_length=15)
    cd_uf_conselho = models.CharField(max_length=2)
    nu_cpf_prof_participante = models.CharField(max_length=11, blank=True, null=True)
    vl_honorario = models.FloatField(blank=True, null=True)
    cd_tipo_prof = models.CharField(max_length=8, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_equipe_procedimento_ans'


class TbEquipeResumoIntAns(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans')
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_seq_registro = models.FloatField(blank=True, null=True)
    nu_registro_ans = models.CharField(max_length=6)
    nu_guia = models.CharField(max_length=20, blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8)
    nu_seq_procedimento = models.CharField(max_length=2)
    cd_grau_participacao = models.CharField(max_length=2)
    nu_cpf_profissonal = models.CharField(max_length=14)
    nm_profissional = models.CharField(max_length=70)
    cd_conselho_prof = models.CharField(max_length=7)
    nu_conselho = models.CharField(max_length=15)
    cd_uf_conselho = models.CharField(max_length=2)
    nu_cpf_prof_participante = models.CharField(max_length=11, blank=True, null=True)
    vl_honorario = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_equipe_resumo_int_ans'


class TbErro(models.Model):
    cd_erro = models.FloatField(primary_key=True)
    ds_erro = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_erro'


class TbErroInterfaceamento(models.Model):
    dt_erro = models.DateField(blank=True, null=True)
    ds_objeto = models.CharField(max_length=100, blank=True, null=True)
    cd_erro = models.CharField(max_length=3, blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    ds_erro = models.CharField(max_length=250, blank=True, null=True)
    ds_sqlerro = models.CharField(max_length=500, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_erro_interfaceamento'


class TbErroOperacao(models.Model):
    cd_erro = models.CharField(primary_key=True, max_length=5)
    ds_erro = models.CharField(max_length=45)
    cd_severidade = models.BooleanField()

    class Meta:
        managed = False
        db_table = 'tb_erro_operacao'


class TbErroPagamentoOperadora(models.Model):
    cd_operadora_saude = models.FloatField(primary_key=True)
    cd_glosa = models.FloatField()
    ds_glosa = models.CharField(max_length=45, blank=True, null=True)
    fl_nivel_glosa = models.CharField(max_length=1, blank=True, null=True)
    ds_glosa_explica = models.CharField(max_length=200, blank=True, null=True)
    ds_glosa_revisao = models.CharField(max_length=200, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_erro_pagamento_operadora'
        unique_together = (('cd_operadora_saude', 'cd_glosa'),)


class TbEscalaHotelaria(models.Model):
    cd_escala_hotelaria = models.FloatField(primary_key=True)
    nr_ano_mes = models.CharField(max_length=6)
    cd_tipo_escala = models.ForeignKey('TbTipoEscala', models.DO_NOTHING, db_column='cd_tipo_escala')
    cd_filial = models.ForeignKey('TbFilial', models.DO_NOTHING, db_column='cd_filial')
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_inclusao = models.DateField(blank=True, null=True)
    dt_ult_alteracao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_escala_hotelaria'
        unique_together = (('nr_ano_mes', 'cd_tipo_escala', 'cd_filial'),)


class TbEscalaMedicoFilial(models.Model):
    cd_filial = models.ForeignKey('TbEscalaVidaImagemFilial', models.DO_NOTHING, db_column='cd_filial', blank=True, null=True)
    cd_escala = models.ForeignKey('TbEscalaVidaImagemFilial', models.DO_NOTHING, db_column='cd_escala', blank=True, null=True)
    cd_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cd_operador', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_escala_medico_filial'


class TbEscalaVidaImagemFilial(models.Model):
    cd_filial = models.CharField(primary_key=True, max_length=3)
    cd_escala = models.FloatField()
    ds_scala = models.CharField(max_length=300, blank=True, null=True)
    cd_operador_criador = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_escala_vida_imagem_filial'
        unique_together = (('cd_filial', 'cd_escala'),)


class TbEscolaridade(models.Model):
    cd_escolaridade = models.IntegerField(primary_key=True)
    ds_escolaridade = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_escolaridade'


class TbEspecProfSiasus(models.Model):
    cd_prof_siasus = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_prof_siasus', primary_key=True)
    cd_espec_prof_siasus = models.ForeignKey('TbEspecialidade', models.DO_NOTHING, db_column='cd_espec_prof_siasus')

    class Meta:
        managed = False
        db_table = 'tb_espec_prof_siasus'
        unique_together = (('cd_prof_siasus', 'cd_espec_prof_siasus'),)


class TbEspecProfSihsus(models.Model):
    cd_prof_sihsus = models.ForeignKey('TbProfissionalSus', models.DO_NOTHING, db_column='cd_prof_sihsus', primary_key=True)
    cd_tipo_profissional = models.ForeignKey('TbProfissionalSus', models.DO_NOTHING, db_column='cd_tipo_profissional')
    cd_espec_prof_sihsus = models.ForeignKey('TbEspecialidade', models.DO_NOTHING, db_column='cd_espec_prof_sihsus')

    class Meta:
        managed = False
        db_table = 'tb_espec_prof_sihsus'
        unique_together = (('cd_prof_sihsus', 'cd_tipo_profissional', 'cd_espec_prof_sihsus'),)


class TbEspecialSus(models.Model):
    cd_especial = models.BooleanField(primary_key=True)
    nm_especial = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_especial_sus'


class TbEspecialidade(models.Model):
    cd_especialidade = models.IntegerField(primary_key=True)
    nm_especialidade = models.CharField(max_length=45)
    cd_especialidade_hapvida = models.IntegerField(blank=True, null=True)
    cd_clinica = models.ForeignKey(TbClinica, models.DO_NOTHING, db_column='cd_clinica', blank=True, null=True)
    fl_cirurgico = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_especialidade'


class TbEspecialidadeDetalhe(models.Model):
    cd_especialidade = models.ForeignKey(TbEspecialidade, models.DO_NOTHING, db_column='cd_especialidade', primary_key=True)
    cd_especialidade_detalhe = models.IntegerField()
    ds_especialidade_detalhe = models.CharField(max_length=200, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_especialidade_detalhe'
        unique_together = (('cd_especialidade', 'cd_especialidade_detalhe'),)


class TbEspecialidadeProfissional(models.Model):
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional', primary_key=True)
    cd_especialidade = models.ForeignKey(TbEspecialidade, models.DO_NOTHING, db_column='cd_especialidade')
    fl_esp_principal = models.CharField(max_length=1, blank=True, null=True)
    fl_lauda_ecg = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_especialidade_profissional'
        unique_together = (('cd_profissional', 'cd_especialidade'),)


class TbEspecieNota(models.Model):
    cd_especie_nota = models.CharField(primary_key=True, max_length=5)
    nm_especie_nota = models.CharField(max_length=45, blank=True, null=True)
    fl_especie_nota = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_especie_nota'


class TbEspecieTitulo(models.Model):
    cd_especie_titulo = models.IntegerField(primary_key=True)
    nm_especie_titulo = models.CharField(max_length=45)
    cod_tipo_doc = models.CharField(max_length=5, blank=True, null=True)
    fl_valido = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_especie_titulo'


class TbEspecieTituloCart(models.Model):
    cd_carteira = models.ForeignKey(TbCarteiraBanco, models.DO_NOTHING, db_column='cd_carteira', primary_key=True)
    cd_especie_titulo = models.ForeignKey(TbEspecieTitulo, models.DO_NOTHING, db_column='cd_especie_titulo')
    cd_especie_titulo_cart = models.CharField(max_length=10)
    cd_prefixo_titulo = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_especie_titulo_cart'
        unique_together = (('cd_carteira', 'cd_especie_titulo'),)


class TbEspecimeMicrobiologico(models.Model):
    cd_especime = models.FloatField()
    ds_especime = models.CharField(max_length=120, blank=True, null=True)
    ds_grupo_especime = models.CharField(max_length=120, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_especime_microbiologico'


class TbEstabilidadeDiluicao(models.Model):
    cd_principio_ativo = models.ForeignKey(TbAdministracaoDiluicao, models.DO_NOTHING, db_column='cd_principio_ativo')
    cd_ocorrencia_diluicao = models.ForeignKey(TbAdministracaoDiluicao, models.DO_NOTHING, db_column='cd_ocorrencia_diluicao')
    cd_ordem_administracao = models.ForeignKey(TbAdministracaoDiluicao, models.DO_NOTHING, db_column='cd_ordem_administracao', primary_key=True)
    cd_tipo_estabilidade = models.ForeignKey('TbTipoEstabilidade', models.DO_NOTHING, db_column='cd_tipo_estabilidade')
    nu_tempo_ambiente = models.IntegerField(blank=True, null=True)
    fl_tempo_ambiente = models.CharField(max_length=2, blank=True, null=True)
    fl_reconstituir_diluicao = models.CharField(max_length=2, blank=True, null=True)
    nu_tempo_geladeira = models.IntegerField(blank=True, null=True)
    fl_tempo_geladeira = models.CharField(max_length=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_estabilidade_diluicao'
        unique_together = (('cd_ordem_administracao', 'cd_ocorrencia_diluicao', 'cd_principio_ativo', 'cd_tipo_estabilidade'),)


class TbEstadoCivil(models.Model):
    cd_estado_civil = models.IntegerField(primary_key=True)
    ds_estado_civil = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_estado_civil'


class TbEstadoFisico(models.Model):
    cd_estado_fisico = models.IntegerField(primary_key=True)
    nm_estado_fisico = models.CharField(max_length=240)

    class Meta:
        managed = False
        db_table = 'tb_estado_fisico'


class TbEstadoPaciente(models.Model):
    cd_estado_paciente = models.IntegerField(primary_key=True)
    nm_estado_paciente = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'tb_estado_paciente'


class TbEstoqFinOncoHist(models.Model):
    cd_material = models.IntegerField(primary_key=True)
    cd_setor_controle = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_controle')
    anomes = models.CharField(max_length=6)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    nm_material = models.CharField(max_length=45, blank=True, null=True)
    qt_estoque_final = models.FloatField(blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_unid = models.FloatField(blank=True, null=True)
    prc_mat_med_unid = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_estoq_fin_onco_hist'


class TbEstoqIniOncoHist(models.Model):
    cd_material = models.IntegerField(primary_key=True)
    cd_setor_controle = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_controle')
    anomes = models.CharField(max_length=6)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    nm_material = models.CharField(max_length=45, blank=True, null=True)
    qt_estoque_inicial = models.FloatField(blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_unid = models.FloatField(blank=True, null=True)
    prc_mat_med_unid = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_estoq_ini_onco_hist'


class TbEstoqueArea(models.Model):
    cd_area = models.IntegerField(primary_key=True)
    ds_area = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_estoque_area'


class TbEstoqueEnderecamento(models.Model):
    cd_material = models.FloatField(primary_key=True)
    cd_setor_controle = models.CharField(max_length=6)
    cd_ocorrencia = models.FloatField()
    cd_local_endereco = models.ForeignKey('TbLocalEndereco', models.DO_NOTHING, db_column='cd_local_endereco')
    ds_observacao = models.CharField(max_length=1000, blank=True, null=True)
    nm_operador = models.CharField(max_length=30)
    dt_cadastro = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_estoque_enderecamento'
        unique_together = (('cd_material', 'cd_setor_controle', 'cd_ocorrencia'),)


class TbEstoqueMensalTemp(models.Model):
    nm_operador = models.CharField(primary_key=True, max_length=15)
    cd_material = models.FloatField()
    cd_setor_controle = models.CharField(max_length=6)
    anomes = models.CharField(max_length=6)
    qt_estoque_inicial = models.FloatField(blank=True, null=True)
    qt_entrada_notas = models.FloatField(blank=True, null=True)
    qt_saida_emprestimo = models.FloatField(blank=True, null=True)
    qt_perdas = models.FloatField(blank=True, null=True)
    qt_saidas_req = models.FloatField(blank=True, null=True)
    qt_saidas = models.FloatField(blank=True, null=True)
    qt_devolucoes = models.FloatField(blank=True, null=True)
    qt_entrada_emprestimo = models.FloatField(blank=True, null=True)
    qt_entrada_tranf = models.FloatField(blank=True, null=True)
    qt_transf_cred = models.FloatField(blank=True, null=True)
    qt_ajustes = models.FloatField(blank=True, null=True)
    qt_estoque_final = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_estoque_mensal_temp'
        unique_together = (('nm_operador', 'cd_material', 'cd_setor_controle', 'anomes'),)


class TbEstoqueOncologia(models.Model):
    seq = models.IntegerField(primary_key=True)
    cd_paciente = models.IntegerField(blank=True, null=True)
    nm_paciente = models.CharField(max_length=55, blank=True, null=True)
    cd_mat_med = models.IntegerField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    fl_tipo = models.CharField(max_length=1, blank=True, null=True)
    qt_material = models.IntegerField(blank=True, null=True)
    dt_geracao = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=15, blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    cd_requisicao = models.IntegerField(blank=True, null=True)
    nu_comanda = models.CharField(max_length=8, blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_ordem_cmd = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_estoque_oncologia'


class TbEtiqueta(models.Model):
    cd_etiqueta = models.IntegerField(primary_key=True)
    nm_etiqueta = models.CharField(max_length=45, blank=True, null=True)
    ds_etiqueta = models.CharField(max_length=255, blank=True, null=True)
    nm_documento = models.CharField(max_length=45, blank=True, null=True)
    bl_arquivo = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_etiqueta'


class TbEtiquetaComando(models.Model):
    cd_etiqueta = models.ForeignKey(TbEtiqueta, models.DO_NOTHING, db_column='cd_etiqueta', primary_key=True)
    cd_comando = models.CharField(max_length=5, blank=True, null=True)
    cd_ordem = models.FloatField()
    p1 = models.CharField(max_length=5, blank=True, null=True)
    p2 = models.CharField(max_length=5, blank=True, null=True)
    p3 = models.CharField(max_length=5, blank=True, null=True)
    p4 = models.CharField(max_length=5, blank=True, null=True)
    p5 = models.CharField(max_length=5, blank=True, null=True)
    p6 = models.CharField(max_length=5, blank=True, null=True)
    p7 = models.CharField(max_length=5, blank=True, null=True)
    p8 = models.CharField(max_length=5, blank=True, null=True)
    ds_prompt = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_etiqueta_comando'
        unique_together = (('cd_etiqueta', 'cd_ordem'),)


class TbEtiquetaFrasco(models.Model):
    cd_grupo_frasco = models.ForeignKey('TbGrupoFrasco', models.DO_NOTHING, db_column='cd_grupo_frasco', primary_key=True)
    cd_ordem = models.IntegerField()
    nm_label = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'tb_etiqueta_frasco'
        unique_together = (('cd_grupo_frasco', 'cd_ordem'),)


class TbEtiquetaViProcedimento(models.Model):
    cd_procedimento = models.CharField(primary_key=True, max_length=8)

    class Meta:
        managed = False
        db_table = 'tb_etiqueta_vi_procedimento'


class TbEtiquetaViUnidade(models.Model):
    cd_unidade_atendimento = models.CharField(max_length=3)
    dt_operacao = models.DateField()
    nm_operador = models.CharField(max_length=10)
    dt_inicio = models.DateField(blank=True, null=True)
    fl_t7251 = models.CharField(max_length=1, blank=True, null=True)
    fl_t7252 = models.CharField(max_length=1, blank=True, null=True)
    fl_t7254 = models.CharField(max_length=1, blank=True, null=True)
    cd_etiqueta = models.ForeignKey(TbEtiqueta, models.DO_NOTHING, db_column='cd_etiqueta', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_etiqueta_vi_unidade'


class TbEtniaIndigena(models.Model):
    cd_etnia = models.IntegerField(primary_key=True)
    ds_etnia = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_etnia_indigena'


class TbEventoHospOcorrencia(models.Model):
    cd_solicitacao = models.ForeignKey('TbSolicCentralServicos', models.DO_NOTHING, db_column='cd_solicitacao', primary_key=True)
    id_evento_hosp = models.ForeignKey('TbEventoHospitalar', models.DO_NOTHING, db_column='id_evento_hosp')
    cd_ocorrencia = models.IntegerField()
    dt_ocorrencia = models.DateField(blank=True, null=True)
    ds_relato = models.CharField(max_length=2000, blank=True, null=True)
    fl_status_novo = models.CharField(max_length=1, blank=True, null=True)
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador', blank=True, null=True)
    fl_envio_automatico_email = models.CharField(max_length=1, blank=True, null=True)
    cd_tipo_solicitacao = models.IntegerField(blank=True, null=True)
    cd_mnemonico = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_evento_hosp_ocorrencia'
        unique_together = (('cd_solicitacao', 'id_evento_hosp', 'cd_ocorrencia'),)


class TbEventoHospitalar(models.Model):
    id_evento_hosp = models.BigIntegerField(primary_key=True)
    dt_evento = models.DateField(blank=True, null=True)
    nm_operador_solicitante = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador_solicitante', blank=True, null=True)
    ds_operador_solicitante = models.CharField(max_length=100, blank=True, null=True)
    cd_setor_solicitante = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_solicitante', blank=True, null=True)
    cd_acomodacao = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_acomodacao', blank=True, null=True)
    cd_local_atendimento = models.ForeignKey('TbPontoOperadorAtendSa', models.DO_NOTHING, db_column='cd_local_atendimento', blank=True, null=True)
    cd_ponto_atendimento = models.ForeignKey('TbPontoOperadorAtendSa', models.DO_NOTHING, db_column='cd_ponto_atendimento', blank=True, null=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    cd_filial = models.ForeignKey('TbFilial', models.DO_NOTHING, db_column='cd_filial', blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    nm_complemento_origem = models.CharField(max_length=2000, blank=True, null=True)
    cd_pre_autorizacao = models.FloatField(blank=True, null=True)
    cd_senha = models.CharField(max_length=20, blank=True, null=True)
    cd_posto_ocupacao = models.CharField(max_length=6, blank=True, null=True)
    cd_acomodacao_ocupacao = models.CharField(max_length=6, blank=True, null=True)
    nu_leito_ocupacao = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_evento_hospitalar'


class TbEventoMonitorHosp(models.Model):
    cd_evento_monitor_hosp = models.IntegerField(primary_key=True)
    nm_evento_monitor_hosp = models.CharField(max_length=60)
    nn_resultado_padrao = models.CharField(max_length=30)
    fl_tipo_resultado_padrao = models.CharField(max_length=1)
    cd_unidade = models.CharField(max_length=2)
    cd_condicao_fora_padrao = models.CharField(max_length=1)
    nu_tempo_disparo = models.IntegerField()
    nm_unidade_tempo_disparo = models.CharField(max_length=1)
    cd_operador = models.CharField(max_length=20)
    dt_atualizacao = models.DateField()
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)
    fl_baixa_automatica = models.CharField(max_length=1, blank=True, null=True)
    hr_baixa_automatica = models.IntegerField(blank=True, null=True)
    cd_cor = models.CharField(max_length=20, blank=True, null=True)
    hr_disparo = models.IntegerField(blank=True, null=True)
    fl_painel = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_evento_monitor_hosp'


class TbEventosTmp(models.Model):
    cd_filial = models.CharField(max_length=3)
    cd_tipo_evento = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    ds_evento_padrao = models.CharField(max_length=200, blank=True, null=True)
    dt_coluna1 = models.DateField(blank=True, null=True)
    qt_tempo_coluna1 = models.FloatField(blank=True, null=True)
    dt_coluna2 = models.DateField(blank=True, null=True)
    qt_tempo_coluna2 = models.FloatField(blank=True, null=True)
    dt_coluna3 = models.DateField(blank=True, null=True)
    qt_tempo_coluna3 = models.FloatField(blank=True, null=True)
    dt_coluna4 = models.DateField(blank=True, null=True)
    qt_tempo_coluna4 = models.FloatField(blank=True, null=True)
    dt_coluna5 = models.DateField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_eventos_tmp'


class TbEvolucao(models.Model):
    cd_atendimento = models.ForeignKey('TbPlanoTratUsoOcorrencia', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPlanoTratUsoOcorrencia', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem = models.IntegerField()
    nu_evolucao = models.IntegerField(unique=True)
    dt_evolucao = models.DateField()
    hr_evolucao = models.IntegerField()
    fl_evolucao = models.CharField(max_length=1)
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional', blank=True, null=True)
    ds_observacao = models.TextField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_valida = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_profissional_valida', blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    fl_imprimiu_evolucao = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_imprimiu = models.IntegerField(blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    dt_cancela = models.DateField(blank=True, null=True)
    nu_documento = models.ForeignKey(TbDocumentoProntuario, models.DO_NOTHING, blank=True, null=True)
    ds_justificativa_reg_ant = models.CharField(max_length=1000, blank=True, null=True)
    dt_justificativa_reg_ant = models.DateField(blank=True, null=True)
    cd_ordem_plano_trat = models.ForeignKey('TbPlanoTratUsoOcorrencia', models.DO_NOTHING, db_column='cd_ordem_plano_trat', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_evolucao'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem'),)


class TbEvolucaoAvaliacao(models.Model):
    cd_atendimento = models.ForeignKey(TbEvolucao, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey(TbEvolucao, models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem = models.ForeignKey(TbEvolucao, models.DO_NOTHING, db_column='cd_ordem')
    cd_ordem_avaliacao = models.BigIntegerField()
    cd_avaliacao = models.ForeignKey(TbAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao')
    dt_evolucao_avaliacao = models.DateField()
    hr_evolucao_avaliacao = models.IntegerField()
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    ds_observacao = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_evolucao_avaliacao'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem', 'cd_ordem_avaliacao'),)


class TbEvolucaoEstado(models.Model):
    cd_ocorrencia = models.IntegerField()
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_estado = models.ForeignKey(TbEstadoPaciente, models.DO_NOTHING, db_column='cd_estado', blank=True, null=True)
    dt_evolucao = models.DateField()
    hr_evolucao = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_evolucao_estado'
        unique_together = (('cd_atendimento', 'cd_ocorrencia'),)


class TbEvolucaoGravidez(models.Model):
    cd_atendimento = models.ForeignKey(TbDadosGinecoObstetrico, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    dt_atendimento = models.DateField()
    cd_sintomas = models.ForeignKey('TbSintomasGravidez', models.DO_NOTHING, db_column='cd_sintomas', blank=True, null=True)
    fl_movimento_fetal = models.CharField(max_length=1, blank=True, null=True)
    nu_mes_movim_fetal = models.IntegerField(blank=True, null=True)
    nu_diametro_barriga = models.IntegerField(blank=True, null=True)
    nu_peso_gestante = models.IntegerField(blank=True, null=True)
    ds_observacoes = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_evolucao_gravidez'
        unique_together = (('cd_atendimento', 'dt_atendimento'),)


class TbEvolucaoPaciente(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    dt_evolucao = models.DateField()
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)
    hr_evolucao = models.IntegerField()
    nm_operador = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'tb_evolucao_paciente'
        unique_together = (('cd_atendimento', 'dt_evolucao', 'hr_evolucao', 'nm_operador'),)


class TbEvolucaoProtocoloCompat(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem = models.IntegerField()
    cd_ordem_protocolo = models.IntegerField()
    nu_evolucao = models.IntegerField()
    dt_abertura_protocolo = models.DateField()
    hr_abertura_protocolo = models.FloatField()
    cd_protocolo = models.CharField(max_length=10)
    ds_protocolo = models.CharField(max_length=500)
    ds_cid10 = models.CharField(max_length=4, blank=True, null=True)
    cd_avaliacao = models.IntegerField(blank=True, null=True)
    cd_regra = models.IntegerField(blank=True, null=True)
    tp_abertura = models.CharField(max_length=1)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_evolucao_protocolo_compat'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem', 'cd_ordem_protocolo'),)


class TbEvolucaoResultado(models.Model):
    cd_atendimento = models.ForeignKey(TbEvolucaoAvaliacao, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey(TbEvolucaoAvaliacao, models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem = models.ForeignKey(TbEvolucaoAvaliacao, models.DO_NOTHING, db_column='cd_ordem')
    cd_ordem_avaliacao = models.ForeignKey(TbEvolucaoAvaliacao, models.DO_NOTHING, db_column='cd_ordem_avaliacao')
    cd_ordem_resultado = models.IntegerField()
    cd_avaliacao = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_avaliacao')
    cd_nivel_avaliacao = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_item_ordem_avaliacao = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_item_ordem_avaliacao')
    ds_texto = models.CharField(max_length=4000, blank=True, null=True)
    ds_texto_livre = models.TextField(blank=True, null=True)
    ds_data = models.DateField(blank=True, null=True)
    ds_numero = models.DecimalField(max_digits=21, decimal_places=3, blank=True, null=True)
    ds_lista = models.CharField(max_length=4000, blank=True, null=True)
    ds_check = models.CharField(max_length=1, blank=True, null=True)
    ds_imagem = models.BinaryField(blank=True, null=True)
    ds_som = models.TextField(blank=True, null=True)  # This field type is a guess.
    ds_video = models.BinaryField(blank=True, null=True)
    ds_formula = models.CharField(max_length=2000, blank=True, null=True)
    fl_formula = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_atributo = models.CharField(max_length=20)
    fl_tipo_valor = models.CharField(max_length=20)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=240, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_unidade_usual = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_usual', blank=True, null=True)
    vl_formula = models.CharField(max_length=240, blank=True, null=True)
    ds_mutiplo_valor = models.TextField(blank=True, null=True)
    ds_descritivo_codigo_resultado = models.CharField(max_length=400, blank=True, null=True)
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)
    dt_cancela = models.DateField(blank=True, null=True)
    ds_complemento_lista = models.CharField(max_length=2000, blank=True, null=True)
    ds_duracao = models.FloatField(blank=True, null=True)
    ds_duracao_ano = models.FloatField(blank=True, null=True)
    ds_duracao_mes = models.FloatField(blank=True, null=True)
    ds_duracao_semana = models.FloatField(blank=True, null=True)
    ds_duracao_dia = models.FloatField(blank=True, null=True)
    ds_duracao_hora = models.FloatField(blank=True, null=True)
    ds_duracao_minuto = models.FloatField(blank=True, null=True)
    ds_duracao_segundo = models.FloatField(blank=True, null=True)
    id_componente = models.CharField(max_length=2000, blank=True, null=True)
    cd_ordem_resultado_pai = models.IntegerField(blank=True, null=True)
    cd_operador_audit = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal_audit = models.CharField(max_length=240, blank=True, null=True)
    dt_transacao_audit = models.DateField(blank=True, null=True)
    fl_nao_imprime = models.CharField(max_length=1, blank=True, null=True)
    cd_nivel_avaliacao_principal = models.IntegerField(blank=True, null=True)
    cd_profissional_valida = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_valida', blank=True, null=True)
    dt_valida = models.DateField(blank=True, null=True)
    cd_papel = models.ForeignKey('TbPapel', models.DO_NOTHING, db_column='cd_papel', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_evolucao_resultado'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem', 'cd_ordem_avaliacao', 'cd_ordem_resultado'),)


class TbExameAlterado(models.Model):
    cd_atendimento = models.ForeignKey('TbResultadoProcedimento', models.DO_NOTHING, db_column='cd_atendimento')
    cd_ocorrencia = models.ForeignKey('TbResultadoProcedimento', models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey('TbResultadoProcedimento', models.DO_NOTHING, db_column='cd_ordem')
    sq_resultado = models.ForeignKey('TbResultadoProcedimento', models.DO_NOTHING, db_column='sq_resultado')
    cd_ref = models.ForeignKey('TbParamParametroReferencia', models.DO_NOTHING, db_column='cd_ref')
    cd_proced_param_referencia = models.FloatField()
    vl_resultado_parametro = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    ds_resultado_procedimento = models.CharField(max_length=50, blank=True, null=True)
    dt_processamento = models.DateField()
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_usuario = models.CharField(max_length=14, blank=True, null=True)
    cd_programa = models.FloatField(blank=True, null=True)
    cd_id_check_medprev = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exame_alterado'


class TbExameAssinatura(models.Model):
    cd_id = models.FloatField(primary_key=True)
    cd_sequencial = models.FloatField(blank=True, null=True)
    cd_atendimento = models.IntegerField()
    nu_pedido = models.FloatField(blank=True, null=True)
    cd_ocorrencia_pedido = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_bioquimico_responsavel = models.FloatField(blank=True, null=True)
    nm_arquivo = models.CharField(max_length=64, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exame_assinatura'


class TbExameAssinaturaAux(models.Model):
    cd_id = models.FloatField(primary_key=True)
    cd_sequencial = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_pedido = models.FloatField(blank=True, null=True)
    cd_ocorrencia_pedido = models.FloatField(blank=True, null=True)
    cd_ocorrencia = models.FloatField(blank=True, null=True)
    cd_ordem = models.FloatField(blank=True, null=True)
    cd_bioquimico_responsavel = models.FloatField(blank=True, null=True)
    nm_arquivo = models.CharField(max_length=1000, blank=True, null=True)
    pdf = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exame_assinatura_aux'


class TbExameAssinaturaErro(models.Model):
    cd_sequencial = models.FloatField(blank=True, null=True)
    cd_atendimento = models.IntegerField()
    nu_pedido = models.FloatField(blank=True, null=True)
    cd_ocorrencia_pedido = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_bioquimico_responsavel = models.FloatField(blank=True, null=True)
    nm_arquivo = models.CharField(max_length=64, blank=True, null=True)
    ds_erro = models.CharField(max_length=2048, blank=True, null=True)
    dt_erro = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exame_assinatura_erro'


class TbExameEmpresaRel(models.Model):
    cd_empresa = models.ForeignKey(TbEmpresaRel, models.DO_NOTHING, db_column='cd_empresa', primary_key=True)
    cd_grupo = models.CharField(max_length=3)

    class Meta:
        managed = False
        db_table = 'tb_exame_empresa_rel'
        unique_together = (('cd_empresa', 'cd_grupo'),)


class TbExameIntNaoColetado(models.Model):
    cd_atendimento = models.FloatField()
    cd_ocorrencia_plano = models.FloatField()
    cd_ordem = models.FloatField()
    cd_ordem_item = models.FloatField()
    cd_procedimento = models.CharField(max_length=8)
    cd_grupo_frasco = models.FloatField()
    dt_negativa = models.DateField()
    nm_operador_negativa = models.CharField(max_length=10)
    dt_coleta = models.DateField(blank=True, null=True)
    nm_operador_coleta = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exame_int_nao_coletado'


class TbExameLabApoio(models.Model):
    cd_mnemonico_exame = models.CharField(primary_key=True, max_length=20)
    cd_laboratorio_apoio = models.IntegerField()
    cd_procedimento = models.CharField(max_length=8)
    ds_exame = models.CharField(max_length=100, blank=True, null=True)
    ds_origem_admissivel = models.CharField(max_length=60, blank=True, null=True)
    ds_inf_comple = models.CharField(max_length=100, blank=True, null=True)
    fl_em_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_metodo_realizado = models.FloatField(blank=True, null=True)
    fl_libera_bioquimico = models.CharField(max_length=1)
    fl_libera_automatico = models.CharField(max_length=1)
    cd_grupo_alergeno = models.ForeignKey('TbGrupoAlergeno', models.DO_NOTHING, db_column='cd_grupo_alergeno', blank=True, null=True)
    cd_perfil = models.CharField(max_length=20)
    fl_curva_glicemica = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_exame_lab_apoio'
        unique_together = (('cd_mnemonico_exame', 'cd_laboratorio_apoio', 'cd_procedimento'),)


class TbExameLabApoio28122015(models.Model):
    cd_mnemonico_exame = models.CharField(max_length=20)
    cd_laboratorio_apoio = models.IntegerField()
    cd_procedimento = models.CharField(max_length=8)
    ds_exame = models.CharField(max_length=100, blank=True, null=True)
    ds_origem_admissivel = models.CharField(max_length=60, blank=True, null=True)
    ds_inf_comple = models.CharField(max_length=100, blank=True, null=True)
    fl_em_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_metodo_realizado = models.FloatField(blank=True, null=True)
    fl_libera_bioquimico = models.CharField(max_length=1)
    fl_libera_automatico = models.CharField(max_length=1)
    cd_grupo_alergeno = models.IntegerField(blank=True, null=True)
    cd_perfil = models.CharField(max_length=20)
    fl_curva_glicemica = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_exame_lab_apoio_28122015'


class TbExameLabApoio28122016(models.Model):
    cd_mnemonico_exame = models.CharField(max_length=20)
    cd_laboratorio_apoio = models.IntegerField()
    cd_procedimento = models.CharField(max_length=8)
    ds_exame = models.CharField(max_length=100, blank=True, null=True)
    ds_origem_admissivel = models.CharField(max_length=60, blank=True, null=True)
    ds_inf_comple = models.CharField(max_length=100, blank=True, null=True)
    fl_em_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_metodo_realizado = models.FloatField(blank=True, null=True)
    fl_libera_bioquimico = models.CharField(max_length=1)
    fl_libera_automatico = models.CharField(max_length=1)
    cd_grupo_alergeno = models.IntegerField(blank=True, null=True)
    cd_perfil = models.CharField(max_length=20)
    fl_curva_glicemica = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_exame_lab_apoio_28122016'


class TbExameLabApoioBkp(models.Model):
    cd_mnemonico_exame = models.CharField(max_length=20)
    cd_laboratorio_apoio = models.IntegerField()
    cd_procedimento = models.CharField(max_length=8)
    ds_exame = models.CharField(max_length=100, blank=True, null=True)
    ds_origem_admissivel = models.CharField(max_length=60, blank=True, null=True)
    ds_inf_comple = models.CharField(max_length=100, blank=True, null=True)
    fl_em_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_metodo_realizado = models.FloatField(blank=True, null=True)
    fl_libera_bioquimico = models.CharField(max_length=1)
    fl_libera_automatico = models.CharField(max_length=1)
    cd_grupo_alergeno = models.IntegerField(blank=True, null=True)
    cd_perfil = models.CharField(max_length=20)
    fl_curva_glicemica = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_exame_lab_apoio_bkp'


class TbExameLabApoioBkp23122015(models.Model):
    cd_mnemonico_exame = models.CharField(max_length=20)
    cd_laboratorio_apoio = models.IntegerField()
    cd_procedimento = models.CharField(max_length=8)
    ds_exame = models.CharField(max_length=100, blank=True, null=True)
    ds_origem_admissivel = models.CharField(max_length=60, blank=True, null=True)
    ds_inf_comple = models.CharField(max_length=100, blank=True, null=True)
    fl_em_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_metodo_realizado = models.FloatField(blank=True, null=True)
    fl_libera_bioquimico = models.CharField(max_length=1)
    fl_libera_automatico = models.CharField(max_length=1)
    cd_grupo_alergeno = models.IntegerField(blank=True, null=True)
    cd_perfil = models.CharField(max_length=20)
    fl_curva_glicemica = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_exame_lab_apoio_bkp23122015'


class TbExameLabApoioTmp(models.Model):
    cd_mnemonico_exame = models.CharField(max_length=20)
    cd_laboratorio_apoio = models.IntegerField()
    cd_procedimento = models.CharField(max_length=8)
    ds_exame = models.CharField(max_length=100, blank=True, null=True)
    ds_origem_admissivel = models.CharField(max_length=60, blank=True, null=True)
    ds_inf_comple = models.CharField(max_length=100, blank=True, null=True)
    fl_em_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_metodo_realizado = models.FloatField(blank=True, null=True)
    fl_libera_bioquimico = models.CharField(max_length=1)
    fl_libera_automatico = models.CharField(max_length=1)
    cd_grupo_alergeno = models.IntegerField(blank=True, null=True)
    cd_perfil = models.CharField(max_length=20)
    fl_curva_glicemica = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_exame_lab_apoio_tmp'


class TbExameMaterialLabApoio(models.Model):
    cd_laboratorio_apoio = models.IntegerField(primary_key=True)
    cd_mnemonico_exame = models.CharField(max_length=20)
    cd_mnemonico_mat = models.CharField(max_length=20)
    cd_procedimento = models.CharField(max_length=8)
    vl_exame = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exame_material_lab_apoio'
        unique_together = (('cd_laboratorio_apoio', 'cd_mnemonico_exame', 'cd_mnemonico_mat', 'cd_procedimento'),)


class TbExameNaoColetado(models.Model):
    cd_atendimento = models.FloatField()
    cd_senha_master = models.FloatField()
    cd_exame = models.FloatField()
    cd_procedimento = models.CharField(max_length=8)
    cd_grupo_frasco = models.FloatField()
    dt_negativa = models.DateField()
    nm_operador_negativa = models.CharField(max_length=10)
    dt_coleta = models.DateField(blank=True, null=True)
    nm_operador_coleta = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exame_nao_coletado'


class TbExamePixeon(models.Model):
    dt_integracao = models.CharField(max_length=15, blank=True, null=True)
    na_accessionnumber = models.CharField(max_length=50)
    dt_acao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exame_pixeon'


class TbExamePlanoUso(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem = models.IntegerField()
    cd_solicitacao_exame = models.IntegerField()
    dt_solicitacao_exame = models.DateField()
    hr_solicitacao_exame = models.IntegerField()
    cd_profissional = models.IntegerField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_valida = models.IntegerField(blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    nu_guia_gerada = models.CharField(max_length=15, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_imprime = models.IntegerField(blank=True, null=True)
    cd_tipo_atendimento_ans = models.IntegerField(blank=True, null=True)
    cd_tipo_doenca = models.CharField(max_length=3, blank=True, null=True)
    ds_indicacao_clinica = models.CharField(max_length=2000, blank=True, null=True)
    fl_urgencia = models.CharField(max_length=1, blank=True, null=True)
    ds_justificativa_exame_urgente = models.CharField(max_length=4000, blank=True, null=True)
    dt_importacao = models.DateField(blank=True, null=True)
    nu_pedido_exame = models.BigIntegerField(blank=True, null=True)
    cd_ordem_prescricao = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_ordem_prescricao', blank=True, null=True)
    cd_ordem_proc_plano_uso = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_ordem_proc_plano_uso', blank=True, null=True)
    cd_usuario_coletou = models.CharField(max_length=10, blank=True, null=True)
    dt_coleta = models.DateField(blank=True, null=True)
    fl_imprime_ronda = models.CharField(max_length=1, blank=True, null=True)
    cd_usuario_importou = models.CharField(max_length=10, blank=True, null=True)
    fl_coleta_cancelada = models.CharField(max_length=1, blank=True, null=True)
    cd_operador_cancelou_coleta = models.CharField(max_length=10, blank=True, null=True)
    dt_cancelamento_coleta = models.DateField(blank=True, null=True)
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)
    dt_cancelamento = models.DateField(blank=True, null=True)
    hr_cancelamento = models.IntegerField(blank=True, null=True)
    dt_exame_programado = models.DateField(blank=True, null=True)
    hr_exame_programado = models.FloatField(blank=True, null=True)
    nu_documento_id = models.FloatField(blank=True, null=True)
    cd_lote_guia = models.FloatField(blank=True, null=True)
    cd_ordem_plano_trat = models.ForeignKey('TbPlanoTratUsoOcorrencia', models.DO_NOTHING, db_column='cd_ordem_plano_trat', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exame_plano_uso'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem'),)


class TbExameResultLabApoio(models.Model):
    cd_mnemonico_exame = models.CharField(primary_key=True, max_length=20)
    cd_laboratorio_apoio = models.IntegerField()
    cd_item_resultado = models.CharField(max_length=20)
    ds_resultado = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exame_result_lab_apoio'
        unique_together = (('cd_mnemonico_exame', 'cd_laboratorio_apoio', 'cd_item_resultado'),)


class TbExameSolicitadoAut(models.Model):
    cd_senha_master = models.IntegerField(primary_key=True)
    cd_exame = models.IntegerField()
    dt_justificativa = models.DateField(blank=True, null=True)
    justificativa_aut = models.TextField(blank=True, null=True)
    nm_operador_just = models.CharField(max_length=10, blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    dt_cancelamento = models.DateField(blank=True, null=True)
    nm_operador_cancela = models.CharField(max_length=10, blank=True, null=True)
    fl_tempo_excedido = models.CharField(max_length=1, blank=True, null=True)
    motivo_chefia = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exame_solicitado_aut'
        unique_together = (('cd_senha_master', 'cd_exame'),)


class TbExameSolicitadoSa(models.Model):
    cd_senha_master = models.IntegerField(primary_key=True)
    cd_exame = models.IntegerField()
    cd_paciente = models.IntegerField()
    dt_atendimento = models.DateField()
    cd_grupo_atendimento = models.IntegerField()
    cd_local_atendimento = models.IntegerField()
    cd_senha_atendimento = models.IntegerField()
    cd_atendimento = models.IntegerField()
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    qt_exames = models.IntegerField(blank=True, null=True)
    nu_guia = models.CharField(max_length=15, blank=True, null=True)
    cd_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cd_operador', blank=True, null=True)
    dt_importacao = models.DateField(blank=True, null=True)
    fl_exame_impresso = models.CharField(max_length=1, blank=True, null=True)
    fl_exame_cancelado = models.CharField(max_length=1, blank=True, null=True)
    nu_pedido = models.ForeignKey('TbPedidoExame', models.DO_NOTHING, db_column='nu_pedido', blank=True, null=True)
    dt_pedido = models.ForeignKey('TbPedidoExame', models.DO_NOTHING, db_column='dt_pedido', blank=True, null=True)
    cd_senha = models.CharField(max_length=20, blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_pessoa_solic = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa_solic', blank=True, null=True)
    fl_exame_setor = models.CharField(max_length=1, blank=True, null=True)
    ds_justificativa = models.CharField(max_length=4000, blank=True, null=True)
    nu_atendimento_hapvida = models.CharField(max_length=14, blank=True, null=True)
    cd_usuario_coletou = models.CharField(max_length=10, blank=True, null=True)
    cd_usuario_autorizou = models.CharField(max_length=10, blank=True, null=True)
    dt_usuario_coletou = models.DateField(blank=True, null=True)
    ds_just_supervisor = models.CharField(max_length=2000, blank=True, null=True)
    cd_restricao = models.FloatField(blank=True, null=True)
    fl_restricao = models.CharField(max_length=1, blank=True, null=True)
    dt_usuario_autorizou = models.DateField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)
    fl_lado_membro = models.CharField(max_length=1, blank=True, null=True)
    nu_documento_id = models.FloatField(blank=True, null=True)
    ds_indicacao_clinica = models.CharField(max_length=2000, blank=True, null=True)
    cd_local_atend_dest = models.ForeignKey('TbGrupoAtendimentoSa', models.DO_NOTHING, db_column='cd_local_atend_dest', blank=True, null=True)
    cd_grupo_dest = models.ForeignKey('TbGrupoAtendimentoSa', models.DO_NOTHING, db_column='cd_grupo_dest', blank=True, null=True)
    cd_procedimento_dest = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento_dest', blank=True, null=True)
    cd_clinica_dest = models.ForeignKey(TbClinica, models.DO_NOTHING, db_column='cd_clinica_dest', blank=True, null=True)
    cd_tp_atend_dest = models.ForeignKey('TbTipoAtendimento', models.DO_NOTHING, db_column='cd_tp_atend_dest', blank=True, null=True)
    cd_item_pre_autorizacao = models.FloatField(blank=True, null=True)
    fl_gerado_totem = models.CharField(max_length=1, blank=True, null=True)
    cd_operador_cancela_coleta = models.CharField(max_length=100, blank=True, null=True)
    dt_coleta_cancelada = models.DateField(blank=True, null=True)
    ds_justificatica_cancelamento = models.CharField(max_length=2000, blank=True, null=True)
    cd_prioridade = models.FloatField(blank=True, null=True)
    fl_solicitou_laudo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exame_solicitado_sa'
        unique_together = (('cd_senha_master', 'cd_exame'),)


class TbExamesAdmiss(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    dt_exame_admiss = models.DateField()
    fl_estado_geral = models.CharField(max_length=1, blank=True, null=True)
    fl_mucosa = models.CharField(max_length=2, blank=True, null=True)
    fl_abdomen = models.CharField(max_length=1, blank=True, null=True)
    fl_nutricao = models.CharField(max_length=1, blank=True, null=True)
    fl_pulmao = models.CharField(max_length=1, blank=True, null=True)
    fl_pele = models.CharField(max_length=2, blank=True, null=True)
    fl_edema = models.CharField(max_length=1, blank=True, null=True)
    fl_situacao_feto = models.CharField(max_length=1, blank=True, null=True)
    fl_apresentacao = models.CharField(max_length=1, blank=True, null=True)
    fl_colo_utero = models.CharField(max_length=1, blank=True, null=True)
    fl_varizes = models.CharField(max_length=1, blank=True, null=True)
    fl_usa_drogas = models.CharField(max_length=1, blank=True, null=True)
    nu_batimentos_card = models.IntegerField(blank=True, null=True)
    nu_pulso = models.IntegerField(blank=True, null=True)
    nu_parede_abdomen = models.IntegerField(blank=True, null=True)
    nu_volume_abdomen = models.IntegerField(blank=True, null=True)
    nu_altura_utero = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exames_admiss'
        unique_together = (('cd_atendimento', 'dt_exame_admiss'),)


class TbExamesPardini(models.Model):
    mnmat = models.CharField(max_length=20, blank=True, null=True)
    mnexa = models.CharField(max_length=20, blank=True, null=True)
    descexa = models.CharField(max_length=60, blank=True, null=True)
    origemadmissivel = models.CharField(max_length=10, blank=True, null=True)
    descmatreal = models.CharField(max_length=60, blank=True, null=True)
    conservante = models.CharField(max_length=60, blank=True, null=True)
    infocomp = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exames_pardini'


class TbExamesSolicTotemSa(models.Model):
    nu_atendimento = models.FloatField(primary_key=True)
    cd_usuario = models.CharField(max_length=14)
    cd_procedimento = models.CharField(max_length=8)
    qt_procedimento = models.IntegerField(blank=True, null=True)
    dt_autorizacao = models.DateField(blank=True, null=True)
    cd_senha = models.CharField(max_length=9, blank=True, null=True)
    nm_maquina = models.CharField(max_length=40, blank=True, null=True)
    cd_pessoa_solic = models.FloatField(blank=True, null=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    cd_item_pre_autorizacao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_exames_solic_totem_sa'
        unique_together = (('nu_atendimento', 'cd_usuario', 'cd_procedimento'),)


class TbExcecaoAcessoDieta(models.Model):
    cd_tipo_acesso = models.ForeignKey('TbTipoAcesso', models.DO_NOTHING, db_column='cd_tipo_acesso', primary_key=True)
    cd_tipo_dieta = models.ForeignKey('TbTipoDieta', models.DO_NOTHING, db_column='cd_tipo_dieta')
    cd_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_mat_med', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_excecao_acesso_dieta'
        unique_together = (('cd_tipo_acesso', 'cd_tipo_dieta'),)


class TbExcecaoCodBarra(models.Model):
    cd_setor_origem = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_destino = models.CharField(max_length=6, blank=True, null=True)
    cd_material = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_excecao_cod_barra'


class TbExcecaoItemMatMed(models.Model):
    cd_item_mat_med = models.ForeignKey('TbItemMatMed', models.DO_NOTHING, db_column='cd_item_mat_med', primary_key=True)
    cd_mat_med = models.ForeignKey('TbItemMatMed', models.DO_NOTHING, db_column='cd_mat_med')
    cd_classe_acomodacao = models.ForeignKey(TbClasseAcomodacao, models.DO_NOTHING, db_column='cd_classe_acomodacao')
    fl_uso = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_excecao_item_mat_med'
        unique_together = (('cd_item_mat_med', 'cd_mat_med', 'cd_classe_acomodacao'),)


class TbExcecaoItemMatMedFreq(models.Model):
    cd_item_mat_med = models.ForeignKey('TbItemMatMed', models.DO_NOTHING, db_column='cd_item_mat_med', primary_key=True)
    cd_mat_med = models.ForeignKey('TbItemMatMed', models.DO_NOTHING, db_column='cd_mat_med')
    cd_classe_acomodacao = models.ForeignKey(TbClasseAcomodacao, models.DO_NOTHING, db_column='cd_classe_acomodacao')
    fl_uso = models.CharField(max_length=1)
    qt_qtd = models.FloatField(blank=True, null=True)
    qt_freq = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_excecao_item_mat_med_freq'
        unique_together = (('cd_item_mat_med', 'cd_mat_med', 'cd_classe_acomodacao'),)


class TbExcecaoProcedMatMed(models.Model):
    cd_procedimento = models.ForeignKey('TbProcedimentoMatMed', models.DO_NOTHING, db_column='cd_procedimento', primary_key=True)
    cd_mat_med = models.ForeignKey('TbProcedimentoMatMed', models.DO_NOTHING, db_column='cd_mat_med')
    cd_classe_acomodacao = models.ForeignKey(TbClasseAcomodacao, models.DO_NOTHING, db_column='cd_classe_acomodacao')
    qt_mat_med = models.IntegerField()
    fl_uso = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_excecao_proced_mat_med'
        unique_together = (('cd_procedimento', 'cd_mat_med', 'cd_classe_acomodacao'),)


class TbExcecaoProcedimentoTaxa(models.Model):
    cd_procedimento = models.ForeignKey('TbProcedimentoTaxa', models.DO_NOTHING, db_column='cd_procedimento', primary_key=True)
    cd_taxa = models.ForeignKey('TbProcedimentoTaxa', models.DO_NOTHING, db_column='cd_taxa')
    cd_classe_acomodacao = models.ForeignKey(TbClasseAcomodacao, models.DO_NOTHING, db_column='cd_classe_acomodacao')
    qt_taxa = models.IntegerField()
    fl_uso = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_excecao_procedimento_taxa'
        unique_together = (('cd_procedimento', 'cd_taxa', 'cd_classe_acomodacao'),)


class TbExcecaoProdmedProced(models.Model):
    cd_medico = models.ForeignKey('TbParamProdmedProcedimento', models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    cd_procedimento = models.ForeignKey('TbParamProdmedProcedimento', models.DO_NOTHING, db_column='cd_procedimento')
    cd_tipo_produtividade = models.BooleanField()
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio')
    cd_tabela_procedimento = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_procedimento', blank=True, null=True)
    cd_um_proc = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_proc', blank=True, null=True)
    dt_ini_vigencia = models.ForeignKey('TbParamProdmedProcedimento', models.DO_NOTHING, db_column='dt_ini_vigencia')
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    fl_status_aud = models.FloatField(blank=True, null=True)
    ds_negativa_aud = models.CharField(max_length=300, blank=True, null=True)
    auditor_regra = models.CharField(max_length=50, blank=True, null=True)
    cd_protocolo = models.FloatField(blank=True, null=True)
    ds_motivo_aud = models.CharField(max_length=2000, blank=True, null=True)
    dt_auditor = models.DateField(blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_excecao_prodmed_proced'
        unique_together = (('cd_medico', 'cd_procedimento', 'cd_tipo_produtividade', 'cd_convenio', 'dt_ini_vigencia'),)


class TbFaixaEtariaSus(models.Model):
    cd_faixa_etaria = models.IntegerField(primary_key=True)
    nm_faixa_etaria = models.CharField(max_length=20)
    qt_idade_inicial = models.IntegerField(blank=True, null=True)
    qt_idade_final = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_faixa_etaria_sus'


class TbFatOncoHist(models.Model):
    cd_atendimento = models.ForeignKey(TbComandaMatMed, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey(TbComandaMatMed, models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey(TbComandaMatMed, models.DO_NOTHING, db_column='cd_ordem')
    cd_ordem_cmd = models.ForeignKey(TbComandaMatMed, models.DO_NOTHING, db_column='cd_ordem_cmd')
    cd_ordem_m = models.ForeignKey(TbComandaMatMed, models.DO_NOTHING, db_column='cd_ordem_m')
    dt_comanda = models.DateField(blank=True, null=True)
    cd_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_mat_med', blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade_atendimento = models.ForeignKey('TbFilial', models.DO_NOTHING, db_column='cd_unidade_atendimento', blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_paciente = models.ForeignKey('TbPaciente', models.DO_NOTHING, db_column='cd_paciente', blank=True, null=True)
    cd_pessoa_hosp = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa_hosp', blank=True, null=True)
    cd_pessoa_hap = models.FloatField(blank=True, null=True)
    nm_pessoa = models.CharField(max_length=45, blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    nome_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_estoq = models.FloatField(blank=True, null=True)
    prc_mat_med_estoq = models.FloatField(blank=True, null=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_fat_onco_hist'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem', 'cd_ordem_cmd', 'cd_ordem_m'),)


class TbFatorDiagnosticoEnf(models.Model):
    cd_atendimento = models.ForeignKey(TbDiagnosticoEnfermagem, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey(TbDiagnosticoEnfermagem, models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_diagnostico = models.ForeignKey(TbDiagnosticoEnfermagem, models.DO_NOTHING, db_column='cd_ordem_diagnostico')
    cd_nanda = models.ForeignKey(TbComponenteNanda, models.DO_NOTHING, db_column='cd_nanda')
    cd_ordem = models.ForeignKey(TbComponenteNanda, models.DO_NOTHING, db_column='cd_ordem')
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_fator_diagnostico_enf'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_diagnostico', 'cd_nanda', 'cd_ordem'),)


class TbFaturaAnaliseContaAns(models.Model):
    nu_registro_ans = models.CharField(max_length=6)
    nu_demonstrativo = models.CharField(max_length=20)
    nu_fatura = models.CharField(max_length=20, blank=True, null=True)
    dt_emissao = models.DateField(blank=True, null=True)
    vl_processado_fatura = models.FloatField(blank=True, null=True)
    vl_liberado_fatura = models.FloatField(blank=True, null=True)
    vl_glosa_fatura = models.FloatField(blank=True, null=True)
    nu_remessa = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_fatura_analise_conta_ans'


class TbFaturaConvenioDgn(models.Model):
    cd_processo_fatura = models.IntegerField(primary_key=True)
    cd_pessoa_cobra = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa_cobra')
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio')
    dt_inicio = models.DateField()
    dt_fim = models.DateField()
    dt_referencia = models.DateField(blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    nm_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)
    fl_custo_operacional = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_fatura_convenio_dgn'


class TbFaturamentoImportadoB2B(models.Model):
    cd_laboratorio_apoio = models.FloatField(primary_key=True)
    dt_registro = models.DateField()
    sq_faturamento = models.FloatField()
    ano_fat = models.FloatField(blank=True, null=True)
    mes_fat = models.FloatField(blank=True, null=True)
    num_nota = models.CharField(max_length=30, blank=True, null=True)
    dt_emissao = models.DateField(blank=True, null=True)
    cd_lote = models.FloatField(blank=True, null=True)
    nu_pedido = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    dt_pedido = models.DateField(blank=True, null=True)
    nm_paciente = models.CharField(max_length=45, blank=True, null=True)
    cd_mnemonico = models.CharField(max_length=20, blank=True, null=True)
    cd_mnemonico_mat = models.CharField(max_length=20, blank=True, null=True)
    dt_resultado = models.DateField(blank=True, null=True)
    vl_exame = models.FloatField(blank=True, null=True)
    dt_envio = models.DateField(blank=True, null=True)
    dt_retorno = models.DateField(blank=True, null=True)
    vl_exame_lab = models.FloatField(blank=True, null=True)
    fl_status = models.NullBooleanField()
    ds_divergencia = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_faturamento_importado_b2b'
        unique_together = (('cd_laboratorio_apoio', 'dt_registro', 'sq_faturamento'),)


class TbFechamentoBalHidrico(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem_prescricao = models.IntegerField()
    cd_ordem = models.IntegerField()
    dt_fechamento = models.DateField(blank=True, null=True)
    hr_fechamento = models.IntegerField(blank=True, null=True)
    vl_ganhos = models.FloatField(blank=True, null=True)
    vl_perdas = models.FloatField(blank=True, null=True)
    vl_sangue_deriv = models.FloatField(blank=True, null=True)
    vl_balanco = models.FloatField(blank=True, null=True)
    cd_profissional = models.IntegerField(blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_fechamento_bal_hidrico'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem'),)


class TbFeriado(models.Model):
    cd_feriado = models.IntegerField(primary_key=True)
    ds_feriado = models.CharField(max_length=45)
    fl_tipo_feriado = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_feriado'


class TbFeriadoFixo(models.Model):
    cd_dia_mes = models.CharField(primary_key=True, max_length=4)
    cd_feriado = models.ForeignKey(TbFeriado, models.DO_NOTHING, db_column='cd_feriado', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_feriado_fixo'


class TbFeriadoMovel(models.Model):
    dt_feriado = models.DateField()
    cd_feriado = models.ForeignKey(TbFeriado, models.DO_NOTHING, db_column='cd_feriado')
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento', primary_key=True)

    class Meta:
        managed = False
        db_table = 'tb_feriado_movel'
        unique_together = (('cd_unidade_atendimento', 'dt_feriado'),)


class TbFichaAneItensMonitConf(models.Model):
    id_ficha_ane_itens_monit_conf = models.IntegerField(primary_key=True)
    id_ficha_anest_param_anest = models.ForeignKey('TbFichaAnestParamAnest', models.DO_NOTHING, db_column='id_ficha_anest_param_anest')
    id_ficha_anest_itens_monit = models.ForeignKey('TbFichaAnestItensMonit', models.DO_NOTHING, db_column='id_ficha_anest_itens_monit')

    class Meta:
        managed = False
        db_table = 'tb_ficha_ane_itens_monit_conf'
        unique_together = (('id_ficha_anest_param_anest', 'id_ficha_anest_itens_monit'),)


class TbFichaAnestAlergiasItens(models.Model):
    id_ficha_anest_alergias_itens = models.IntegerField(primary_key=True)
    ds_alergia = models.CharField(unique=True, max_length=255)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_alergias_itens'


class TbFichaAnestBloqNeuro(models.Model):
    id_ficha_anest_bloq_neuro = models.IntegerField(primary_key=True)
    ds_bloqueio_neuroeixo = models.CharField(unique=True, max_length=255)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_bloq_neuro'


class TbFichaAnestDocumentos(models.Model):
    id_ficha_anest_documentos = models.IntegerField(primary_key=True)
    id_ficha_anestesica_app = models.ForeignKey('TbFichaAnestesicaApp', models.DO_NOTHING, db_column='id_ficha_anestesica_app')
    nu_documento = models.ForeignKey(TbDocumentoProntuario, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_documentos'


class TbFichaAnestFarmacosMat(models.Model):
    id_ficha_anest_farmacos_mat = models.IntegerField(primary_key=True)
    id_ficha_anest_param_anest = models.ForeignKey('TbFichaAnestParamAnest', models.DO_NOTHING, db_column='id_ficha_anest_param_anest')
    id_ficha_farmacos_mat_itens = models.ForeignKey('TbFichaFarmacosMatItens', models.DO_NOTHING, db_column='id_ficha_farmacos_mat_itens')
    qt_farmaco_material = models.DecimalField(max_digits=12, decimal_places=3)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_farmacos_mat'
        unique_together = (('id_ficha_anest_param_anest', 'id_ficha_farmacos_mat_itens'),)


class TbFichaAnestIntercorrencia(models.Model):
    id_ficha_anest_intercorrencia = models.IntegerField(primary_key=True)
    id_ficha_anest_param_anest = models.ForeignKey('TbFichaAnestParamAnest', models.DO_NOTHING, db_column='id_ficha_anest_param_anest')
    dt_intercorrencia = models.DateField()
    ds_intercorrencia = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_intercorrencia'


class TbFichaAnestItensMonit(models.Model):
    id_ficha_anest_itens_monit = models.IntegerField(primary_key=True)
    id_ficha_anest_tp_itens_monit = models.ForeignKey('TbFichaAnestTpItensMonit', models.DO_NOTHING, db_column='id_ficha_anest_tp_itens_monit')
    ds_item_monitorizacao = models.CharField(unique=True, max_length=255)
    nu_casas_decimais = models.IntegerField(blank=True, null=True)
    fl_simbolo_grafico = models.CharField(max_length=10, blank=True, null=True)
    fl_padrao = models.CharField(max_length=1)
    fl_obrigatorio = models.CharField(max_length=1)
    fl_visivel = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_itens_monit'


class TbFichaAnestLiquidosHemo(models.Model):
    id_ficha_anest_liquidos_hemo = models.IntegerField(primary_key=True)
    id_ficha_anest_param_anest = models.ForeignKey('TbFichaAnestParamAnest', models.DO_NOTHING, db_column='id_ficha_anest_param_anest')
    id_ficha_liquidos_hemo_itens = models.ForeignKey('TbFichaLiquidosHemoItens', models.DO_NOTHING, db_column='id_ficha_liquidos_hemo_itens')
    dt_inicio_aplicacao = models.DateField(blank=True, null=True)
    qt_liquido_hemo = models.DecimalField(max_digits=12, decimal_places=3)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_liquidos_hemo'
        unique_together = (('id_ficha_anest_param_anest', 'id_ficha_liquidos_hemo_itens'),)


class TbFichaAnestMallampati(models.Model):
    id_ficha_anest_mallampati = models.IntegerField(primary_key=True)
    nu_mallampati_romanos = models.CharField(unique=True, max_length=10)
    ds_mallampati = models.CharField(unique=True, max_length=255)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_mallampati'


class TbFichaAnestMonitorizacao(models.Model):
    id_ficha_anest_monitorizacao = models.IntegerField(primary_key=True)
    id_ficha_ane_itens_monit_conf = models.ForeignKey(TbFichaAneItensMonitConf, models.DO_NOTHING, db_column='id_ficha_ane_itens_monit_conf')
    dt_intervalo = models.DateField()
    vl_item_monitorizacao = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_monitorizacao'
        unique_together = (('id_ficha_ane_itens_monit_conf', 'dt_intervalo'),)


class TbFichaAnestParamAnest(models.Model):
    id_ficha_anest_param_anest = models.IntegerField(primary_key=True)
    id_ficha_anestesica_app = models.IntegerField()
    nm_ult_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_ult_operador')
    id_ficha_anestesica_asa = models.IntegerField(blank=True, null=True)
    id_ficha_anest_mallampati = models.IntegerField(blank=True, null=True)
    id_ficha_anest_tipo_anest = models.IntegerField(blank=True, null=True)
    dt_monitorizacao_inicio = models.DateField(blank=True, null=True)
    nu_monitorizacao_hora = models.IntegerField(blank=True, null=True)
    nu_monitorizacao_minuto = models.IntegerField(blank=True, null=True)
    nu_monitorizacao_intervalo = models.IntegerField(blank=True, null=True)
    fl_emergencia_urgencia = models.CharField(max_length=1, blank=True, null=True)
    fl_via_aerea_dificil = models.CharField(max_length=1, blank=True, null=True)
    fl_oxigenio = models.CharField(max_length=1, blank=True, null=True)
    nu_oxigenio_qtd = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    dt_oxigenio_inicio = models.DateField(blank=True, null=True)
    dt_oxigenio_fim = models.DateField(blank=True, null=True)
    fl_n2o = models.CharField(max_length=1, blank=True, null=True)
    nu_n2o_qtd = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    dt_n2o_inicio = models.DateField(blank=True, null=True)
    dt_n2o_fim = models.DateField(blank=True, null=True)
    fl_ar_comprimido = models.CharField(max_length=1, blank=True, null=True)
    nu_ar_comprimido_qtd = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    dt_ar_comprimido_inicio = models.DateField(blank=True, null=True)
    dt_ar_comprimido_fim = models.DateField(blank=True, null=True)
    fl_halotano = models.CharField(max_length=1, blank=True, null=True)
    nu_halotano_qtd = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    dt_halotano_inicio = models.DateField(blank=True, null=True)
    dt_halotano_fim = models.DateField(blank=True, null=True)
    fl_isoflurano = models.CharField(max_length=1, blank=True, null=True)
    nu_isoflurano_qtd = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    dt_isoflurano_inicio = models.DateField(blank=True, null=True)
    dt_isoflurano_fim = models.DateField(blank=True, null=True)
    fl_desflurano = models.CharField(max_length=1, blank=True, null=True)
    nu_desflurano_qtd = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    dt_desflurano_inicio = models.DateField(blank=True, null=True)
    dt_desflurano_fim = models.DateField(blank=True, null=True)
    fl_sevoflurano = models.CharField(max_length=1, blank=True, null=True)
    nu_sevoflurano_qtd = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    dt_sevoflurano_inicio = models.DateField(blank=True, null=True)
    dt_sevoflurano_fim = models.DateField(blank=True, null=True)
    ds_ficha_anestesica = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_param_anest'


class TbFichaAnestPosCirurg(models.Model):
    id_ficha_anest_pos_cirurg = models.IntegerField(primary_key=True)
    id_ficha_anest_param_anest = models.ForeignKey(TbFichaAnestParamAnest, models.DO_NOTHING, db_column='id_ficha_anest_param_anest')
    id_posicao_cirurgica = models.ForeignKey('TbPosicaoCirurgica', models.DO_NOTHING, db_column='id_posicao_cirurgica')

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_pos_cirurg'
        unique_together = (('id_ficha_anest_param_anest', 'id_posicao_cirurgica'),)


class TbFichaAnestPreAdmissao(models.Model):
    id_ficha_anest_pre_admissao = models.IntegerField(primary_key=True)
    id_ficha_anestesica_app = models.ForeignKey('TbFichaAnestesicaApp', models.DO_NOTHING, db_column='id_ficha_anestesica_app')
    nm_ult_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_ult_operador')
    nu_peso = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    nu_altura = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    nu_pa_sistolica = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    nu_pa_diastolica = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    nu_freq_cardiaca = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    nu_freq_respiratoria = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    nu_temperatura = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_pre_admissao'


class TbFichaAnestTipoAnest(models.Model):
    id_ficha_anest_tipo_anest = models.IntegerField(primary_key=True)
    ds_tipo_anestesia = models.CharField(unique=True, max_length=255)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_tipo_anest'


class TbFichaAnestTpItensMonit(models.Model):
    id_ficha_anest_tp_itens_monit = models.IntegerField(primary_key=True)
    ds_tipo_itens_monitorizacao = models.CharField(unique=True, max_length=255)
    fl_simbolo = models.CharField(unique=True, max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anest_tp_itens_monit'


class TbFichaAnestesicaAlergias(models.Model):
    id_ficha_anestesica_alergias = models.IntegerField(primary_key=True)
    id_ficha_anest_pre_admissao = models.ForeignKey(TbFichaAnestPreAdmissao, models.DO_NOTHING, db_column='id_ficha_anest_pre_admissao')
    id_ficha_anest_alergias_itens = models.ForeignKey(TbFichaAnestAlergiasItens, models.DO_NOTHING, db_column='id_ficha_anest_alergias_itens')

    class Meta:
        managed = False
        db_table = 'tb_ficha_anestesica_alergias'
        unique_together = (('id_ficha_anest_pre_admissao', 'id_ficha_anest_alergias_itens'),)


class TbFichaAnestesicaApp(models.Model):
    id_ficha_anestesica_app = models.IntegerField(primary_key=True)
    id_ficha_anestesica_status = models.ForeignKey('TbFichaAnestesicaStatus', models.DO_NOTHING, db_column='id_ficha_anestesica_status')
    cd_atendimento = models.ForeignKey('TbPontoCirurgia', models.DO_NOTHING, db_column='cd_atendimento')
    cd_ocorrencia = models.ForeignKey('TbPontoCirurgia', models.DO_NOTHING, db_column='cd_ocorrencia')
    dt_transacao = models.DateField()
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador')

    class Meta:
        managed = False
        db_table = 'tb_ficha_anestesica_app'
        unique_together = (('cd_atendimento', 'cd_ocorrencia'),)


class TbFichaAnestesicaAsa(models.Model):
    id_ficha_anestesica_asa = models.IntegerField(primary_key=True)
    nu_asa_romanos = models.CharField(unique=True, max_length=10)
    ds_asa = models.CharField(unique=True, max_length=255)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anestesica_asa'


class TbFichaAnestesicaStatus(models.Model):
    id_ficha_anestesica_status = models.IntegerField(primary_key=True)
    ds_ficha_anestesica_status = models.CharField(unique=True, max_length=255)

    class Meta:
        managed = False
        db_table = 'tb_ficha_anestesica_status'


class TbFichaBloqNeuroConf(models.Model):
    id_ficha_bloq_neuro_conf = models.IntegerField(primary_key=True)
    id_ficha_anest_param_anest = models.ForeignKey(TbFichaAnestParamAnest, models.DO_NOTHING, db_column='id_ficha_anest_param_anest')
    id_ficha_anest_bloq_neuro = models.ForeignKey(TbFichaAnestBloqNeuro, models.DO_NOTHING, db_column='id_ficha_anest_bloq_neuro')

    class Meta:
        managed = False
        db_table = 'tb_ficha_bloq_neuro_conf'
        unique_together = (('id_ficha_anest_param_anest', 'id_ficha_anest_bloq_neuro'),)


class TbFichaFarmacosMatItens(models.Model):
    id_ficha_farmacos_mat_itens = models.IntegerField(primary_key=True)
    id_ficha_farmacos_mat_tipo = models.ForeignKey('TbFichaFarmacosMatTipo', models.DO_NOTHING, db_column='id_ficha_farmacos_mat_tipo')
    ds_farmaco_material = models.CharField(unique=True, max_length=255)

    class Meta:
        managed = False
        db_table = 'tb_ficha_farmacos_mat_itens'


class TbFichaFarmacosMatTipo(models.Model):
    id_ficha_farmacos_mat_tipo = models.IntegerField(primary_key=True)
    ds_farmacos_materiais_tipo = models.CharField(unique=True, max_length=255)
    fl_simbolo = models.CharField(unique=True, max_length=2)

    class Meta:
        managed = False
        db_table = 'tb_ficha_farmacos_mat_tipo'


class TbFichaLiquidosHemoItens(models.Model):
    id_ficha_liquidos_hemo_itens = models.IntegerField(primary_key=True)
    id_ficha_liquidos_hemo_tipo = models.ForeignKey('TbFichaLiquidosHemoTipo', models.DO_NOTHING, db_column='id_ficha_liquidos_hemo_tipo')
    ds_liquido_hemo = models.CharField(unique=True, max_length=255)

    class Meta:
        managed = False
        db_table = 'tb_ficha_liquidos_hemo_itens'


class TbFichaLiquidosHemoTipo(models.Model):
    id_ficha_liquidos_hemo_tipo = models.IntegerField(primary_key=True)
    ds_liquidos_hemo_tipo = models.CharField(unique=True, max_length=255)
    fl_simbolo = models.CharField(unique=True, max_length=2)

    class Meta:
        managed = False
        db_table = 'tb_ficha_liquidos_hemo_tipo'


class TbFilial(models.Model):
    cd_filial = models.CharField(primary_key=True, max_length=3)
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa', unique=True)
    im_logotipo = models.TextField(blank=True, null=True)  # This field type is a guess.
    cd_empresa_organizacao = models.CharField(max_length=3, blank=True, null=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)
    qt_idade_digital = models.IntegerField(blank=True, null=True)
    id_filial_finpac = models.FloatField(blank=True, null=True)
    qt_idade_digital_max = models.IntegerField(blank=True, null=True)
    pct_acrescimo_he = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_tabela_he = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_he', blank=True, null=True)
    cd_um_he = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_he', blank=True, null=True)
    nu_idade_face_min = models.IntegerField(blank=True, null=True)
    nu_idade_face_max = models.IntegerField(blank=True, null=True)
    nu_cnes = models.CharField(max_length=7, blank=True, null=True)
    fl_prod_remessa = models.CharField(max_length=1, blank=True, null=True)
    ds_site = models.CharField(max_length=60, blank=True, null=True)
    nm_path_logotipo = models.CharField(max_length=80, blank=True, null=True)
    nu_dif_fuso_horario = models.IntegerField(blank=True, null=True)
    cd_area = models.IntegerField(blank=True, null=True)
    qt_dias_senha = models.FloatField(blank=True, null=True)
    qt_aviso_senha = models.FloatField(blank=True, null=True)
    interfaceamento = models.CharField(max_length=30, blank=True, null=True)
    hr_aprazamento = models.IntegerField(blank=True, null=True)
    fl_check_mobile = models.CharField(max_length=1, blank=True, null=True)
    qt_doc_pendentes = models.IntegerField(blank=True, null=True)
    fl_libera_checagem = models.CharField(max_length=1, blank=True, null=True)
    fl_libera_alta_pendencia = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_filial = models.CharField(max_length=1, blank=True, null=True)
    idade_max_clico_bioface = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_filial'


class TbFilialDiasEntrega(models.Model):
    cd_filial = models.CharField(primary_key=True, max_length=3)
    cd_grupo_compra = models.CharField(max_length=5)
    qt_dias_entrega = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_filial_dias_entrega'
        unique_together = (('cd_filial', 'cd_grupo_compra'),)


class TbFilialVigencia(models.Model):
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    nu_cgc_cpf = models.FloatField()
    dt_inicio_vigencia = models.DateField()
    dt_final_vigencia = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_atual = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_filial_vigencia'
        unique_together = (('cd_filial', 'nu_cgc_cpf'),)


class TbFiltroT43Gc(models.Model):
    cd_filtro = models.CharField(primary_key=True, max_length=100)
    tp_filtro = models.FloatField()
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador')

    class Meta:
        managed = False
        db_table = 'tb_filtro_t43gc'
        unique_together = (('cd_filtro', 'tp_filtro', 'nm_operador'),)


class TbFiltroT49Ps(models.Model):
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    dt_inicial = models.DateField(blank=True, null=True)
    dt_final = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_filtro_t49ps'


class TbFiltroT9000(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    filtro = models.CharField(max_length=256)
    sql_filtro = models.CharField(unique=True, max_length=32)
    sql_lov_stmt = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_filtro_t9000'


class TbFluxoLocal(models.Model):
    cd_fluxo_local = models.FloatField(primary_key=True)
    ds_fluxo_local = models.CharField(max_length=45, blank=True, null=True)
    dt_operacao = models.DateField(blank=True, null=True)
    cd_usuario_registro = models.CharField(max_length=20, blank=True, null=True)
    cd_color = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_fluxo_local'


class TbFolhaHospital(models.Model):
    dt_inicio = models.DateField(primary_key=True)
    dt_fim = models.DateField()
    cd_empresa_funcionario = models.FloatField()
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa')
    cd_escala_funcionario = models.FloatField()
    cd_forma_pagamento_medico = models.FloatField(blank=True, null=True)
    id_pessoa_finpac = models.FloatField(blank=True, null=True)
    id_cc_finpac = models.FloatField(blank=True, null=True)
    cd_status = models.FloatField()
    nu_tempo_plantao = models.FloatField(blank=True, null=True)
    vl_periodo_plantao = models.FloatField(blank=True, null=True)
    nu_tempo_sobre_aviso = models.FloatField(blank=True, null=True)
    vl_periodo_sobre_aviso = models.FloatField(blank=True, null=True)
    vl_ajustes = models.FloatField(blank=True, null=True)
    vl_produtividade = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30)
    dt_atualizacao = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_folha_hospital'
        unique_together = (('dt_inicio', 'dt_fim', 'cd_empresa_funcionario', 'cd_escala_funcionario', 'cd_pessoa'),)


class TbFormaPagamento(models.Model):
    cd_forma_pagamento = models.FloatField(primary_key=True)
    ds_forma_pagamento = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_forma_pagamento'


class TbFormaPagamentoMedico(models.Model):
    cd_forma_pagamento_medico = models.IntegerField(primary_key=True)
    ds_forma_pagamento_medico = models.CharField(max_length=45, blank=True, null=True)
    perc_tx_adm = models.FloatField(blank=True, null=True)
    perc_irrf = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_forma_pagamento_medico'


class TbFormulario(models.Model):
    cd_formulario = models.IntegerField(primary_key=True)
    nm_formulario = models.CharField(max_length=240)
    cd_tipo_documento_prontuario = models.ForeignKey('TbTipoDocumentoProntuario', models.DO_NOTHING, db_column='cd_tipo_documento_prontuario', blank=True, null=True)
    cd_grupo_formulario = models.ForeignKey('TbGrupoFormulario', models.DO_NOTHING, db_column='cd_grupo_formulario')
    fl_rotate = models.IntegerField(blank=True, null=True)
    fl_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_organizacao_prontuario = models.ForeignKey('TbOrganizacaoProntuario', models.DO_NOTHING, db_column='cd_organizacao_prontuario', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_formulario'


class TbFormularioAtendimento(models.Model):
    cd_formulario_atendimento = models.FloatField(primary_key=True)
    cd_atendimento = models.FloatField()
    cd_formulario_t43j5_a = models.FloatField()
    cd_formulario_vigencia = models.FloatField()
    fl_status = models.CharField(max_length=1)
    ds_observacao = models.CharField(max_length=300, blank=True, null=True)
    cd_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cd_operador')
    dt_formulario = models.DateField()
    cd_tipo_devolucao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_formulario_atendimento'
        unique_together = (('cd_atendimento', 'cd_formulario_t43j5_a'),)


class TbFormularioT43J5A(models.Model):
    cd_formulario_t43j5_a = models.FloatField(primary_key=True)
    ds_formulario_t43j5_a = models.CharField(max_length=300)
    cd_formulario_vigencia = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_formulario_t43j5_a'


class TbFormularioVigencia(models.Model):
    cd_formulario_vigencia = models.FloatField(primary_key=True)
    dt_inicio_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_tipo_devolucao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_formulario_vigencia'


class TbFornecPedidoMatera(models.Model):
    id_forncd = models.IntegerField(primary_key=True)
    nu_contrato = models.FloatField()
    dt_inicio = models.DateField(blank=True, null=True)
    dt_fim = models.DateField(blank=True, null=True)
    qt_parcelas = models.IntegerField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    id_filial = models.IntegerField(blank=True, null=True)
    cd_usuario_gravou = models.CharField(max_length=9, blank=True, null=True)
    dt_gravacao = models.DateField(blank=True, null=True)
    cd_usuario_fechou = models.CharField(max_length=9, blank=True, null=True)
    dt_fechamento = models.DateField(blank=True, null=True)
    pedidos_acumulados = models.CharField(max_length=1000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_fornec_pedido_matera'
        unique_together = (('id_forncd', 'nu_contrato'),)


class TbFornecedorProv(models.Model):
    cd_arquivo = models.FloatField(blank=True, null=True)
    nr_linha = models.FloatField(blank=True, null=True)
    cd_fornecedor = models.FloatField(blank=True, null=True)
    nm_fornecedor = models.CharField(max_length=100, blank=True, null=True)
    nr_fornecedor = models.CharField(max_length=100, blank=True, null=True)
    cd_cgc = models.FloatField(blank=True, null=True)
    cd_ins_est = models.CharField(max_length=100, blank=True, null=True)
    cd_tipo_logradouro = models.CharField(max_length=100, blank=True, null=True)
    nm_rua_endereco = models.CharField(max_length=100, blank=True, null=True)
    nu_endereco = models.IntegerField(blank=True, null=True)
    nm_bairro_endereco = models.CharField(max_length=100, blank=True, null=True)
    ds_compl_enderero = models.CharField(max_length=100, blank=True, null=True)
    nm_cidade = models.CharField(max_length=100, blank=True, null=True)
    cd_uf = models.CharField(max_length=10, blank=True, null=True)
    cd_cep = models.CharField(max_length=20, blank=True, null=True)
    fl_tipo_endereco = models.CharField(max_length=5, blank=True, null=True)
    fl_ender_cobranca = models.CharField(max_length=1, blank=True, null=True)
    cd_telefone = models.CharField(max_length=20, blank=True, null=True)
    fl_status = models.NullBooleanField()
    fl_exclusivo = models.CharField(max_length=1, blank=True, null=True)
    ds_mensagem = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_fornecedor_prov'


class TbFornecedorProvArq(models.Model):
    cd_arquivo = models.FloatField(primary_key=True)
    nm_arquivo = models.CharField(max_length=2000, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)
    nm_operador = models.CharField(max_length=15, blank=True, null=True)
    ds_mensagem = models.TextField(blank=True, null=True)
    cd_status = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_fornecedor_prov_arq'


class TbFracionamentoPardini(models.Model):
    dt_geracao = models.DateField(blank=True, null=True)
    hr_geracao = models.IntegerField(blank=True, null=True)
    cd_mnemonico_mat = models.CharField(max_length=20, blank=True, null=True)
    cd_mnemonico_exame = models.CharField(max_length=20, blank=True, null=True)
    nm_exame = models.CharField(max_length=240, blank=True, null=True)
    nm_origem_admissivel = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_fracionamento_pardini'


class TbFrequenciaPlantao(models.Model):
    cd_medico = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)
    dt_entrada = models.DateField()
    hr_entrada = models.IntegerField()
    dt_saida = models.DateField()
    hr_saida = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_frequencia_plantao'
        unique_together = (('cd_medico', 'dt_entrada', 'hr_entrada'),)


class TbFuncionarioRast(models.Model):
    cd_empresa_rast = models.ForeignKey(TbEmpresaRast, models.DO_NOTHING, db_column='cd_empresa_rast', primary_key=True)
    cd_funcionario = models.IntegerField()
    nm_funcionario = models.CharField(max_length=45)
    nu_cpf = models.CharField(max_length=20, blank=True, null=True)
    nr_fone_contato = models.CharField(max_length=20, blank=True, null=True)
    fl_ativo = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_funcionario_rast'
        unique_together = (('cd_empresa_rast', 'cd_funcionario'),)


class TbGeracaoComissao(models.Model):
    cd_sequencia = models.FloatField(primary_key=True)
    dt_inicial = models.DateField()
    dt_final = models.DateField()
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_geracao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_geracao_comissao'


class TbGeracaoDebFuncionario(models.Model):
    cd_sequencia = models.FloatField(primary_key=True)
    dt_inicial = models.DateField()
    dt_final = models.DateField()
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_geracao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_geracao_deb_funcionario'


class TbGeracaoIndicadores(models.Model):
    cd_geracao = models.FloatField(primary_key=True)
    cd_status = models.FloatField()
    periodo = models.CharField(max_length=7)
    ds_observacao = models.TextField(blank=True, null=True)  # This field type is a guess.
    dt_criacao = models.DateField()
    nm_operador_criacao = models.CharField(max_length=30)
    dt_geracao = models.DateField(blank=True, null=True)
    nm_operador_geracao = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_geracao_indicadores'


class TbGeracaoMensagemXml(models.Model):
    nu_protocolo = models.FloatField(primary_key=True)
    sq_registro = models.FloatField()
    xml_doc = models.TextField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_geracao_mensagem_xml'
        unique_together = (('nu_protocolo', 'sq_registro'),)


class TbGlosaAns(models.Model):
    cd_glosa = models.IntegerField(primary_key=True)
    ds_glosa = models.CharField(max_length=200)
    ds_grupo = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_glosa_ans'


class TbGlosaGuiaAnaliseAns(models.Model):
    nu_registro_ans = models.CharField(max_length=6)
    nu_demonstrativo = models.CharField(max_length=20)
    nu_lote = models.CharField(max_length=20)
    nu_protocolo = models.CharField(max_length=12)
    nu_guia_prestador = models.CharField(max_length=20)
    nu_carteira_benef = models.CharField(max_length=20)
    cd_glosa = models.CharField(max_length=4, blank=True, null=True)
    ds_glosa = models.CharField(max_length=100, blank=True, null=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_glosa_guia_analise_ans'


class TbGlosaLoteAnaliseAns(models.Model):
    nu_registro_ans = models.CharField(max_length=6)
    nu_demonstrativo = models.CharField(max_length=20)
    nu_lote = models.CharField(max_length=20)
    nu_protocolo = models.CharField(max_length=12)
    cd_glosa = models.CharField(max_length=4)
    nu_remessa = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_glosa_lote_analise_ans'


class TbGlosaProcedAnaliseAns(models.Model):
    nu_registro_ans = models.CharField(max_length=6)
    nu_demonstrativo = models.CharField(max_length=20)
    nu_lote = models.CharField(max_length=20)
    nu_protocolo = models.CharField(max_length=12)
    nu_guia_prestador = models.CharField(max_length=20)
    nu_carteira_benef = models.CharField(max_length=20)
    cd_codigo = models.CharField(max_length=10)
    cd_glosa = models.CharField(max_length=4)
    ds_glosa = models.CharField(max_length=100, blank=True, null=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_glosa_proced_analise_ans'


class TbGlosaProcessoErros(models.Model):
    nu_ordem = models.FloatField(blank=True, null=True)
    dt_producao = models.DateField(blank=True, null=True)
    tp_servico = models.FloatField(blank=True, null=True)
    nu_documento = models.CharField(max_length=16, blank=True, null=True)
    nu_seq_documento = models.FloatField(blank=True, null=True)
    cd_erro = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_glosa_processo_erros'


class TbGotejamento(models.Model):
    cd_gotejamento = models.IntegerField(primary_key=True)
    nm_gotejamento = models.CharField(max_length=30)
    cd_mnemonico = models.CharField(max_length=10, blank=True, null=True)
    qt_fator_conv_horas = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_gotejamento'


class TbGotejamentoGasto(models.Model):
    cd_gotejamento = models.ForeignKey(TbGotejamento, models.DO_NOTHING, db_column='cd_gotejamento', primary_key=True)
    cd_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_mat_med')

    class Meta:
        managed = False
        db_table = 'tb_gotejamento_gasto'
        unique_together = (('cd_gotejamento', 'cd_mat_med'),)


class TbGrandeGrupoCbo(models.Model):
    cd_grande_grupo = models.CharField(primary_key=True, max_length=6)
    nm_grande_grupo = models.CharField(max_length=240, blank=True, null=True)
    nr_grande_grupo = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grande_grupo_cbo'


class TbGrauContaminacao(models.Model):
    cd_grau_contaminacao = models.CharField(primary_key=True, max_length=1)
    ds_grau_contaminacao = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grau_contaminacao'


class TbGrpAntigo(models.Model):
    cd_grupo = models.IntegerField(primary_key=True)
    nm_grupo = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grp_antigo'


class TbGrpItemAntigo(models.Model):
    cd_grupo = models.ForeignKey(TbGrpAntigo, models.DO_NOTHING, db_column='cd_grupo', primary_key=True)
    cd_item = models.CharField(max_length=8)

    class Meta:
        managed = False
        db_table = 'tb_grp_item_antigo'
        unique_together = (('cd_grupo', 'cd_item'),)


class TbGrupoAlergeno(models.Model):
    cd_grupo_alergeno = models.IntegerField(primary_key=True)
    nm_grupo_alergeno = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'tb_grupo_alergeno'


class TbGrupoAtendAltoCusto(models.Model):
    cd_local_atendimento = models.ForeignKey('TbGrupoAtendimentoSa', models.DO_NOTHING, db_column='cd_local_atendimento', primary_key=True)
    cd_grupo_atendimento = models.ForeignKey('TbGrupoAtendimentoSa', models.DO_NOTHING, db_column='cd_grupo_atendimento')
    cd_operador_cadastrou = models.CharField(max_length=10, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_atend_alto_custo'
        unique_together = (('cd_local_atendimento', 'cd_grupo_atendimento'),)


class TbGrupoAtendModeloPresc(models.Model):
    cd_grupo_atendimento = models.IntegerField(primary_key=True)
    cd_local_atendimento = models.ForeignKey('TbLocalAtendimentoSa', models.DO_NOTHING, db_column='cd_local_atendimento')
    cd_modelo = models.ForeignKey('TbPrescricaoMedicaModelo', models.DO_NOTHING, db_column='cd_modelo')

    class Meta:
        managed = False
        db_table = 'tb_grupo_atend_modelo_presc'
        unique_together = (('cd_grupo_atendimento', 'cd_local_atendimento', 'cd_modelo'),)


class TbGrupoAtendSeqProc(models.Model):
    cd_local_atendimento = models.ForeignKey('TbGrupoAtendimentoSa', models.DO_NOTHING, db_column='cd_local_atendimento', primary_key=True)
    cd_grupo_atendimento = models.ForeignKey('TbGrupoAtendimentoSa', models.DO_NOTHING, db_column='cd_grupo_atendimento')
    cd_operador_cadastrou = models.CharField(max_length=10, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_atend_seq_proc'
        unique_together = (('cd_local_atendimento', 'cd_grupo_atendimento'),)


class TbGrupoAtendimento(models.Model):
    cd_grupo_atendimento = models.IntegerField(primary_key=True)
    nm_grupo_atendimento = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'tb_grupo_atendimento'


class TbGrupoAtendimentoSa(models.Model):
    cd_grupo_atendimento = models.IntegerField(primary_key=True)
    cd_local_atendimento = models.ForeignKey('TbLocalAtendimentoSa', models.DO_NOTHING, db_column='cd_local_atendimento')
    ds_grupo_atendimento = models.CharField(max_length=45)
    cd_cor_atendimento = models.IntegerField(blank=True, null=True)
    dt_atualizacao = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=20, blank=True, null=True)
    cd_tipo_atendimento = models.IntegerField(blank=True, null=True)
    cd_clinica = models.IntegerField(blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    nu_idade_min = models.IntegerField(blank=True, null=True)
    nu_idade_max = models.IntegerField(blank=True, null=True)
    cd_grupo_procedimento = models.FloatField(blank=True, null=True)
    cd_setor_grupo = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_grupo', blank=True, null=True)
    qt_atend_hora = models.IntegerField(blank=True, null=True)
    fl_possui_triagem = models.CharField(max_length=1, blank=True, null=True)
    hr_inicio_triagem = models.IntegerField(blank=True, null=True)
    hr_fim_triagem = models.IntegerField(blank=True, null=True)
    fl_classe_grupo = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_grupo_atendimento_sa'
        unique_together = (('cd_grupo_atendimento', 'cd_local_atendimento'),)


class TbGrupoAvaliacao(models.Model):
    cd_grupo_avaliacao = models.IntegerField(primary_key=True)
    nm_grupo_avaliacao = models.CharField(max_length=40, blank=True, null=True)
    fl_grupo_avaliacao = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_grupo = models.ForeignKey('TbTipoGrupoAvaliacao', models.DO_NOTHING, db_column='fl_tipo_grupo', blank=True, null=True)
    cd_tipo_documento_prontuario = models.ForeignKey('TbTipoDocumentoProntuario', models.DO_NOTHING, db_column='cd_tipo_documento_prontuario', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_avaliacao'


class TbGrupoCbo(models.Model):
    cd_grande_grupo = models.ForeignKey(TbGrandeGrupoCbo, models.DO_NOTHING, db_column='cd_grande_grupo')
    cd_grupo = models.CharField(primary_key=True, max_length=5)
    nm_grupo = models.CharField(max_length=240, blank=True, null=True)
    nr_grupo = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_cbo'


class TbGrupoCentroCusto(models.Model):
    cd_grupo_centro_custo = models.CharField(primary_key=True, max_length=3)
    nm_grupo_centro_custo = models.CharField(max_length=30)
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento')
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor')

    class Meta:
        managed = False
        db_table = 'tb_grupo_centro_custo'
        unique_together = (('cd_grupo_centro_custo', 'cd_unidade_atendimento', 'cd_setor'),)


class TbGrupoCid(models.Model):
    cd_grupo_cid = models.IntegerField(primary_key=True)
    nm_grupo_cid = models.CharField(max_length=240)
    nr_grupo_cid = models.CharField(max_length=60)

    class Meta:
        managed = False
        db_table = 'tb_grupo_cid'


class TbGrupoCid10(models.Model):
    cd_grupo_cid10 = models.CharField(primary_key=True, max_length=5)
    nm_grupo_cid10 = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'tb_grupo_cid10'


class TbGrupoConsultorioSa(models.Model):
    cd_grupo_consultorio = models.IntegerField(primary_key=True)
    cd_local_atendimento = models.ForeignKey('TbLocalAtendimentoSa', models.DO_NOTHING, db_column='cd_local_atendimento')
    ds_grupo_consultorio = models.CharField(max_length=45)
    cd_nivel_classificacao_risco = models.ForeignKey('TbNivelClassificacaoRisco', models.DO_NOTHING, db_column='cd_nivel_classificacao_risco', blank=True, null=True)
    fl_default = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_consultorio_sa'
        unique_together = (('cd_grupo_consultorio', 'cd_local_atendimento'),)


class TbGrupoEventoMonitorHosp(models.Model):
    cd_grupo_monitor_hosp = models.ForeignKey('TbGrupoMonitorHosp', models.DO_NOTHING, db_column='cd_grupo_monitor_hosp', primary_key=True)
    cd_evento_monitor_hosp = models.ForeignKey(TbEventoMonitorHosp, models.DO_NOTHING, db_column='cd_evento_monitor_hosp')

    class Meta:
        managed = False
        db_table = 'tb_grupo_evento_monitor_hosp'
        unique_together = (('cd_grupo_monitor_hosp', 'cd_evento_monitor_hosp'),)


class TbGrupoFarmacologico(models.Model):
    cd_grupo_farmacologico = models.IntegerField(primary_key=True)
    nm_grupo_farmacologico = models.CharField(max_length=110)

    class Meta:
        managed = False
        db_table = 'tb_grupo_farmacologico'


class TbGrupoFaturamento(models.Model):
    cd_grupo = models.IntegerField(primary_key=True)
    nm_grupo = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'tb_grupo_faturamento'


class TbGrupoFormulario(models.Model):
    cd_grupo_formulario = models.FloatField(primary_key=True)
    nm_grupo_formulario = models.CharField(max_length=45)
    ds_observacao = models.CharField(max_length=4000, blank=True, null=True)
    cd_conselho = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_formulario'


class TbGrupoFrasco(models.Model):
    cd_grupo_frasco = models.IntegerField(primary_key=True)
    nm_grupo_frasco = models.CharField(max_length=45)
    qt_frasco = models.IntegerField()
    qt_amostras = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_frasco'


class TbGrupoFrascoProcedimento(models.Model):
    cd_grupo_frasco = models.ForeignKey(TbGrupoFrasco, models.DO_NOTHING, db_column='cd_grupo_frasco', primary_key=True)
    cd_procedimento = models.CharField(max_length=8)

    class Meta:
        managed = False
        db_table = 'tb_grupo_frasco_procedimento'
        unique_together = (('cd_grupo_frasco', 'cd_procedimento'),)


class TbGrupoGarcon(models.Model):
    cd_grupo_garcon = models.CharField(primary_key=True, max_length=2)
    ds_grupo_garcon = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'tb_grupo_garcon'


class TbGrupoGuiasAns(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans', primary_key=True)
    nu_remessa = models.FloatField()
    nu_grupo_guias = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_grupo_guias_ans'
        unique_together = (('tp_guia_ans', 'nu_remessa', 'nu_grupo_guias'),)


class TbGrupoImagem(models.Model):
    cd_grupo_imagem = models.FloatField(primary_key=True)
    nm_grupo_imagem = models.CharField(max_length=40, blank=True, null=True)
    nr_grupo_imagem = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_imagem'


class TbGrupoItemOncologia(models.Model):
    cd_grupo = models.IntegerField(primary_key=True)
    nm_grupo = models.CharField(max_length=50)
    qt_estabilidade = models.IntegerField()
    fl_estabilidade = models.CharField(max_length=1, blank=True, null=True)
    cd_material = models.FloatField()
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_item_oncologia'
        unique_together = (('cd_grupo', 'qt_estabilidade', 'cd_material'),)


class TbGrupoMedSuporteProc(models.Model):
    cd_grupo = models.FloatField(primary_key=True)
    ds_grupo_med = models.CharField(max_length=30)
    fl_laboratorio = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_med_suporte_proc'


class TbGrupoMedsuporteProcCla(models.Model):
    cd_grupo = models.ForeignKey(TbGrupoMedSuporteProc, models.DO_NOTHING, db_column='cd_grupo')
    cd_classe_acomodacao = models.ForeignKey(TbClasseAcomodacao, models.DO_NOTHING, db_column='cd_classe_acomodacao')

    class Meta:
        managed = False
        db_table = 'tb_grupo_medsuporte_proc_cla'
        unique_together = (('cd_grupo', 'cd_classe_acomodacao'),)


class TbGrupoMonitorHosp(models.Model):
    cd_grupo_monitor_hosp = models.IntegerField(primary_key=True)
    ds_grupo_monitor_hosp = models.CharField(max_length=80, blank=True, null=True)
    fl_referencia_local = models.CharField(max_length=30, blank=True, null=True)
    nu_tempo_parada = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_monitor_hosp'


class TbGrupoMovCaixa(models.Model):
    cd_grupo_mov_caixa = models.FloatField(primary_key=True)
    ds_grupo_mov_caixa = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'tb_grupo_mov_caixa'


class TbGrupoNanda(models.Model):
    cd_grupo_nanda = models.IntegerField(primary_key=True)
    nm_grupo_nanda = models.CharField(max_length=240)

    class Meta:
        managed = False
        db_table = 'tb_grupo_nanda'


class TbGrupoOperadorAtividade(models.Model):
    cod_grupo = models.IntegerField(primary_key=True)
    cd_atividade = models.IntegerField()
    cd_atividade_pai = models.IntegerField(blank=True, null=True)
    fl_query = models.CharField(max_length=1, blank=True, null=True)
    fl_insert = models.CharField(max_length=1, blank=True, null=True)
    fl_update = models.CharField(max_length=1, blank=True, null=True)
    fl_delete = models.CharField(max_length=1, blank=True, null=True)
    fl_status = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_grupo_operador_atividade'
        unique_together = (('cod_grupo', 'cd_atividade'),)


class TbGrupoOperadorSolicitacao(models.Model):
    cd_grupo = models.IntegerField(primary_key=True)
    nm_grupo = models.CharField(max_length=100)
    cd_grupo_pai = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_grupo_pai', blank=True, null=True)
    cd_perfil_grupo = models.ForeignKey('TbPerfilGrupoOperador', models.DO_NOTHING, db_column='cd_perfil_grupo', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_operador_solicitacao'


class TbGrupoOrdenacao(models.Model):
    cd_grupo_ordenacao = models.IntegerField(primary_key=True)
    ds_grupo_ordenacao = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'tb_grupo_ordenacao'


class TbGrupoPlanejOncologia(models.Model):
    cd_setor = models.CharField(primary_key=True, max_length=6)
    dt_inicial = models.DateField()
    dt_final = models.DateField()
    cd_ordem = models.IntegerField()
    cd_grupo = models.FloatField()
    dt_agenda = models.DateField()
    cd_material = models.FloatField()
    cd_paciente = models.FloatField()
    fl_estabilidade = models.CharField(max_length=1)
    qt_estabilidade = models.FloatField()
    qt_prescrita = models.FloatField(blank=True, null=True)
    qt_padrao = models.FloatField(blank=True, null=True)
    qt_sobras = models.FloatField(blank=True, null=True)
    cd_unidade = models.CharField(max_length=2, blank=True, null=True)
    qt_frascos = models.FloatField(blank=True, null=True)
    cd_ordem_rel = models.FloatField(blank=True, null=True)
    cd_ordem_estab = models.FloatField(blank=True, null=True)
    ds_mais_um = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_planej_oncologia'
        unique_together = (('cd_setor', 'dt_inicial', 'dt_final', 'cd_ordem', 'cd_grupo', 'dt_agenda', 'cd_material', 'cd_paciente'),)


class TbGrupoPontoAtendSa(models.Model):
    cd_local_atendimento = models.ForeignKey(TbGrupoAtendimentoSa, models.DO_NOTHING, db_column='cd_local_atendimento', primary_key=True)
    cd_grupo_atendimento = models.ForeignKey(TbGrupoAtendimentoSa, models.DO_NOTHING, db_column='cd_grupo_atendimento')
    cd_ponto_atendimento = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_grupo_ponto_atend_sa'
        unique_together = (('cd_local_atendimento', 'cd_grupo_atendimento', 'cd_ponto_atendimento'),)


class TbGrupoProcSalaCtrl(models.Model):
    cd_grupo_proc_sala_ctrl = models.FloatField(primary_key=True)
    cd_grupo_procedimento = models.CharField(unique=True, max_length=3)

    class Meta:
        managed = False
        db_table = 'tb_grupo_proc_sala_ctrl'


class TbGrupoProcedSus(models.Model):
    cd_grupo_proced_sus = models.IntegerField(primary_key=True)
    nm_grupo_proced_sus = models.CharField(unique=True, max_length=50)

    class Meta:
        managed = False
        db_table = 'tb_grupo_proced_sus'


class TbGrupoProcedimento(models.Model):
    cd_grupo_procedimento = models.CharField(primary_key=True, max_length=3)
    nm_grupo_procedimento = models.CharField(max_length=60)

    class Meta:
        managed = False
        db_table = 'tb_grupo_procedimento'


class TbGrupoProcedimentoAmb(models.Model):
    cd_grupo_procedimento = models.CharField(primary_key=True, max_length=2)
    nm_grupo_procedimento = models.CharField(max_length=60)

    class Meta:
        managed = False
        db_table = 'tb_grupo_procedimento_amb'


class TbGrupoProcedimentoSus(models.Model):
    cd_grupo_procedimento = models.CharField(primary_key=True, max_length=8)
    nm_grupo_procedimento = models.CharField(max_length=45)
    vl_serv_hosp = models.FloatField(blank=True, null=True)
    vl_serv_prof = models.FloatField(blank=True, null=True)
    vl_sadt = models.FloatField(blank=True, null=True)
    qt_pontos_ato = models.IntegerField(blank=True, null=True)
    qt_pontos_anestesia = models.IntegerField(blank=True, null=True)
    qt_dias_permanencia = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_procedimento_sus'


class TbGrupoProdProc(models.Model):
    cd_grupo_prod_proc = models.IntegerField(primary_key=True)
    nm_grupo_prod_proc = models.CharField(unique=True, max_length=60)

    class Meta:
        managed = False
        db_table = 'tb_grupo_prod_proc'


class TbGrupoProdSus(models.Model):
    cd_grupo_prod_sus = models.IntegerField(primary_key=True)
    nm_grupo_proc_sus = models.CharField(unique=True, max_length=50)

    class Meta:
        managed = False
        db_table = 'tb_grupo_prod_sus'


class TbGrupoProduto(models.Model):
    cd_grupo_produto = models.IntegerField(primary_key=True)
    nm_grupo_produto = models.CharField(max_length=45)
    volume_frasco = models.CharField(max_length=15, blank=True, null=True)
    sigla_setor = models.CharField(max_length=3, blank=True, null=True)
    empresa = models.CharField(max_length=30, blank=True, null=True)
    extensao = models.CharField(max_length=3, blank=True, null=True)
    fl_exame_imagem = models.CharField(max_length=1, blank=True, null=True)
    fl_em_uso = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_produto'


class TbGrupoProdutoOperacao(models.Model):
    cd_grupo_produto = models.ForeignKey(TbGrupoProduto, models.DO_NOTHING, db_column='cd_grupo_produto', primary_key=True)
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio')
    cd_operacao = models.ForeignKey('TbOperacao', models.DO_NOTHING, db_column='cd_operacao')

    class Meta:
        managed = False
        db_table = 'tb_grupo_produto_operacao'
        unique_together = (('cd_grupo_produto', 'cd_convenio', 'cd_operacao'),)


class TbGrupoProdutoPacs(models.Model):
    cd_grupo_produto_pacs = models.FloatField(primary_key=True)
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento')
    cd_grupo_produto = models.ForeignKey(TbGrupoProduto, models.DO_NOTHING, db_column='cd_grupo_produto')
    cd_operador = models.CharField(max_length=10)
    dt_atualizacao = models.DateField(blank=True, null=True)
    fl_ativo = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_grupo_produto_pacs'


class TbGrupoProdutoSetor(models.Model):
    cd_grupo_produto = models.ForeignKey(TbGrupoProduto, models.DO_NOTHING, db_column='cd_grupo_produto', primary_key=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor')

    class Meta:
        managed = False
        db_table = 'tb_grupo_produto_setor'
        unique_together = (('cd_grupo_produto', 'cd_setor'),)


class TbGrupoProtocolo(models.Model):
    cd_grupo_protocolo = models.IntegerField(primary_key=True)
    ds_grupo_protocolo = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupo_protocolo'


class TbGrupoSms(models.Model):
    cd_grupo_sms = models.IntegerField(primary_key=True)
    ds_grupo_sms = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'tb_grupo_sms'


class TbGrupoTaxas(models.Model):
    cd_grupo_taxas = models.CharField(primary_key=True, max_length=2)
    nm_grupo_taxas = models.CharField(max_length=60)

    class Meta:
        managed = False
        db_table = 'tb_grupo_taxas'


class TbGruposImpressao(models.Model):
    cd_grupo_impressao = models.IntegerField(primary_key=True)
    nm_grupo_impressao = models.CharField(max_length=45)
    cd_tipo_impressao = models.IntegerField()
    cd_ordem_impressao = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_grupos_impressao'


class TbGruposMenu(models.Model):
    cod_grupo = models.IntegerField(primary_key=True)
    nm_grupo = models.CharField(max_length=40)
    dt_validade = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupos_menu'


class TbGruposOpcoes(models.Model):
    cod_grupo = models.IntegerField(primary_key=True)
    cod_op = models.CharField(max_length=20)
    cd_tela = models.CharField(max_length=10, blank=True, null=True)
    fl_mostra_menu = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_grupos_opcoes'
        unique_together = (('cod_grupo', 'cod_op'),)


class TbGuia(models.Model):
    cd_atendimento = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_ocorrencia')
    nu_guia = models.CharField(max_length=15, blank=True, null=True)
    dt_autorizacao_guia = models.DateField(blank=True, null=True)
    qt_dias_autorizado = models.IntegerField(blank=True, null=True)
    cd_convenio_pagador = models.ForeignKey(TbConvenioPagador, models.DO_NOTHING, db_column='cd_convenio_pagador')
    cd_cobranca = models.ForeignKey(TbCobrancaPaciente, models.DO_NOTHING, db_column='cd_cobranca', blank=True, null=True)
    cd_pessoa_realiza = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa_realiza')
    cd_ocorrencia_ocupa = models.ForeignKey('TbOcupacaoAcomodacao', models.DO_NOTHING, db_column='cd_ocorrencia_ocupa', blank=True, null=True)
    cd_setor_origem = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_origem', blank=True, null=True)
    cd_ocorrencia_pedido = models.ForeignKey('TbPedidoExame', models.DO_NOTHING, db_column='cd_ocorrencia_pedido', blank=True, null=True)
    fl_realizar = models.CharField(max_length=1, blank=True, null=True)
    fl_day_clinic = models.CharField(max_length=1, blank=True, null=True)
    dt_prorrogacao_negada = models.DateField(blank=True, null=True)
    hr_prorrogacao_negada = models.IntegerField(blank=True, null=True)
    cd_auditor = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_auditor', blank=True, null=True)
    hr_ini_autorizacao = models.IntegerField(blank=True, null=True)
    dt_registro_guia = models.DateField(blank=True, null=True)
    cd_clinica_citologia = models.FloatField(blank=True, null=True)
    fl_tipo_exame = models.FloatField(blank=True, null=True)
    nu_gab = models.CharField(max_length=30, blank=True, null=True)
    fl_tipo_gab = models.CharField(max_length=1, blank=True, null=True)
    cd_restricao_cart_hapvida = models.FloatField(blank=True, null=True)
    fl_gab_provisoria = models.CharField(max_length=1, blank=True, null=True)
    cd_mat_med = models.FloatField(blank=True, null=True)
    nu_guia_operadora = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_guia'
        unique_together = (('cd_atendimento', 'cd_ocorrencia'),)


class TbGuiaA(models.Model):
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    nu_guia = models.CharField(max_length=15, blank=True, null=True)
    dt_autorizacao_guia = models.DateField(blank=True, null=True)
    qt_dias_autorizado = models.IntegerField(blank=True, null=True)
    cd_convenio_pagador = models.BooleanField()
    cd_cobranca = models.CharField(max_length=15, blank=True, null=True)
    cd_pessoa_realiza = models.FloatField()
    cd_ocorrencia_ocupa = models.IntegerField(blank=True, null=True)
    cd_setor_origem = models.CharField(max_length=6, blank=True, null=True)
    nu_pedido = models.IntegerField(blank=True, null=True)
    dt_pedido = models.DateField(blank=True, null=True)
    fl_realizar = models.CharField(max_length=1, blank=True, null=True)
    cd_ocorrencia_pedido = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_guia_a'


class TbGuiaAnaliseContaAns(models.Model):
    nu_registro_ans = models.CharField(max_length=6)
    nu_demonstrativo = models.CharField(max_length=20)
    nu_lote = models.CharField(max_length=20)
    nu_protocolo = models.CharField(max_length=12)
    nu_guia_prestador = models.CharField(max_length=20)
    nu_guia_operadora = models.CharField(max_length=20, blank=True, null=True)
    nu_carteira_benef = models.CharField(max_length=20)
    nm_beneficiario = models.CharField(max_length=70, blank=True, null=True)
    nm_plano = models.CharField(max_length=40, blank=True, null=True)
    dt_validade_carteira = models.DateField(blank=True, null=True)
    nu_cns = models.CharField(max_length=15, blank=True, null=True)
    ident_beneficiario = models.CharField(max_length=600, blank=True, null=True)
    dt_realizacao = models.DateField(blank=True, null=True)
    vl_processado_guia = models.FloatField(blank=True, null=True)
    vl_liberado_guia = models.FloatField(blank=True, null=True)
    vl_glosa_guia = models.FloatField(blank=True, null=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_guia_analise_conta_ans'


class TbGuiaFaturamentoTiss(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans', primary_key=True)
    nu_remessa = models.FloatField()
    fl_status_geracao = models.NullBooleanField()
    dt_geracao = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)
    fl_emitiu_protocolo = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_guia_faturamento_tiss'
        unique_together = (('tp_guia_ans', 'nu_remessa'),)


class TbHistDiagnosticoExame(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ordem')
    nu_seq_diagnostico = models.IntegerField()
    cd_modelo_diagnostico = models.ForeignKey('TbModeloDiagnostico', models.DO_NOTHING, db_column='cd_modelo_diagnostico', blank=True, null=True)
    ds_diagnostico_exame = models.CharField(max_length=2000, blank=True, null=True)
    dt_resultado = models.DateField()
    cd_bioquimico_responsavel = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_hist_diagnostico_exame'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem', 'nu_seq_diagnostico', 'dt_resultado'),)


class TbHistResultProcedimento(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ordem')
    sq_resultado = models.IntegerField()
    cd_parametro_referencia = models.ForeignKey('TbParametroReferencia', models.DO_NOTHING, db_column='cd_parametro_referencia', blank=True, null=True)
    vl_resultado_parametro = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    ds_resultado_procedimento = models.CharField(max_length=20, blank=True, null=True)
    cd_unidade_usual = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_usual', blank=True, null=True)
    vl_formula = models.CharField(max_length=50, blank=True, null=True)
    fl_valor_parametro = models.CharField(max_length=1, blank=True, null=True)
    dt_resultado = models.DateField()
    cd_bioquimico_responsavel = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_hist_result_procedimento'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem', 'sq_resultado', 'dt_resultado'),)


class TbHistVisitaAuditorLog(models.Model):
    id_hist_visita_auditor_log = models.FloatField(primary_key=True)
    dt_log = models.DateField()
    cd_atendimento = models.FloatField()
    cd_senha_autoriza = models.CharField(max_length=20, blank=True, null=True)
    cd_autorizacao_senha = models.FloatField(blank=True, null=True)
    nu_visita_usuario = models.FloatField(blank=True, null=True)
    ds_status = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_hist_visita_auditor_log'


class TbHistVisitasExclusao(models.Model):
    nu_visita_usuario = models.FloatField(blank=True, null=True)
    dt_historico_visita_hospitalar = models.DateField(blank=True, null=True)
    cd_filial = models.CharField(max_length=100, blank=True, null=True)
    nm_filial = models.CharField(max_length=255, blank=True, null=True)
    cd_prestador = models.FloatField(blank=True, null=True)
    nm_prestador = models.CharField(max_length=255, blank=True, null=True)
    cd_senha = models.CharField(max_length=255, blank=True, null=True)
    cd_procedimento = models.FloatField(blank=True, null=True)
    nm_procedimento = models.CharField(max_length=255, blank=True, null=True)
    cd_usuario = models.CharField(max_length=255, blank=True, null=True)
    nm_usuario = models.CharField(max_length=255, blank=True, null=True)
    cd_tipo_autorizacao_auditor = models.FloatField(blank=True, null=True)
    ds_tipo_autorizacao_auditor = models.CharField(max_length=255, blank=True, null=True)
    cd_profissional = models.FloatField(blank=True, null=True)
    nm_auditor = models.CharField(max_length=255, blank=True, null=True)
    ds_observacao = models.CharField(max_length=255, blank=True, null=True)
    ds_diagnostico_secundario = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_hist_visitas_exclusao'


class TbHistoricoAtendimento(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_ocorrencia = models.IntegerField()
    dt_historico = models.DateField(blank=True, null=True)
    ds_ocorrencia = models.CharField(max_length=700, blank=True, null=True)
    cd_operador = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_historico_atendimento'
        unique_together = (('cd_atendimento', 'cd_ocorrencia'),)


class TbHistoricoDeAltaAtend(models.Model):
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_senha = models.FloatField(blank=True, null=True)
    cd_local = models.FloatField(blank=True, null=True)
    cd_grupo_senha = models.FloatField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    cd_operador = models.CharField(max_length=20, blank=True, null=True)
    dt_registro = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_historico_de_alta_atend'


class TbHistoricoGarcon(models.Model):
    cd_garcon = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_garcon', primary_key=True)
    dt_operacao = models.DateField()
    cd_grupo_origem = models.ForeignKey(TbGrupoGarcon, models.DO_NOTHING, db_column='cd_grupo_origem')
    cd_grupo_destino = models.ForeignKey(TbGrupoGarcon, models.DO_NOTHING, db_column='cd_grupo_destino')
    hr_operacao = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_historico_garcon'
        unique_together = (('cd_garcon', 'dt_operacao', 'hr_operacao'),)


class TbHistoricoLeitoAcomodacao(models.Model):
    cd_acomodacao = models.CharField(primary_key=True, max_length=6)
    cd_posto = models.CharField(max_length=6)
    cd_classe_acomodacao = models.IntegerField()
    nu_leito = models.IntegerField()
    dt_inicial = models.DateField()
    hr_inicial = models.IntegerField()
    fl_status_inicial = models.CharField(max_length=1, blank=True, null=True)
    dt_final = models.DateField(blank=True, null=True)
    hr_final = models.IntegerField(blank=True, null=True)
    fl_status_final = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_historico_leito_acomodacao'
        unique_together = (('cd_acomodacao', 'cd_posto', 'cd_classe_acomodacao', 'nu_leito', 'dt_inicial', 'hr_inicial'),)


class TbHistoricoObstetrico(models.Model):
    cd_paciente = models.IntegerField(primary_key=True)
    fl_virgem = models.CharField(max_length=1, blank=True, null=True)
    dt_ult_parto = models.DateField(blank=True, null=True)
    nu_gestacoes_anteriores = models.IntegerField(blank=True, null=True)
    nu_filhos_vivos = models.IntegerField(blank=True, null=True)
    nu_filhos_mortos = models.IntegerField(blank=True, null=True)
    ds_causa_morte = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_historico_obstetrico'


class TbHistoricoPaciente(models.Model):
    cd_ocorrencia_historico = models.IntegerField()
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_estado_paciente = models.ForeignKey(TbEstadoPaciente, models.DO_NOTHING, db_column='cd_estado_paciente')
    dt_estado_paciente = models.DateField()
    hr_estado_paciente = models.IntegerField(blank=True, null=True)
    ds_observacoes_medicas = models.CharField(max_length=260, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_historico_paciente'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_historico'),)


class TbHistoricoPacienteSa(models.Model):
    dt_atendimento = models.DateField(primary_key=True)
    cd_paciente = models.IntegerField()
    cd_senha_master = models.IntegerField()
    cd_grupo_atendimento = models.IntegerField()
    cd_local_atendimento = models.IntegerField()
    cd_senha_atendimento = models.IntegerField()
    cd_medico = models.IntegerField()
    cd_atendimento = models.IntegerField()
    ds_tempo_existencia = models.CharField(max_length=15, blank=True, null=True)
    ds_resultado_exame = models.CharField(max_length=700, blank=True, null=True)
    ds_queixa_princial = models.CharField(max_length=4000, blank=True, null=True)
    ds_diagnostico = models.CharField(max_length=700, blank=True, null=True)
    ds_receita = models.CharField(max_length=4000, blank=True, null=True)
    cid10 = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cid10', blank=True, null=True)
    ds_prescricao = models.CharField(max_length=700, blank=True, null=True)
    ds_evolucao = models.CharField(max_length=4000, blank=True, null=True)
    ds_evolucao_enfermagem = models.CharField(max_length=350, blank=True, null=True)
    ds_exames_fisico = models.CharField(max_length=350, blank=True, null=True)
    cd_tipo_doenca = models.CharField(max_length=3, blank=True, null=True)
    nu_tempo_doenca = models.FloatField(blank=True, null=True)
    cd_tempo_doenca = models.CharField(max_length=3, blank=True, null=True)
    cd_indicador_acidente = models.IntegerField(blank=True, null=True)
    cd_tipo_consulta = models.IntegerField(blank=True, null=True)
    cd_tipo_atendimento = models.IntegerField(blank=True, null=True)
    cd_tipo_saida = models.IntegerField(blank=True, null=True)
    ds_indicacao_clinica = models.CharField(max_length=500, blank=True, null=True)
    ds_compl_prescricao = models.CharField(max_length=700, blank=True, null=True)
    nu_peso = models.FloatField(blank=True, null=True)
    nu_temperatura = models.FloatField(blank=True, null=True)
    cd_gravida = models.FloatField(blank=True, null=True)
    cd_diabetico = models.FloatField(blank=True, null=True)
    cd_obeso = models.FloatField(blank=True, null=True)
    cd_hipertenso = models.FloatField(blank=True, null=True)
    cd_pressao_sistolica = models.FloatField(blank=True, null=True)
    cd_pressao_diastolica = models.FloatField(blank=True, null=True)
    fl_gravidez = models.CharField(max_length=1, blank=True, null=True)
    qt_semana_gestacional = models.FloatField(blank=True, null=True)
    ds_receita_especial = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_historico_paciente_sa'
        unique_together = (('dt_atendimento', 'cd_paciente'),)


class TbHistoricoPadrao(models.Model):
    cd_historico_padrao = models.FloatField(primary_key=True)
    ds_historico_padrao = models.CharField(max_length=60)

    class Meta:
        managed = False
        db_table = 'tb_historico_padrao'


class TbHistoricoSenha(models.Model):
    nu_sequencia = models.FloatField(primary_key=True)
    cd_senha = models.CharField(unique=True, max_length=6)
    dt_senha = models.DateField()
    cd_usuario = models.FloatField()
    cd_terminal = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'tb_historico_senha'


class TbHorarioGeracaoGasto(models.Model):
    cd_filial = models.CharField(primary_key=True, max_length=3)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor')
    cd_ordem = models.IntegerField()
    hr_geracao_gasto = models.IntegerField(blank=True, null=True)
    hr_inicio_apraz = models.IntegerField(blank=True, null=True)
    hr_final_apraz = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_horario_geracao_gasto'
        unique_together = (('cd_filial', 'cd_setor', 'cd_ordem'),)


class TbHotelariaAvaliacao(models.Model):
    cd_hotelaria_avaliacao = models.BigIntegerField(primary_key=True)
    dt_avaliacao = models.DateField()
    hr_avaliacao = models.IntegerField()
    fl_hotelaria = models.CharField(max_length=1)
    cd_avaliacao = models.ForeignKey(TbAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', blank=True, null=True)
    cd_setor = models.ForeignKey('TmAcomodacao', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)
    ds_observacao = models.TextField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_acomodacao = models.ForeignKey('TmAcomodacao', models.DO_NOTHING, db_column='cd_acomodacao', blank=True, null=True)
    cd_local_atendimento = models.ForeignKey('TbPontoOperadorAtendSa', models.DO_NOTHING, db_column='cd_local_atendimento', blank=True, null=True)
    cd_ponto_atendimento = models.ForeignKey('TbPontoOperadorAtendSa', models.DO_NOTHING, db_column='cd_ponto_atendimento', blank=True, null=True)
    nu_itens_avaliacao = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_hotelaria_avaliacao'


class TbHotelariaResultado(models.Model):
    cd_hotelaria_avaliacao = models.ForeignKey(TbHotelariaAvaliacao, models.DO_NOTHING, db_column='cd_hotelaria_avaliacao', primary_key=True)
    cd_ordem_resultado = models.IntegerField()
    cd_avaliacao = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_avaliacao')
    cd_nivel_avaliacao = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_item_ordem_avaliacao = models.ForeignKey('TbItemAvaliacao', models.DO_NOTHING, db_column='cd_item_ordem_avaliacao')
    ds_texto = models.CharField(max_length=4000, blank=True, null=True)
    ds_texto_livre = models.TextField(blank=True, null=True)
    ds_data = models.DateField(blank=True, null=True)
    ds_numero = models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)
    ds_lista = models.CharField(max_length=4000, blank=True, null=True)
    ds_check = models.CharField(max_length=1, blank=True, null=True)
    ds_imagem = models.BinaryField(blank=True, null=True)
    ds_som = models.TextField(blank=True, null=True)  # This field type is a guess.
    ds_video = models.BinaryField(blank=True, null=True)
    ds_formula = models.CharField(max_length=2000, blank=True, null=True)
    fl_formula = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_atributo = models.CharField(max_length=20)
    fl_tipo_valor = models.CharField(max_length=20)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=240, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_unidade_usual = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_usual', blank=True, null=True)
    vl_formula = models.CharField(max_length=240, blank=True, null=True)
    ds_mutiplo_valor = models.TextField(blank=True, null=True)
    ds_descritivo_codigo_resultado = models.CharField(max_length=400, blank=True, null=True)
    fl_nao_conformidade = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_hotelaria_resultado'
        unique_together = (('cd_hotelaria_avaliacao', 'cd_ordem_resultado'),)


class TbHrVisitaConsultorioParam(models.Model):
    cd_turno_visita_consult_param = models.IntegerField(primary_key=True)
    cd_visita_consultorio_param = models.ForeignKey('TbVisitaConsultorioParam', models.DO_NOTHING, db_column='cd_visita_consultorio_param')
    hr_inicio_visita_chefia = models.IntegerField(blank=True, null=True)
    hr_fim_visita_chefia = models.IntegerField(blank=True, null=True)
    hr_inicio_turno = models.IntegerField(blank=True, null=True)
    hr_fim_turno = models.IntegerField(blank=True, null=True)
    fl_status_visita = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_hr_visita_consultorio_param'


class TbHumaster(models.Model):
    cd_atributo = models.CharField(primary_key=True, max_length=20)
    nm_atributo = models.CharField(max_length=52)
    cd_ordem = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_humaster'


class TbHvHistoricoGotej(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem_prescricao = models.IntegerField()
    cd_ordem_hv = models.IntegerField()
    cd_ordem_gotej = models.IntegerField()
    qt_gotejamento_anterior = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_gotejamento_anterior = models.ForeignKey(TbGotejamento, models.DO_NOTHING, db_column='cd_gotejamento_anterior', blank=True, null=True)
    qt_gotejamento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.ForeignKey(TbGotejamento, models.DO_NOTHING, db_column='cd_gotejamento', blank=True, null=True)
    cd_profissional_altera = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_altera', blank=True, null=True)
    cd_operador = models.CharField(max_length=40, blank=True, null=True)
    cd_terminal = models.CharField(max_length=40, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_hv_historico_gotej'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_hv', 'cd_ordem_gotej'),)


class TbIcpc2(models.Model):
    cd_icpc2 = models.CharField(primary_key=True, max_length=3)
    nm_titulo = models.CharField(max_length=240)
    nm_criterios = models.CharField(max_length=240, blank=True, null=True)
    nm_incluir = models.CharField(max_length=240, blank=True, null=True)
    nm_considerar = models.CharField(max_length=240, blank=True, null=True)
    nm_notas = models.CharField(max_length=240, blank=True, null=True)
    cd_capitulo = models.ForeignKey('TbIcpc2Capitulo', models.DO_NOTHING, db_column='cd_capitulo', blank=True, null=True)
    cd_componente = models.ForeignKey('TbIcpc2Componente', models.DO_NOTHING, db_column='cd_componente', blank=True, null=True)
    cd_tipo = models.ForeignKey('TbIcpc2Tipo', models.DO_NOTHING, db_column='cd_tipo')
    fl_original_icpc2 = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_icpc2'


class TbIcpc2Capitulo(models.Model):
    cd_capitulo = models.CharField(primary_key=True, max_length=2)
    nm_capitulo = models.CharField(max_length=80)
    fl_original_icpc2 = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_icpc2_capitulo'


class TbIcpc2Cid10(models.Model):
    cd_icpc2 = models.ForeignKey(TbIcpc2, models.DO_NOTHING, db_column='cd_icpc2', primary_key=True)
    cid10 = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cid10')

    class Meta:
        managed = False
        db_table = 'tb_icpc2_cid10'
        unique_together = (('cd_icpc2', 'cid10'),)


class TbIcpc2Componente(models.Model):
    cd_componente = models.IntegerField(primary_key=True)
    nm_componente = models.CharField(max_length=80)
    fl_original_icpc2 = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_icpc2_componente'


class TbIcpc2Exclusao(models.Model):
    cd_icpc2 = models.ForeignKey(TbIcpc2, models.DO_NOTHING, db_column='cd_icpc2', primary_key=True)
    cd_icpc2_excluido = models.ForeignKey(TbIcpc2, models.DO_NOTHING, db_column='cd_icpc2_excluido')

    class Meta:
        managed = False
        db_table = 'tb_icpc2_exclusao'
        unique_together = (('cd_icpc2', 'cd_icpc2_excluido'),)


class TbIcpc2Tipo(models.Model):
    cd_tipo = models.IntegerField(primary_key=True)
    nm_tipo = models.CharField(max_length=80)
    fl_original_icpc2 = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_icpc2_tipo'


class TbIdentGuiaAns(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans')
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_seq_registro = models.FloatField(blank=True, null=True)
    nu_registro_ans = models.CharField(max_length=6)
    dt_emissao_guia = models.DateField()
    dt_autorizacao_guia = models.DateField(blank=True, null=True)
    nu_guia_prestador = models.CharField(max_length=20, blank=True, null=True)
    nu_guia_solicitacao = models.CharField(max_length=20, blank=True, null=True)
    cd_senha = models.CharField(max_length=20, blank=True, null=True)
    dt_validade_senha = models.DateField(blank=True, null=True)
    nu_cartao_beneficiario = models.CharField(max_length=20)
    nm_beneficiario = models.CharField(max_length=70, blank=True, null=True)
    nm_plano = models.CharField(max_length=40)
    dt_validade_carteira = models.DateField(blank=True, null=True)
    nu_cns = models.CharField(max_length=15, blank=True, null=True)
    nu_cgc_cpf_executante = models.CharField(max_length=14)
    nm_executante = models.CharField(max_length=70)
    nu_cnes_executante = models.CharField(max_length=7, blank=True, null=True)
    cd_tipo_logradouro = models.CharField(max_length=3, blank=True, null=True)
    ds_tipo_logradouro = models.CharField(max_length=40, blank=True, null=True)
    nu_numero_endereco = models.CharField(max_length=5, blank=True, null=True)
    ds_compl_endereco = models.CharField(max_length=15, blank=True, null=True)
    nm_municipio = models.CharField(max_length=40, blank=True, null=True)
    cd_uf_endereco = models.CharField(max_length=2, blank=True, null=True)
    cd_ibge = models.CharField(max_length=7, blank=True, null=True)
    nu_cep = models.CharField(max_length=8, blank=True, null=True)
    fl_carater_internacao = models.CharField(max_length=1, blank=True, null=True)
    cd_tipo_acomodacao = models.CharField(max_length=2, blank=True, null=True)
    dt_internacao = models.DateField(blank=True, null=True)
    dt_alta_internacao = models.DateField(blank=True, null=True)
    cd_tipo_internacao = models.CharField(max_length=2, blank=True, null=True)
    cd_regime_internacao = models.CharField(max_length=1, blank=True, null=True)
    cd_internacao_obstetrica = models.CharField(max_length=1, blank=True, null=True)
    cd_obito_em_mulher = models.CharField(max_length=1, blank=True, null=True)
    qt_obito_neonatal = models.NullBooleanField()
    nu_decl_nascido_vivo = models.CharField(max_length=15, blank=True, null=True)
    qt_nascido_vivo = models.IntegerField(blank=True, null=True)
    qt_nascido_morto = models.IntegerField(blank=True, null=True)
    qt_nascido_prematuro = models.IntegerField(blank=True, null=True)
    nm_tabela_diagnostico = models.CharField(max_length=10, blank=True, null=True)
    cd_cid10_principal = models.CharField(max_length=5, blank=True, null=True)
    cd_cid10_segundo_dgn = models.CharField(max_length=5, blank=True, null=True)
    cd_cid10_terceiro_dgn = models.CharField(max_length=5, blank=True, null=True)
    cd_cid10_quardo_dgn = models.CharField(max_length=5, blank=True, null=True)
    cd_indicador_acidente = models.CharField(max_length=1, blank=True, null=True)
    cd_motivo_saida_interna = models.CharField(max_length=2, blank=True, null=True)
    cd_cid10_obito = models.CharField(max_length=5, blank=True, null=True)
    nu_declaracao_obito = models.CharField(max_length=7, blank=True, null=True)
    cd_tipo_faturamento = models.CharField(max_length=1, blank=True, null=True)
    cd_tipo_consulta = models.CharField(max_length=1, blank=True, null=True)
    cd_tipo_saida = models.NullBooleanField()
    tl_guia_servicos = models.FloatField(blank=True, null=True)
    tl_guia_diarias = models.FloatField(blank=True, null=True)
    tl_guia_taxas = models.FloatField(blank=True, null=True)
    tl_guia_mat = models.FloatField(blank=True, null=True)
    tl_guia_med = models.FloatField(blank=True, null=True)
    tl_guia_gases = models.FloatField(blank=True, null=True)
    cd_prestador_na_operadora = models.CharField(max_length=20, blank=True, null=True)
    nu_grupo_guias = models.FloatField(blank=True, null=True)
    cd_tipo_atendimento = models.CharField(max_length=2, blank=True, null=True)
    fl_atendimento_rn = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ident_guia_ans'


class TbIdentResumoIntAns(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans')
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_seq_registro = models.FloatField(blank=True, null=True)
    nu_registro_ans = models.CharField(max_length=6)
    dt_emissao_guia = models.DateField()
    dt_autorizacao_guia = models.DateField(blank=True, null=True)
    nu_guia_prestador = models.CharField(max_length=20, blank=True, null=True)
    nu_guia_solicitacao = models.CharField(max_length=20, blank=True, null=True)
    cd_senha = models.CharField(max_length=20, blank=True, null=True)
    dt_validade_senha = models.DateField(blank=True, null=True)
    nu_cartao_beneficiario = models.CharField(max_length=20)
    nm_beneficiario = models.CharField(max_length=70, blank=True, null=True)
    nm_plano = models.CharField(max_length=40)
    dt_validade_carteira = models.DateField(blank=True, null=True)
    nu_cns = models.CharField(max_length=15, blank=True, null=True)
    nu_cgc_cpf_executante = models.CharField(max_length=14)
    nm_executante = models.CharField(max_length=70)
    nu_cnes_executante = models.CharField(max_length=7, blank=True, null=True)
    cd_tipo_logradouro = models.CharField(max_length=3, blank=True, null=True)
    ds_tipo_logradouro = models.CharField(max_length=40, blank=True, null=True)
    nu_numero_endereco = models.CharField(max_length=5, blank=True, null=True)
    ds_compl_endereco = models.CharField(max_length=15, blank=True, null=True)
    nm_municipio = models.CharField(max_length=40, blank=True, null=True)
    cd_uf_endereco = models.CharField(max_length=2, blank=True, null=True)
    cd_ibge = models.CharField(max_length=7, blank=True, null=True)
    nu_cep = models.CharField(max_length=8, blank=True, null=True)
    fl_carater_internacao = models.CharField(max_length=1)
    cd_tipo_acomodacao = models.CharField(max_length=2)
    dt_internacao = models.DateField()
    dt_alta_internacao = models.DateField(blank=True, null=True)
    cd_tipo_internacao = models.CharField(max_length=1)
    cd_regime_internacao = models.CharField(max_length=1)
    cd_interbacao_obstetrica = models.CharField(max_length=1, blank=True, null=True)
    cd_obito_em_mulher = models.CharField(max_length=1, blank=True, null=True)
    qt_obito_neonatal = models.NullBooleanField()
    nu_decl_nascido_vivo = models.CharField(max_length=15, blank=True, null=True)
    qt_nascido_vivo = models.IntegerField(blank=True, null=True)
    qt_nascido_morto = models.IntegerField(blank=True, null=True)
    qt_nascido_prematuro = models.IntegerField(blank=True, null=True)
    cd_cid10_principal = models.CharField(max_length=5)
    cd_cid10_segundo_dgn = models.CharField(max_length=5, blank=True, null=True)
    cd_cid10_terceiro_dgn = models.CharField(max_length=5, blank=True, null=True)
    cd_cid10_quardo_dgn = models.CharField(max_length=5, blank=True, null=True)
    cd_indicador_acidente = models.CharField(max_length=1, blank=True, null=True)
    cd_motivo_saida_interna = models.CharField(max_length=2)
    cd_cid10_obito = models.CharField(max_length=5, blank=True, null=True)
    nu_declaracao_obito = models.CharField(max_length=7, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ident_resumo_int_ans'


class TbIdentSolicIntAns(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans')
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_seq_registro = models.FloatField(blank=True, null=True)
    nu_registro_ans = models.CharField(max_length=6)
    nu_guia = models.CharField(max_length=20, blank=True, null=True)
    nu_guia_principal = models.CharField(max_length=20, blank=True, null=True)
    dt_autorizacao = models.DateField(blank=True, null=True)
    cd_senha = models.CharField(max_length=20, blank=True, null=True)
    dt_validade_senha = models.DateField(blank=True, null=True)
    dt_emissao_guia = models.DateField()
    nu_carteira = models.CharField(max_length=20)
    nm_plano = models.CharField(max_length=40)
    dt_validade_carteira = models.DateField(blank=True, null=True)
    nm_beneficiario = models.CharField(max_length=70, blank=True, null=True)
    nu_cartao_nac_saude = models.CharField(max_length=15, blank=True, null=True)
    nu_cgc_cpf_solicitante = models.CharField(max_length=14)
    nm_solicitante = models.CharField(max_length=70)
    nu_cnes_solicitante = models.CharField(max_length=7, blank=True, null=True)
    cd_tipo_logradouro = models.CharField(max_length=3, blank=True, null=True)
    ds_tipo_logradouro = models.CharField(max_length=40, blank=True, null=True)
    nu_numero_endereco = models.CharField(max_length=5, blank=True, null=True)
    ds_compl_endereco = models.CharField(max_length=15, blank=True, null=True)
    nm_municipio = models.CharField(max_length=40, blank=True, null=True)
    cd_uf_endereco = models.CharField(max_length=2, blank=True, null=True)
    cd_ibge = models.CharField(max_length=7, blank=True, null=True)
    nu_cep = models.CharField(max_length=8, blank=True, null=True)
    nm_profissional = models.CharField(max_length=70, blank=True, null=True)
    cd_conselho_prof = models.CharField(max_length=7, blank=True, null=True)
    nu_conselho = models.CharField(max_length=15, blank=True, null=True)
    cd_uf_conselho = models.CharField(max_length=2, blank=True, null=True)
    cd_cbo_s = models.CharField(max_length=5, blank=True, null=True)
    nu_cgc_cpf_solicitado = models.CharField(max_length=14, blank=True, null=True)
    nm_prestador = models.CharField(max_length=70, blank=True, null=True)
    fl_carater_internacao = models.CharField(max_length=1)
    cd_tipo_internacao = models.CharField(max_length=1)
    cd_regime_internacao = models.CharField(max_length=1)
    qt_diarias_solicitadas = models.IntegerField()
    ds_indicacao_clinica = models.CharField(max_length=500)
    tp_doenca = models.CharField(max_length=1, blank=True, null=True)
    qt_tempo_doenca = models.CharField(max_length=1, blank=True, null=True)
    fl_indicador_acidente = models.CharField(max_length=1, blank=True, null=True)
    cd_cid10_principal = models.CharField(max_length=5)
    cd_cid10_segundo_dgn = models.CharField(max_length=5, blank=True, null=True)
    cd_cid10_terceiro_dgn = models.CharField(max_length=5, blank=True, null=True)
    dt_admissao_hospitalar = models.DateField()
    qt_diaria_autorizada = models.CharField(max_length=3)
    cd_tipo_acomodacao = models.CharField(max_length=2, blank=True, null=True)
    nu_cgc_cpf_prestador = models.CharField(max_length=14, blank=True, null=True)
    nm_prestador_autorizado = models.CharField(max_length=70)
    nu_cnes_prestador = models.CharField(max_length=7, blank=True, null=True)
    ds_observacao = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ident_solic_int_ans'


class TbIgnoraRestricaoSa(models.Model):
    cd_restricao = models.CharField(primary_key=True, max_length=3)

    class Meta:
        managed = False
        db_table = 'tb_ignora_restricao_sa'


class TbImagem(models.Model):
    cd_imagem = models.FloatField(primary_key=True)
    nm_imagem = models.CharField(max_length=100, blank=True, null=True)
    ds_imagem = models.CharField(max_length=4000, blank=True, null=True)
    cd_grupo_imagem = models.ForeignKey(TbGrupoImagem, models.DO_NOTHING, db_column='cd_grupo_imagem', blank=True, null=True)
    im_imagem = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_imagem'


class TbImagemAmostra(models.Model):
    cd_id = models.FloatField(primary_key=True)
    cd_lote = models.ForeignKey(TbAmostraRast, models.DO_NOTHING, db_column='cd_lote')
    cd_amostra = models.ForeignKey(TbAmostraRast, models.DO_NOTHING, db_column='cd_amostra')
    cd_tubo_coleta = models.ForeignKey(TbAmostraRast, models.DO_NOTHING, db_column='cd_tubo_coleta')
    dt_imagem = models.DateField()
    cd_operador = models.CharField(max_length=30)
    nm_arquivo = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_imagem_amostra'


class TbImagemAmostraAux(models.Model):
    cd_id = models.FloatField()
    im_amostra = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_imagem_amostra_aux'


class TbImagemAux(models.Model):
    cd_imagem_aux = models.FloatField(primary_key=True)
    im_arquivo = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_imagem_aux'


class TbImagemDigital(models.Model):
    cd_pessoa = models.FloatField(primary_key=True)
    dt_inc_img = models.DateField()
    im_digital = models.TextField(blank=True, null=True)  # This field type is a guess.
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    ds_terminal = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_imagem_digital'


class TbImagemDigitalBkp(models.Model):
    cd_pessoa = models.FloatField()
    dt_inc_img = models.DateField()
    im_digital = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'tb_imagem_digital_bkp'


class TbImagemDigitalTransf(models.Model):
    cd_pessoa = models.FloatField(blank=True, null=True)
    dt_inc_img = models.DateField(blank=True, null=True)
    tip_transf = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_imagem_digital_transf'


class TbImagemPessoa(models.Model):
    cd_paciente = models.ForeignKey('TbPaciente', models.DO_NOTHING, db_column='cd_paciente', primary_key=True)
    dt_inc_img = models.DateField()
    cd_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cd_operador', blank=True, null=True)
    im_pessoa = models.TextField(blank=True, null=True)  # This field type is a guess.
    cd_senha_master = models.IntegerField(blank=True, null=True)
    cd_tipo_imagem_pessoa = models.ForeignKey('TbTipoImagemPessoa', models.DO_NOTHING, db_column='cd_tipo_imagem_pessoa', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_imagem_pessoa'
        unique_together = (('cd_paciente', 'dt_inc_img'),)


class TbImagemPreCadHapvida(models.Model):
    nu_cpf = models.FloatField(primary_key=True)
    nu_controle = models.FloatField()
    nu_seq_doc = models.FloatField()
    im_arquivo = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_imagem_pre_cad_hapvida'
        unique_together = (('nu_cpf', 'nu_controle', 'nu_seq_doc'),)


class TbImagemProtJuri(models.Model):
    cd_doc_prot_juri = models.FloatField(primary_key=True)
    im_arquivo = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_imagem_prot_juri'


class TbImpDocOutrosConvenios(models.Model):
    cd_imp_doc_ocvns = models.IntegerField(primary_key=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento')
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio')
    fl_encerrado_via_mobile = models.CharField(max_length=1)
    fl_pendente_impressao = models.CharField(max_length=1)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_imp_doc_outros_convenios'


class TbImportaCardiosErro(models.Model):
    cd_erro = models.FloatField()
    ds_erro = models.CharField(max_length=1000)
    dt_erro = models.DateField()
    na_accessionnumber = models.CharField(max_length=50, blank=True, null=True)
    cd_paciente = models.FloatField(blank=True, null=True)
    nu_cpf = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_importa_cardios_erro'


class TbImposto(models.Model):
    cd_imposto = models.IntegerField(primary_key=True)
    nm_imposto = models.CharField(max_length=30)
    fl_areceber = models.CharField(max_length=1, blank=True, null=True)
    fl_apagar = models.CharField(max_length=1, blank=True, null=True)
    vl_min_imposto = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_imposto'


class TbImpostoConvenio(models.Model):
    cd_convenio = models.IntegerField(primary_key=True)
    cd_imposto = models.IntegerField()
    dt_vigencia = models.DateField()
    pc_aliquota = models.DecimalField(max_digits=10, decimal_places=5, blank=True, null=True)
    cd_item_incide = models.IntegerField(blank=True, null=True)
    fl_indica_base_calc = models.CharField(max_length=1, blank=True, null=True)
    tp_operacao = models.CharField(max_length=1, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_imposto_convenio'
        unique_together = (('cd_convenio', 'cd_imposto', 'dt_vigencia'),)


class TbImpostoRenda(models.Model):
    dt_vigencia_ir = models.DateField(primary_key=True)
    vl_piso_calculo = models.DecimalField(max_digits=18, decimal_places=2)
    vl_teto_calculo = models.DecimalField(max_digits=18, decimal_places=2)
    pc_aliquota_piso = models.DecimalField(max_digits=3, decimal_places=1)
    vl_parcela_piso = models.DecimalField(max_digits=18, decimal_places=2)
    pc_aliquota_teto = models.DecimalField(max_digits=3, decimal_places=1)
    vl_parcela_teto = models.DecimalField(max_digits=18, decimal_places=2)

    class Meta:
        managed = False
        db_table = 'tb_imposto_renda'


class TbImpressaoPresc(models.Model):
    cd_atendimento = models.IntegerField()
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem_prescricao = models.IntegerField()
    cd_ordem_prescricao_pai = models.IntegerField(blank=True, null=True)
    nu_prescricao_medica = models.IntegerField()
    dt_prescricao = models.DateField()
    hr_prescricao = models.IntegerField()
    hora = models.CharField(max_length=4000, blank=True, null=True)
    tipo = models.CharField(max_length=10, blank=True, null=True)
    status = models.CharField(max_length=7, blank=True, null=True)
    nm_avaliacao = models.CharField(max_length=255, blank=True, null=True)
    cd_profissional = models.IntegerField()
    cd_ordem_dieta = models.FloatField(blank=True, null=True)
    cd_ordem_prescricao_plano = models.FloatField(blank=True, null=True)
    cd_ordem_proc_plano_uso_o = models.FloatField(blank=True, null=True)
    cd_ordem_hv = models.FloatField(blank=True, null=True)
    cd_ordem_alta_o = models.FloatField(blank=True, null=True)
    cd_ordem_impressao_o = models.FloatField(blank=True, null=True)
    cd_ordem_impressao_item_o = models.FloatField(blank=True, null=True)
    nu_ordem_apresentacao = models.FloatField(blank=True, null=True)
    nm_dieta = models.CharField(max_length=200, blank=True, null=True)
    nr_unidade_usual_d = models.CharField(max_length=20, blank=True, null=True)
    nu_frequencia = models.CharField(max_length=82, blank=True, null=True)
    qt_dieta = models.IntegerField(blank=True, null=True)
    ds_observacao_d = models.CharField(max_length=2000, blank=True, null=True)
    cd_mnemonico = models.CharField(max_length=6, blank=True, null=True)
    fl_status_uso_d = models.CharField(max_length=1, blank=True, null=True)
    fl_rotina_rg = models.CharField(max_length=15, blank=True, null=True)
    fl_impresso_d = models.CharField(max_length=1, blank=True, null=True)
    cd_proc_plano_pai_s = models.IntegerField(blank=True, null=True)
    cd_procedimento_s = models.CharField(max_length=8, blank=True, null=True)
    nr_procedimento_s = models.CharField(max_length=240, blank=True, null=True)
    dt_inicio_s = models.DateField(blank=True, null=True)
    hr_inicio_s = models.IntegerField(blank=True, null=True)
    dt_fim_s = models.DateField(blank=True, null=True)
    hr_fim_s = models.CharField(max_length=4000, blank=True, null=True)
    ds_observacao_s = models.CharField(max_length=2000, blank=True, null=True)
    fl_status_uso_s = models.CharField(max_length=1, blank=True, null=True)
    qt_procedimento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    unidade_ms = models.CharField(max_length=20, blank=True, null=True)
    frequencia_ms = models.CharField(max_length=82, blank=True, null=True)
    fl_impresso_s = models.CharField(max_length=1, blank=True, null=True)
    cd_proc_plano_pai_r = models.IntegerField(blank=True, null=True)
    cd_procedimetno_r = models.CharField(max_length=8, blank=True, null=True)
    nr_procedimento_r = models.CharField(max_length=240, blank=True, null=True)
    dt_inicio_r = models.DateField(blank=True, null=True)
    hr_inicio_r = models.IntegerField(blank=True, null=True)
    dt_fim_r = models.DateField(blank=True, null=True)
    hr_fim_r = models.CharField(max_length=4000, blank=True, null=True)
    ds_observacao_r = models.CharField(max_length=2000, blank=True, null=True)
    fl_status_uso_r = models.CharField(max_length=1, blank=True, null=True)
    qt_procedimento_pm = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    unidade_pm = models.CharField(max_length=20, blank=True, null=True)
    frequencia_pm = models.CharField(max_length=82, blank=True, null=True)
    fl_impresso_r = models.CharField(max_length=1, blank=True, null=True)
    cd_prescricao_plano_pai = models.IntegerField(blank=True, null=True)
    dt_inicio_uso = models.DateField(blank=True, null=True)
    hr_inicio_uso = models.IntegerField(blank=True, null=True)
    dt_fim_uso = models.DateField(blank=True, null=True)
    hr_fim_uso = models.IntegerField(blank=True, null=True)
    cd_mat_med_m = models.IntegerField(blank=True, null=True)
    qt_frequencia_uso_m = models.CharField(max_length=82, blank=True, null=True)
    cd_unidade_usual_m = models.CharField(max_length=2, blank=True, null=True)
    cd_tipo_acesso_m = models.IntegerField(blank=True, null=True)
    qt_dosagem_m = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_diluicao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.IntegerField(blank=True, null=True)
    gotejamento_m = models.CharField(max_length=81, blank=True, null=True)
    dt_revisao_prescricao = models.DateField(blank=True, null=True)
    fl_necessario_m = models.CharField(max_length=2, blank=True, null=True)
    fl_acm_m = models.CharField(max_length=3, blank=True, null=True)
    fl_diluicao = models.CharField(max_length=1, blank=True, null=True)
    fl_alergia = models.CharField(max_length=1, blank=True, null=True)
    fl_periodo = models.CharField(max_length=1, blank=True, null=True)
    qt_reconstituicao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    ds_observacao_imp = models.CharField(max_length=2000, blank=True, null=True)
    nm_produto_m = models.CharField(max_length=289, blank=True, null=True)
    cd_principio_ativo = models.IntegerField(blank=True, null=True)
    cd_ocorrencia_diluicao = models.IntegerField(blank=True, null=True)
    cd_ordem_administracao = models.IntegerField(blank=True, null=True)
    cd_diluente = models.IntegerField(blank=True, null=True)
    cd_ordem_proc_plano_uso_m = models.IntegerField(blank=True, null=True)
    fl_status_uso_m = models.CharField(max_length=1, blank=True, null=True)
    fl_bomba_infusao_m = models.CharField(max_length=5, blank=True, null=True)
    nr_unidade_usual_m = models.CharField(max_length=8, blank=True, null=True)
    fl_impresso_m = models.CharField(max_length=1, blank=True, null=True)
    nm_tipo_alta = models.CharField(max_length=30, blank=True, null=True)
    cd_tipo_alta = models.IntegerField(blank=True, null=True)
    cd_posto_destino = models.CharField(max_length=6, blank=True, null=True)
    dt_alta_medica = models.DateField(blank=True, null=True)
    hr_alta_medica = models.IntegerField(blank=True, null=True)
    cd_profissional_alta = models.IntegerField(blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    fl_status_uso_a = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem_impressao_a = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item_a = models.IntegerField(blank=True, null=True)
    hora_alta = models.CharField(max_length=4000, blank=True, null=True)
    nm_profissional_alta = models.CharField(max_length=45, blank=True, null=True)
    nm_profissional_cancelou = models.CharField(max_length=45, blank=True, null=True)
    vol_soros_glicosados = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    vig = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    fases = models.CharField(max_length=7, blank=True, null=True)
    bi = models.CharField(max_length=5, blank=True, null=True)
    gotejamento_h = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    ls_gotejamento = models.CharField(max_length=10, blank=True, null=True)
    vol_total = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    codigo = models.IntegerField(blank=True, null=True)
    medicamento = models.CharField(max_length=240, blank=True, null=True)
    qt_dosagem_hv = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    unidade_usual_hv = models.CharField(max_length=29, blank=True, null=True)
    qt_dosagem_h = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    unidade_usual = models.CharField(max_length=20, blank=True, null=True)
    status_uso = models.CharField(max_length=1, blank=True, null=True)
    status_uso_hv = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_mat_med_c = models.FloatField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=4000, blank=True, null=True)
    qt_composicao = models.IntegerField(blank=True, null=True)
    cd_unidade_usual_c = models.CharField(max_length=2, blank=True, null=True)
    cd_ordem_proc_plano_uso_mm = models.IntegerField(blank=True, null=True)
    qt_frequencia_uso_mm = models.CharField(max_length=82, blank=True, null=True)
    nr_unidade_usual_mm = models.CharField(max_length=20, blank=True, null=True)
    nm_tipo_acesso_mm = models.CharField(max_length=40, blank=True, null=True)
    qt_dosagem_mm = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    fl_necessario_mm = models.CharField(max_length=2, blank=True, null=True)
    fl_acm_mm = models.CharField(max_length=3, blank=True, null=True)
    nm_produto_mm = models.CharField(max_length=289, blank=True, null=True)
    fl_bomba_infusao_mm = models.CharField(max_length=5, blank=True, null=True)
    qt_peso_kg_registrado = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    nm_tipo_acesso_infusao_hv = models.CharField(max_length=30, blank=True, null=True)
    nr_unidade_usual_c = models.CharField(max_length=20, blank=True, null=True)
    ds_observacao_item_hv = models.CharField(max_length=2000, blank=True, null=True)
    nm_tipo_fase = models.CharField(max_length=30, blank=True, null=True)
    qt_gotejamento_d = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    qt_tempo_gotej_d = models.IntegerField(blank=True, null=True)
    ls_gotejamento_d = models.CharField(max_length=30, blank=True, null=True)
    nr_unidade_gotej_d = models.CharField(max_length=30, blank=True, null=True)
    dt_hr_suspensao_d = models.DateField(blank=True, null=True)
    dt_hr_suspensao_s = models.DateField(blank=True, null=True)
    dt_hr_suspensao_r = models.DateField(blank=True, null=True)
    dt_hr_suspensao_m = models.DateField(blank=True, null=True)
    dt_hr_suspensao_hv = models.DateField(blank=True, null=True)
    qt_tempo_fase_rapida_hv = models.IntegerField(blank=True, null=True)
    nm_unid_fase_rapida_hv = models.CharField(max_length=15, blank=True, null=True)
    fl_bomba_infusao_d = models.CharField(max_length=5, blank=True, null=True)
    fl_necessario_hv = models.CharField(max_length=2, blank=True, null=True)
    fl_acm_hv = models.CharField(max_length=3, blank=True, null=True)
    ds_apres_ud_fazer_retirar_m = models.CharField(max_length=4, blank=True, null=True)
    fl_com_enterofix_d = models.CharField(max_length=20, blank=True, null=True)
    fl_com_equipo_bomba_d = models.CharField(max_length=20, blank=True, null=True)
    fl_necessario_s = models.CharField(max_length=2, blank=True, null=True)
    fl_acm_s = models.CharField(max_length=3, blank=True, null=True)
    fl_bureta_m = models.CharField(max_length=10, blank=True, null=True)
    hr_alta_apartir_a = models.IntegerField(blank=True, null=True)
    ds_observacao_alta_a = models.CharField(max_length=2000, blank=True, null=True)
    cd_ordem1 = models.IntegerField(blank=True, null=True)
    cd_ordem2 = models.IntegerField(blank=True, null=True)
    cd_ordem3 = models.IntegerField(blank=True, null=True)
    cd_ordem4 = models.IntegerField(blank=True, null=True)
    cd_ordem5 = models.IntegerField(blank=True, null=True)
    cd_ordem6 = models.IntegerField(blank=True, null=True)
    cd_ordem7 = models.IntegerField(blank=True, null=True)
    cd_ordem8 = models.IntegerField(blank=True, null=True)
    cd_ordem9 = models.IntegerField(blank=True, null=True)
    cd_ordem10 = models.IntegerField(blank=True, null=True)
    cd_ordem11 = models.IntegerField(blank=True, null=True)
    cd_ordem12 = models.IntegerField(blank=True, null=True)
    cd_ordem13 = models.IntegerField(blank=True, null=True)
    cd_ordem14 = models.IntegerField(blank=True, null=True)
    cd_ordem15 = models.IntegerField(blank=True, null=True)
    cd_ordem16 = models.IntegerField(blank=True, null=True)
    cd_ordem17 = models.IntegerField(blank=True, null=True)
    cd_ordem18 = models.IntegerField(blank=True, null=True)
    cd_ordem19 = models.IntegerField(blank=True, null=True)
    cd_ordem20 = models.IntegerField(blank=True, null=True)
    cd_ordem21 = models.IntegerField(blank=True, null=True)
    cd_ordem22 = models.IntegerField(blank=True, null=True)
    cd_ordem23 = models.IntegerField(blank=True, null=True)
    cd_ordem24 = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_impressao_presc'


class TbImpressaoPrescModelo(models.Model):
    cd_modelo = models.IntegerField()
    ds_modelo = models.CharField(max_length=100, blank=True, null=True)
    dt_prescricao = models.DateField()
    hr_prescricao = models.IntegerField()
    hora = models.CharField(max_length=4000, blank=True, null=True)
    tipo = models.CharField(max_length=10, blank=True, null=True)
    status = models.CharField(max_length=7, blank=True, null=True)
    nm_avaliacao = models.CharField(max_length=255, blank=True, null=True)
    cd_profissional = models.IntegerField()
    cd_ordem_dieta = models.FloatField(blank=True, null=True)
    cd_ordem_prescricao_plano = models.FloatField(blank=True, null=True)
    cd_ordem_proc_plano_uso_o = models.FloatField(blank=True, null=True)
    cd_ordem_hv = models.FloatField(blank=True, null=True)
    cd_ordem_impressao_o = models.FloatField(blank=True, null=True)
    cd_ordem_impressao_item_o = models.FloatField(blank=True, null=True)
    nu_ordem_apresentacao = models.FloatField(blank=True, null=True)
    nm_dieta = models.CharField(max_length=200, blank=True, null=True)
    nr_unidade_usual_d = models.CharField(max_length=20, blank=True, null=True)
    nu_frequencia = models.CharField(max_length=82, blank=True, null=True)
    qt_dieta = models.IntegerField(blank=True, null=True)
    ds_observacao_d = models.CharField(max_length=120, blank=True, null=True)
    cd_mnemonico = models.CharField(max_length=6, blank=True, null=True)
    fl_status_uso_d = models.CharField(max_length=1, blank=True, null=True)
    fl_rotina_rg = models.CharField(max_length=15, blank=True, null=True)
    fl_impresso_d = models.CharField(max_length=1, blank=True, null=True)
    cd_proc_plano_pai_s = models.IntegerField(blank=True, null=True)
    cd_procedimento_s = models.CharField(max_length=8, blank=True, null=True)
    nr_procedimento_s = models.CharField(max_length=120, blank=True, null=True)
    dt_inicio_s = models.DateField(blank=True, null=True)
    hr_inicio_s = models.IntegerField(blank=True, null=True)
    dt_fim_s = models.DateField(blank=True, null=True)
    hr_fim_s = models.CharField(max_length=4000, blank=True, null=True)
    ds_observacao_s = models.CharField(max_length=120, blank=True, null=True)
    fl_status_uso_s = models.CharField(max_length=1, blank=True, null=True)
    qt_procedimento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    unidade_ms = models.CharField(max_length=20, blank=True, null=True)
    frequencia_ms = models.CharField(max_length=82, blank=True, null=True)
    fl_impresso_s = models.CharField(max_length=1, blank=True, null=True)
    cd_proc_plano_pai_r = models.IntegerField(blank=True, null=True)
    cd_procedimetno_r = models.CharField(max_length=8, blank=True, null=True)
    nr_procedimento_r = models.CharField(max_length=120, blank=True, null=True)
    dt_inicio_r = models.DateField(blank=True, null=True)
    hr_inicio_r = models.IntegerField(blank=True, null=True)
    dt_fim_r = models.DateField(blank=True, null=True)
    hr_fim_r = models.CharField(max_length=4000, blank=True, null=True)
    ds_observacao_r = models.CharField(max_length=120, blank=True, null=True)
    fl_status_uso_r = models.CharField(max_length=1, blank=True, null=True)
    qt_procedimento_pm = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    unidade_pm = models.CharField(max_length=20, blank=True, null=True)
    frequencia_pm = models.CharField(max_length=82, blank=True, null=True)
    fl_impresso_r = models.CharField(max_length=1, blank=True, null=True)
    cd_prescricao_plano_pai = models.IntegerField(blank=True, null=True)
    dt_inicio_uso = models.DateField(blank=True, null=True)
    hr_inicio_uso = models.IntegerField(blank=True, null=True)
    dt_fim_uso = models.DateField(blank=True, null=True)
    hr_fim_uso = models.IntegerField(blank=True, null=True)
    cd_mat_med_m = models.IntegerField(blank=True, null=True)
    qt_frequencia_uso_m = models.CharField(max_length=82, blank=True, null=True)
    cd_unidade_usual_m = models.CharField(max_length=2, blank=True, null=True)
    cd_tipo_acesso_m = models.IntegerField(blank=True, null=True)
    qt_dosagem_m = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_diluicao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.IntegerField(blank=True, null=True)
    gotejamento_m = models.CharField(max_length=81, blank=True, null=True)
    dt_revisao_prescricao = models.DateField(blank=True, null=True)
    fl_necessario_m = models.CharField(max_length=2, blank=True, null=True)
    fl_acm_m = models.CharField(max_length=3, blank=True, null=True)
    fl_diluicao = models.CharField(max_length=1, blank=True, null=True)
    fl_alergia = models.CharField(max_length=1, blank=True, null=True)
    fl_periodo = models.CharField(max_length=1, blank=True, null=True)
    qt_reconstituicao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    ds_observacao_imp = models.CharField(max_length=500, blank=True, null=True)
    nm_produto_m = models.CharField(max_length=289, blank=True, null=True)
    cd_principio_ativo = models.IntegerField(blank=True, null=True)
    cd_ocorrencia_diluicao = models.IntegerField(blank=True, null=True)
    cd_ordem_administracao = models.IntegerField(blank=True, null=True)
    cd_diluente = models.IntegerField(blank=True, null=True)
    cd_ordem_proc_plano_uso_m = models.IntegerField(blank=True, null=True)
    fl_status_uso_m = models.CharField(max_length=1, blank=True, null=True)
    fl_bomba_infusao_m = models.CharField(max_length=5, blank=True, null=True)
    nr_unidade_usual_m = models.CharField(max_length=8, blank=True, null=True)
    fl_impresso_m = models.CharField(max_length=1, blank=True, null=True)
    nm_tipo_alta = models.CharField(max_length=30, blank=True, null=True)
    cd_tipo_alta = models.IntegerField(blank=True, null=True)
    cd_posto_destino = models.CharField(max_length=6, blank=True, null=True)
    dt_alta_medica = models.DateField(blank=True, null=True)
    hr_alta_medica = models.IntegerField(blank=True, null=True)
    cd_profissional_alta = models.IntegerField(blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    fl_status_uso_a = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem_impressao_a = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item_a = models.IntegerField(blank=True, null=True)
    hora_alta = models.CharField(max_length=4000, blank=True, null=True)
    nm_profissional_alta = models.CharField(max_length=45, blank=True, null=True)
    nm_profissional_cancelou = models.CharField(max_length=45, blank=True, null=True)
    vol_soros_glicosados = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    vig = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    fases = models.CharField(max_length=7, blank=True, null=True)
    bi = models.CharField(max_length=5, blank=True, null=True)
    gotejamento_h = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    ls_gotejamento = models.CharField(max_length=10, blank=True, null=True)
    vol_total = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    codigo = models.IntegerField(blank=True, null=True)
    medicamento = models.CharField(max_length=240, blank=True, null=True)
    qt_dosagem_hv = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    unidade_usual_hv = models.CharField(max_length=29, blank=True, null=True)
    qt_dosagem_h = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    unidade_usual = models.CharField(max_length=20, blank=True, null=True)
    status_uso = models.CharField(max_length=1, blank=True, null=True)
    status_uso_hv = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_mat_med_c = models.FloatField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=4000, blank=True, null=True)
    qt_composicao = models.IntegerField(blank=True, null=True)
    cd_unidade_usual_c = models.CharField(max_length=2, blank=True, null=True)
    cd_ordem_proc_plano_uso_mm = models.IntegerField(blank=True, null=True)
    qt_frequencia_uso_mm = models.CharField(max_length=82, blank=True, null=True)
    nr_unidade_usual_mm = models.CharField(max_length=20, blank=True, null=True)
    nm_tipo_acesso_mm = models.CharField(max_length=40, blank=True, null=True)
    qt_dosagem_mm = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    fl_necessario_mm = models.CharField(max_length=2, blank=True, null=True)
    fl_acm_mm = models.CharField(max_length=3, blank=True, null=True)
    nm_produto_mm = models.CharField(max_length=289, blank=True, null=True)
    fl_bomba_infusao_mm = models.CharField(max_length=5, blank=True, null=True)
    qt_peso_kg_registrado = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    nm_tipo_acesso_infusao_hv = models.CharField(max_length=30, blank=True, null=True)
    nr_unidade_usual_c = models.CharField(max_length=20, blank=True, null=True)
    ds_observacao_item_hv = models.CharField(max_length=120, blank=True, null=True)
    nm_tipo_fase = models.CharField(max_length=30, blank=True, null=True)
    qt_gotejamento_d = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    qt_tempo_gotej_d = models.IntegerField(blank=True, null=True)
    ls_gotejamento_d = models.CharField(max_length=30, blank=True, null=True)
    nr_unidade_gotej_d = models.CharField(max_length=30, blank=True, null=True)
    dt_hr_suspensao_d = models.DateField(blank=True, null=True)
    dt_hr_suspensao_s = models.DateField(blank=True, null=True)
    dt_hr_suspensao_r = models.DateField(blank=True, null=True)
    dt_hr_suspensao_m = models.DateField(blank=True, null=True)
    dt_hr_suspensao_hv = models.DateField(blank=True, null=True)
    qt_tempo_fase_rapida_hv = models.IntegerField(blank=True, null=True)
    nm_unid_fase_rapida_hv = models.CharField(max_length=15, blank=True, null=True)
    fl_bomba_infusao_d = models.CharField(max_length=5, blank=True, null=True)
    fl_necessario_hv = models.CharField(max_length=2, blank=True, null=True)
    fl_acm_hv = models.CharField(max_length=3, blank=True, null=True)
    ds_apres_ud_fazer_retirar_m = models.CharField(max_length=4, blank=True, null=True)
    fl_com_enterofix_d = models.CharField(max_length=20, blank=True, null=True)
    fl_com_equipo_bomba_d = models.CharField(max_length=20, blank=True, null=True)
    fl_necessario_s = models.CharField(max_length=2, blank=True, null=True)
    fl_acm_s = models.CharField(max_length=3, blank=True, null=True)
    fl_bureta_m = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_impressao_presc_modelo'


class TbImpressaoProtocolo(models.Model):
    cd_agenda = models.IntegerField()
    cd_modelo = models.IntegerField()
    cd_ordem_prescricao_pai = models.IntegerField(blank=True, null=True)
    hora = models.CharField(max_length=4000, blank=True, null=True)
    tipo = models.CharField(max_length=10, blank=True, null=True)
    status = models.CharField(max_length=7, blank=True, null=True)
    nm_avaliacao = models.CharField(max_length=255, blank=True, null=True)
    cd_profissional = models.IntegerField()
    cd_ordem_dieta = models.FloatField(blank=True, null=True)
    cd_ordem_prescricao_plano = models.FloatField(blank=True, null=True)
    cd_ordem_proc_plano_uso_o = models.FloatField(blank=True, null=True)
    cd_ordem_hv = models.FloatField(blank=True, null=True)
    cd_ordem_alta_o = models.FloatField(blank=True, null=True)
    cd_ordem_impressao_o = models.FloatField(blank=True, null=True)
    cd_ordem_impressao_item_o = models.FloatField(blank=True, null=True)
    nu_ordem_apresentacao = models.FloatField(blank=True, null=True)
    nm_dieta = models.CharField(max_length=200, blank=True, null=True)
    nr_unidade_usual_d = models.CharField(max_length=20, blank=True, null=True)
    nu_frequencia = models.CharField(max_length=82, blank=True, null=True)
    qt_dieta = models.IntegerField(blank=True, null=True)
    ds_observacao_d = models.CharField(max_length=120, blank=True, null=True)
    cd_mnemonico = models.CharField(max_length=6, blank=True, null=True)
    fl_status_uso_d = models.CharField(max_length=1, blank=True, null=True)
    fl_rotina_rg = models.CharField(max_length=15, blank=True, null=True)
    fl_impresso_d = models.CharField(max_length=1, blank=True, null=True)
    cd_proc_plano_pai_s = models.IntegerField(blank=True, null=True)
    cd_procedimento_s = models.CharField(max_length=8, blank=True, null=True)
    nr_procedimento_s = models.CharField(max_length=120, blank=True, null=True)
    dt_inicio_s = models.DateField(blank=True, null=True)
    hr_inicio_s = models.IntegerField(blank=True, null=True)
    dt_fim_s = models.DateField(blank=True, null=True)
    hr_fim_s = models.CharField(max_length=4000, blank=True, null=True)
    ds_observacao_s = models.CharField(max_length=120, blank=True, null=True)
    fl_status_uso_s = models.CharField(max_length=1, blank=True, null=True)
    qt_procedimento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    unidade_ms = models.CharField(max_length=20, blank=True, null=True)
    frequencia_ms = models.CharField(max_length=82, blank=True, null=True)
    fl_impresso_s = models.CharField(max_length=1, blank=True, null=True)
    cd_proc_plano_pai_r = models.IntegerField(blank=True, null=True)
    cd_procedimetno_r = models.CharField(max_length=8, blank=True, null=True)
    nr_procedimento_r = models.CharField(max_length=120, blank=True, null=True)
    dt_inicio_r = models.DateField(blank=True, null=True)
    hr_inicio_r = models.IntegerField(blank=True, null=True)
    dt_fim_r = models.DateField(blank=True, null=True)
    hr_fim_r = models.CharField(max_length=4000, blank=True, null=True)
    ds_observacao_r = models.CharField(max_length=120, blank=True, null=True)
    fl_status_uso_r = models.CharField(max_length=1, blank=True, null=True)
    qt_procedimento_pm = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    unidade_pm = models.CharField(max_length=20, blank=True, null=True)
    frequencia_pm = models.CharField(max_length=82, blank=True, null=True)
    fl_impresso_r = models.CharField(max_length=1, blank=True, null=True)
    cd_prescricao_plano_pai = models.IntegerField(blank=True, null=True)
    dt_inicio_uso = models.DateField(blank=True, null=True)
    hr_inicio_uso = models.IntegerField(blank=True, null=True)
    dt_fim_uso = models.DateField(blank=True, null=True)
    hr_fim_uso = models.IntegerField(blank=True, null=True)
    cd_mat_med_m = models.IntegerField(blank=True, null=True)
    qt_frequencia_uso_m = models.CharField(max_length=82, blank=True, null=True)
    cd_unidade_usual_m = models.CharField(max_length=2, blank=True, null=True)
    cd_tipo_acesso_m = models.IntegerField(blank=True, null=True)
    qt_dosagem_m = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_diluicao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.IntegerField(blank=True, null=True)
    gotejamento_m = models.CharField(max_length=81, blank=True, null=True)
    dt_revisao_prescricao = models.DateField(blank=True, null=True)
    fl_necessario_m = models.CharField(max_length=2, blank=True, null=True)
    fl_acm_m = models.CharField(max_length=3, blank=True, null=True)
    fl_diluicao = models.CharField(max_length=1, blank=True, null=True)
    fl_alergia = models.CharField(max_length=1, blank=True, null=True)
    fl_periodo = models.CharField(max_length=1, blank=True, null=True)
    qt_reconstituicao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    ds_observacao_imp = models.CharField(max_length=500, blank=True, null=True)
    nm_produto_m = models.CharField(max_length=289, blank=True, null=True)
    cd_principio_ativo = models.IntegerField(blank=True, null=True)
    cd_ocorrencia_diluicao = models.IntegerField(blank=True, null=True)
    cd_ordem_administracao = models.IntegerField(blank=True, null=True)
    cd_diluente = models.IntegerField(blank=True, null=True)
    cd_ordem_proc_plano_uso_m = models.IntegerField(blank=True, null=True)
    fl_status_uso_m = models.CharField(max_length=1, blank=True, null=True)
    fl_bomba_infusao_m = models.CharField(max_length=5, blank=True, null=True)
    nr_unidade_usual_m = models.CharField(max_length=8, blank=True, null=True)
    fl_impresso_m = models.CharField(max_length=1, blank=True, null=True)
    nm_tipo_alta = models.CharField(max_length=30, blank=True, null=True)
    cd_tipo_alta = models.IntegerField(blank=True, null=True)
    cd_posto_destino = models.CharField(max_length=6, blank=True, null=True)
    dt_alta_medica = models.DateField(blank=True, null=True)
    hr_alta_medica = models.IntegerField(blank=True, null=True)
    cd_profissional_alta = models.IntegerField(blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    fl_status_uso_a = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem_impressao_a = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item_a = models.IntegerField(blank=True, null=True)
    hora_alta = models.CharField(max_length=4000, blank=True, null=True)
    nm_profissional_alta = models.CharField(max_length=45, blank=True, null=True)
    nm_profissional_cancelou = models.CharField(max_length=45, blank=True, null=True)
    vol_soros_glicosados = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    vig = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    fases = models.CharField(max_length=7, blank=True, null=True)
    bi = models.CharField(max_length=5, blank=True, null=True)
    gotejamento_h = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    ls_gotejamento = models.CharField(max_length=10, blank=True, null=True)
    vol_total = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    codigo = models.IntegerField(blank=True, null=True)
    medicamento = models.CharField(max_length=240, blank=True, null=True)
    qt_dosagem_hv = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    unidade_usual_hv = models.CharField(max_length=29, blank=True, null=True)
    qt_dosagem_h = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    unidade_usual = models.CharField(max_length=20, blank=True, null=True)
    status_uso = models.CharField(max_length=1, blank=True, null=True)
    status_uso_hv = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_mat_med_c = models.FloatField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=4000, blank=True, null=True)
    qt_composicao = models.IntegerField(blank=True, null=True)
    cd_unidade_usual_c = models.CharField(max_length=2, blank=True, null=True)
    cd_ordem_proc_plano_uso_mm = models.IntegerField(blank=True, null=True)
    qt_frequencia_uso_mm = models.CharField(max_length=82, blank=True, null=True)
    nr_unidade_usual_mm = models.CharField(max_length=20, blank=True, null=True)
    nm_tipo_acesso_mm = models.CharField(max_length=40, blank=True, null=True)
    qt_dosagem_mm = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    fl_necessario_mm = models.CharField(max_length=2, blank=True, null=True)
    fl_acm_mm = models.CharField(max_length=3, blank=True, null=True)
    nm_produto_mm = models.CharField(max_length=289, blank=True, null=True)
    fl_bomba_infusao_mm = models.CharField(max_length=5, blank=True, null=True)
    qt_peso_kg_registrado = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    nm_tipo_acesso_infusao_hv = models.CharField(max_length=30, blank=True, null=True)
    nr_unidade_usual_c = models.CharField(max_length=20, blank=True, null=True)
    ds_observacao_item_hv = models.CharField(max_length=120, blank=True, null=True)
    nm_tipo_fase = models.CharField(max_length=30, blank=True, null=True)
    qt_gotejamento_d = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    qt_tempo_gotej_d = models.IntegerField(blank=True, null=True)
    ls_gotejamento_d = models.CharField(max_length=30, blank=True, null=True)
    nr_unidade_gotej_d = models.CharField(max_length=30, blank=True, null=True)
    dt_hr_suspensao_d = models.DateField(blank=True, null=True)
    dt_hr_suspensao_s = models.DateField(blank=True, null=True)
    dt_hr_suspensao_r = models.DateField(blank=True, null=True)
    dt_hr_suspensao_m = models.DateField(blank=True, null=True)
    dt_hr_suspensao_hv = models.DateField(blank=True, null=True)
    qt_tempo_fase_rapida_hv = models.IntegerField(blank=True, null=True)
    nm_unid_fase_rapida_hv = models.CharField(max_length=15, blank=True, null=True)
    fl_bomba_infusao_d = models.CharField(max_length=5, blank=True, null=True)
    fl_necessario_hv = models.CharField(max_length=2, blank=True, null=True)
    fl_acm_hv = models.CharField(max_length=3, blank=True, null=True)
    ds_apres_ud_fazer_retirar_m = models.CharField(max_length=4, blank=True, null=True)
    fl_com_enterofix_d = models.CharField(max_length=20, blank=True, null=True)
    fl_com_equipo_bomba_d = models.CharField(max_length=20, blank=True, null=True)
    fl_necessario_s = models.CharField(max_length=2, blank=True, null=True)
    fl_acm_s = models.CharField(max_length=3, blank=True, null=True)
    fl_bureta_m = models.CharField(max_length=10, blank=True, null=True)
    hr_alta_apartir_a = models.IntegerField(blank=True, null=True)
    ds_observacao_alta_a = models.CharField(max_length=2000, blank=True, null=True)
    cd_ordem1 = models.IntegerField(blank=True, null=True)
    cd_ordem2 = models.IntegerField(blank=True, null=True)
    cd_ordem3 = models.IntegerField(blank=True, null=True)
    cd_ordem4 = models.IntegerField(blank=True, null=True)
    cd_ordem5 = models.IntegerField(blank=True, null=True)
    cd_ordem6 = models.IntegerField(blank=True, null=True)
    cd_ordem7 = models.IntegerField(blank=True, null=True)
    cd_ordem8 = models.IntegerField(blank=True, null=True)
    cd_ordem9 = models.IntegerField(blank=True, null=True)
    cd_ordem10 = models.IntegerField(blank=True, null=True)
    cd_ordem11 = models.IntegerField(blank=True, null=True)
    cd_ordem12 = models.IntegerField(blank=True, null=True)
    cd_ordem13 = models.IntegerField(blank=True, null=True)
    cd_ordem14 = models.IntegerField(blank=True, null=True)
    cd_ordem15 = models.IntegerField(blank=True, null=True)
    cd_ordem16 = models.IntegerField(blank=True, null=True)
    cd_ordem17 = models.IntegerField(blank=True, null=True)
    cd_ordem18 = models.IntegerField(blank=True, null=True)
    cd_ordem19 = models.IntegerField(blank=True, null=True)
    cd_ordem20 = models.IntegerField(blank=True, null=True)
    cd_ordem21 = models.IntegerField(blank=True, null=True)
    cd_ordem22 = models.IntegerField(blank=True, null=True)
    cd_ordem23 = models.IntegerField(blank=True, null=True)
    cd_ordem24 = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_impressao_protocolo'


class TbImpressaoPulseiraMobile(models.Model):
    cd_impressao_pulseira = models.IntegerField(primary_key=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento')
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor')
    fl_pendente_impressao = models.CharField(max_length=1)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_impressao_pulseira_mobile'


class TbImprimeDocumento(models.Model):
    nu_transacao = models.FloatField(primary_key=True)
    nu_documento_id = models.FloatField(blank=True, null=True)
    fl_acesso = models.CharField(max_length=1, blank=True, null=True)
    nm_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    nm_terminal = models.CharField(max_length=256, blank=True, null=True)
    ip_terminal = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_imprime_documento'


class TbIndHospitalarUnidade(models.Model):
    cd_unidade = models.FloatField(primary_key=True)
    origem = models.FloatField()
    fl_ativo = models.CharField(max_length=1)
    dt_modificacao = models.DateField(blank=True, null=True)
    cd_usuario_modificacao = models.CharField(max_length=12, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ind_hospitalar_unidade'


class TbIndicacaoTerapeutica(models.Model):
    cd_indicacao_terapeutica = models.IntegerField(primary_key=True)
    nm_indicacao_terapeutica = models.CharField(max_length=120)

    class Meta:
        managed = False
        db_table = 'tb_indicacao_terapeutica'


class TbIndicadorAcidenteAns(models.Model):
    cd_indicador_acidente = models.IntegerField(primary_key=True)
    ds_indicador_acidente = models.CharField(max_length=60)

    class Meta:
        managed = False
        db_table = 'tb_indicador_acidente_ans'


class TbIndicadorHospitalar(models.Model):
    cd_indicador_hospitalar = models.FloatField(primary_key=True)
    ds_indicador_hospitalar = models.CharField(max_length=100, blank=True, null=True)
    cd_item_indicador_num = models.ForeignKey('TbItemIndicadorHospitalar', models.DO_NOTHING, db_column='cd_item_indicador_num', blank=True, null=True)
    cd_item_indicador_den = models.ForeignKey('TbItemIndicadorHospitalar', models.DO_NOTHING, db_column='cd_item_indicador_den', blank=True, null=True)
    fl_ccih = models.CharField(max_length=1)
    multiplicador = models.FloatField(blank=True, null=True)
    nm_tela = models.CharField(max_length=20, blank=True, null=True)
    nm_relatorio = models.CharField(max_length=20, blank=True, null=True)
    fl_qualiss = models.CharField(max_length=1)
    cd_sigla_indicador = models.CharField(max_length=10, blank=True, null=True)
    fl_hotelaria = models.CharField(max_length=1)
    cd_tela_inclusao = models.CharField(max_length=16, blank=True, null=True)
    cd_local_indicador = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_indicador_hospitalar'


class TbIndicadorHospitalarItem(models.Model):
    cd_indicador_hospitalar = models.ForeignKey(TbIndicadorHospitalar, models.DO_NOTHING, db_column='cd_indicador_hospitalar', primary_key=True)
    cd_filial = models.ForeignKey('TbUf', models.DO_NOTHING, db_column='cd_filial')
    cd_unidade = models.FloatField()
    ano = models.FloatField()
    mes = models.FloatField()
    meta = models.FloatField(blank=True, null=True)
    variacao = models.FloatField(blank=True, null=True)
    dt_modificacao = models.DateField(blank=True, null=True)
    cd_usuario_modificacao = models.CharField(max_length=12, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_indicador_hospitalar_item'
        unique_together = (('cd_indicador_hospitalar', 'cd_filial', 'cd_unidade', 'ano', 'mes'),)


class TbInfeccaoHospitalar(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.BooleanField()
    cd_local_infeccao = models.ForeignKey('TbLocalInfeccao', models.DO_NOTHING, db_column='cd_local_infeccao', blank=True, null=True)
    fl_tipo_infeccao = models.CharField(max_length=1, blank=True, null=True)
    fl_cirurgia = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_cirurgia = models.CharField(max_length=1, blank=True, null=True)
    fl_condicoes_cirurgia = models.NullBooleanField()
    fl_infec_retardou_alta = models.CharField(max_length=1, blank=True, null=True)
    fl_rx_sala_cirurgia = models.CharField(max_length=1, blank=True, null=True)
    ds_complic_pos_infec = models.CharField(max_length=2000, blank=True, null=True)
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_infeccao_hospitalar'
        unique_together = (('cd_atendimento', 'cd_ocorrencia'),)


class TbInfoRelHigienizacao(models.Model):
    cd_solicitacao = models.BigIntegerField(blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_acomodacao = models.CharField(max_length=6, blank=True, null=True)
    fl_interditado = models.CharField(max_length=5, blank=True, null=True)
    nm_operador_atendimento = models.CharField(max_length=10, blank=True, null=True)
    ds_operador = models.CharField(max_length=500, blank=True, null=True)
    dt_hr_solic_interditado = models.CharField(max_length=50, blank=True, null=True)
    fl_banheiro_desinterditado = models.CharField(max_length=5, blank=True, null=True)
    dt_hr_solic_desinterditado = models.CharField(max_length=50, blank=True, null=True)
    nm_ope_solic_desinterditado = models.CharField(max_length=10, blank=True, null=True)
    ds_ope_solic_desinterditado = models.CharField(max_length=500, blank=True, null=True)
    vl_intervalo_interditado = models.CharField(max_length=1000, blank=True, null=True)
    nm_operador_relatorio = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_info_rel_higienizacao'


class TbInspecaoFarmaciaPostos(models.Model):
    cd_setor = models.CharField(max_length=6)
    nu_protocolo = models.IntegerField()
    ds_observacao = models.CharField(max_length=500, blank=True, null=True)
    cd_usuario = models.CharField(max_length=10, blank=True, null=True)
    cd_devolucao = models.IntegerField(blank=True, null=True)
    dt_inspecao = models.DateField(blank=True, null=True)
    hr_inspecao = models.IntegerField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_inspecao_farmacia_postos'


class TbInstrumento(models.Model):
    instrumento = models.CharField(max_length=6)
    nm_instrumento = models.CharField(max_length=40)
    caminho = models.CharField(max_length=255)
    formato_arquivo = models.CharField(max_length=8)
    extensao = models.CharField(max_length=3)
    ultimo_arquivo = models.IntegerField()
    faixa = models.IntegerField()
    diretorio_transferencia = models.CharField(max_length=255, blank=True, null=True)
    fl_libera_automatico = models.CharField(max_length=1, blank=True, null=True)
    ds_diretorio_geracao = models.CharField(max_length=255, blank=True, null=True)
    cd_filial = models.CharField(primary_key=True, max_length=3)
    directories_filial = models.CharField(max_length=30, blank=True, null=True)
    path_filial = models.CharField(max_length=255, blank=True, null=True)
    directories_backuplis = models.CharField(max_length=255, blank=True, null=True)
    fl_job = models.CharField(max_length=1)
    empresa = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_instrumento'
        unique_together = (('cd_filial', 'instrumento'),)


class TbInterfaceamentoCorrecao(models.Model):
    cd_interfaceamento_erro = models.FloatField(primary_key=True)
    ds_correcao = models.CharField(max_length=2048, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_correcao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_interfaceamento_correcao'


class TbInterfaceamentoErro(models.Model):
    cd_interfaceamento_erro = models.FloatField(primary_key=True)
    cd_processo = models.CharField(max_length=30)
    cd_erro = models.CharField(max_length=3, blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    nm_arquivo = models.CharField(max_length=150, blank=True, null=True)
    ds_erro = models.CharField(max_length=2048, blank=True, null=True)
    dt_erro = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_interfaceamento_erro'


class TbItemApuracaoLeitosPostos(models.Model):
    cd_posto = models.CharField(max_length=6)
    dt_apuracao = models.DateField()
    cd_atendimento = models.IntegerField()
    cd_ocorrencia = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_item_apuracao_leitos_postos'


class TbItemArquivo(models.Model):
    cd_item_arquivo = models.IntegerField(primary_key=True)
    nm_item_arquivo_cli = models.CharField(max_length=30)
    nm_item_arquivo_dgn = models.CharField(max_length=30, blank=True, null=True)
    fl_tipo_arquivo = models.CharField(max_length=1, blank=True, null=True)
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans', blank=True, null=True)
    nm_item_arq_unificado = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_arquivo'


class TbItemAvaliacao(models.Model):
    cd_avaliacao = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_nivel_avaliacao = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.IntegerField()
    cd_ordem_pai = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_ordem_pai', blank=True, null=True)
    nm_item_avaliacao = models.CharField(max_length=160)
    cd_componente_avaliacao = models.ForeignKey(TbComponenteAvaliacao, models.DO_NOTHING, db_column='cd_componente_avaliacao', blank=True, null=True)
    ds_formula = models.CharField(max_length=2000, blank=True, null=True)
    fl_formula = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_atributo = models.CharField(max_length=20)
    fl_tipo_valor = models.CharField(max_length=20)
    ds_instrucao = models.CharField(max_length=2000, blank=True, null=True)
    nu_ordem_apresentacao = models.IntegerField(blank=True, null=True)
    cd_tipo_informacao = models.ForeignKey('TbTipoInformacao', models.DO_NOTHING, db_column='cd_tipo_informacao', blank=True, null=True)
    ds_item_avaliacao = models.CharField(max_length=240, blank=True, null=True)
    fl_tipo_formula = models.CharField(max_length=2, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_unidade_usual = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_usual', blank=True, null=True)
    ds_valor_parametro = models.CharField(max_length=2000, blank=True, null=True)
    vl_parametro_minimo_h = models.IntegerField(blank=True, null=True)
    vl_parametro_maximo_h = models.IntegerField(blank=True, null=True)
    vl_parametro_minimo_m = models.IntegerField(blank=True, null=True)
    vl_parametro_maximo_m = models.IntegerField(blank=True, null=True)
    vl_parametro_minimo_a = models.IntegerField(blank=True, null=True)
    vl_parametro_maximo_a = models.IntegerField(blank=True, null=True)
    vl_parametro_minimo_c = models.IntegerField(blank=True, null=True)
    vl_parametro_maximo_c = models.IntegerField(blank=True, null=True)
    vl_parametro_minimo_rn = models.IntegerField(blank=True, null=True)
    vl_parametro_maximo_rn = models.IntegerField(blank=True, null=True)
    vl_parametro_minimo_lactente = models.IntegerField(blank=True, null=True)
    vl_parametro_maximo_lactente = models.IntegerField(blank=True, null=True)
    fl_unidade_tempo = models.CharField(max_length=1, blank=True, null=True)
    qt_idade_inicial = models.IntegerField(blank=True, null=True)
    qt_idade_final = models.IntegerField(blank=True, null=True)
    vl_formula = models.CharField(max_length=240, blank=True, null=True)
    qt_decimal = models.NullBooleanField()
    ds_valida_item = models.CharField(max_length=2000, blank=True, null=True)
    ds_query_item = models.CharField(max_length=2000, blank=True, null=True)
    ds_mensagem_item = models.CharField(max_length=500, blank=True, null=True)
    fl_formulario = models.CharField(max_length=1, blank=True, null=True)
    fl_mutiplo_valor = models.CharField(max_length=1)
    cd_grupo_cid10 = models.CharField(max_length=4000, blank=True, null=True)
    cd_subgrupo_cid10 = models.CharField(max_length=4000, blank=True, null=True)
    cd_categoria_cid10 = models.CharField(max_length=4000, blank=True, null=True)
    fl_tipo_grafico = models.CharField(max_length=1, blank=True, null=True)
    cd_grupo_nanda = models.CharField(max_length=4000, blank=True, null=True)
    cd_nanda = models.CharField(max_length=4000, blank=True, null=True)
    fl_resultado_acumulado = models.CharField(max_length=1, blank=True, null=True)
    sinal_balanco = models.CharField(max_length=1, blank=True, null=True)
    nm_formulario = models.CharField(max_length=30, blank=True, null=True)
    ds_ref_retorno_formulario = models.CharField(max_length=60, blank=True, null=True)
    fl_obrigatorio = models.CharField(max_length=1, blank=True, null=True)
    cd_tipo_solicitacao = models.ForeignKey('TbTipoSolicServicos', models.DO_NOTHING, db_column='cd_tipo_solicitacao', blank=True, null=True)
    cd_avaliacao_referenciada = models.ForeignKey(TbAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao_referenciada', blank=True, null=True)
    fl_tipo_alerta_intervalo = models.NullBooleanField()
    fl_bloqueia_fora_intervalo = models.CharField(max_length=1, blank=True, null=True)
    ds_mensagem_fora_intervalo = models.CharField(max_length=2000, blank=True, null=True)
    id_componente = models.CharField(max_length=2000, blank=True, null=True)
    fl_herda_valor = models.CharField(max_length=1, blank=True, null=True)
    fl_abrangencia_heranca = models.CharField(max_length=1, blank=True, null=True)
    fl_ocorrencia_heranca = models.CharField(max_length=1, blank=True, null=True)
    ds_sql_exec = models.CharField(max_length=4000, blank=True, null=True)
    fl_sql_exec_acao = models.CharField(max_length=1, blank=True, null=True)
    cd_index_nm = models.IntegerField(blank=True, null=True)
    fl_padrao = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_aprazamento_padrao = models.CharField(max_length=1, blank=True, null=True)
    qt_frequencia_padrao = models.IntegerField(blank=True, null=True)
    fl_expandir = models.CharField(max_length=1, blank=True, null=True)
    simbolo = models.CharField(max_length=3, blank=True, null=True)
    fl_mostra = models.CharField(max_length=1, blank=True, null=True)
    fl_sql_exec_acao_unit = models.CharField(max_length=1, blank=True, null=True)
    fl_copia = models.CharField(max_length=1, blank=True, null=True)
    fl_realca = models.CharField(max_length=50, blank=True, null=True)
    nm_itens_exclusivos = models.CharField(max_length=50, blank=True, null=True)
    fl_nao_mostrar_result_se_check = models.CharField(max_length=1, blank=True, null=True)
    fl_nao_imprime = models.CharField(max_length=1, blank=True, null=True)
    fl_obrigatorio_max = models.CharField(max_length=1, blank=True, null=True)
    fl_sql_exec_acao_del = models.CharField(max_length=1, blank=True, null=True)
    fl_sql_exec_acao_upd = models.CharField(max_length=1, blank=True, null=True)
    fl_importa_notnull = models.CharField(max_length=1, blank=True, null=True)
    campo_sam = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_avaliacao'
        unique_together = (('cd_avaliacao', 'cd_nivel_avaliacao', 'cd_ordem'),)


class TbItemAvaliacaoClasse(models.Model):
    cd_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_nivel_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_ordem')
    cd_classe_acomodacao = models.ForeignKey(TbClasseAcomodacao, models.DO_NOTHING, db_column='cd_classe_acomodacao')
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial')

    class Meta:
        managed = False
        db_table = 'tb_item_avaliacao_classe'
        unique_together = (('cd_avaliacao', 'cd_nivel_avaliacao', 'cd_ordem', 'cd_classe_acomodacao', 'cd_filial'),)


class TbItemAvaliacaoHtml(models.Model):
    cd_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_nivel_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_ordem')
    ds_html_label_before = models.TextField(blank=True, null=True)
    ds_html_label_style = models.TextField(blank=True, null=True)
    ds_html_label_after = models.TextField(blank=True, null=True)
    ds_html_item_before = models.TextField(blank=True, null=True)
    ds_html_item_style = models.TextField(blank=True, null=True)
    ds_html_item_after = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_avaliacao_html'
        unique_together = (('cd_avaliacao', 'cd_nivel_avaliacao', 'cd_ordem'),)


class TbItemAvaliacaoImagem(models.Model):
    cd_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_nivel_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_ordem')
    im_padrao = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_avaliacao_imagem'
        unique_together = (('cd_avaliacao', 'cd_nivel_avaliacao', 'cd_ordem'),)


class TbItemAvaliacaoIntervalo(models.Model):
    cd_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_nivel_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_ordem')
    cd_ordem_faixa = models.IntegerField()
    nu_faixa_etaria_i = models.IntegerField(blank=True, null=True)
    nu_faixa_etaria_f = models.IntegerField(blank=True, null=True)
    cd_unidade_faixa_etaria = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_faixa_etaria', blank=True, null=True)
    fl_sexo = models.CharField(max_length=1, blank=True, null=True)
    vl_minimo = models.IntegerField(blank=True, null=True)
    vl_maximo = models.IntegerField(blank=True, null=True)
    cd_unidade_valores = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_valores', blank=True, null=True)
    ds_mensagem_fora_intervalo = models.CharField(max_length=2000, blank=True, null=True)
    fl_bloqueia_fora_intervalo = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_alerta_intervalo = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_avaliacao_intervalo'
        unique_together = (('cd_avaliacao', 'cd_nivel_avaliacao', 'cd_ordem', 'cd_ordem_faixa'),)


class TbItemAvaliacaoLocal(models.Model):
    cd_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_nivel_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_ordem')
    cd_local_atendimento = models.ForeignKey(TbGrupoAtendimentoSa, models.DO_NOTHING, db_column='cd_local_atendimento')
    cd_grupo_atendimento = models.ForeignKey(TbGrupoAtendimentoSa, models.DO_NOTHING, db_column='cd_grupo_atendimento')

    class Meta:
        managed = False
        db_table = 'tb_item_avaliacao_local'
        unique_together = (('cd_avaliacao', 'cd_nivel_avaliacao', 'cd_ordem', 'cd_local_atendimento', 'cd_grupo_atendimento'),)


class TbItemAvaliacaoProcs(models.Model):
    cd_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_nivel_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_ordem')
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')

    class Meta:
        managed = False
        db_table = 'tb_item_avaliacao_procs'
        unique_together = (('cd_avaliacao', 'cd_nivel_avaliacao', 'cd_ordem', 'cd_procedimento'),)


class TbItemCodBarra(models.Model):
    cd_codigo_barra = models.CharField(primary_key=True, max_length=100)
    cd_requisicao = models.IntegerField(blank=True, null=True)
    dt_gravacao = models.DateField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=15, blank=True, null=True)
    cd_setor_destino = models.CharField(max_length=6, blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    cd_ocorrencia = models.IntegerField()
    cd_transferencia = models.IntegerField(blank=True, null=True)
    cd_devolucao = models.IntegerField(blank=True, null=True)
    fl_caixa = models.CharField(max_length=1, blank=True, null=True)
    cd_ajuste = models.FloatField(blank=True, null=True)
    fl_ajuste = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_cod_barra'
        unique_together = (('cd_codigo_barra', 'cd_ocorrencia'),)


class TbItemCodBarraTmp(models.Model):
    cd_material = models.FloatField(primary_key=True)
    cd_codigo_barra = models.CharField(max_length=100)
    dt_gravacao = models.DateField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=15, blank=True, null=True)
    cd_setor_destino = models.CharField(max_length=6, blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    cd_ocorrencia = models.IntegerField()
    fl_ajuste = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_cod_barra_tmp'
        unique_together = (('cd_material', 'cd_codigo_barra', 'cd_ocorrencia'),)


class TbItemContratoFornecedor(models.Model):
    cd_lista = models.CharField(primary_key=True, max_length=15)
    cd_material = models.FloatField()
    dt_ult_alter = models.DateField(blank=True, null=True)
    vl_unit = models.FloatField(blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_contrato_fornecedor'
        unique_together = (('cd_lista', 'cd_material'),)


class TbItemDescontoPagAns(models.Model):
    nu_registro_ans = models.CharField(primary_key=True, max_length=6)
    nu_demonstrativo = models.CharField(max_length=20)
    nm_descricao = models.CharField(max_length=40)
    vl_desconto = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_desconto_pag_ans'
        unique_together = (('nu_registro_ans', 'nu_demonstrativo', 'nm_descricao'),)


class TbItemEmprestimo(models.Model):
    nu_protocolo = models.IntegerField(primary_key=True)
    cd_material = models.FloatField()
    cd_ordem = models.IntegerField()
    cd_lote = models.CharField(max_length=20, blank=True, null=True)
    dt_validade_lote = models.DateField(blank=True, null=True)
    qt_material = models.IntegerField(blank=True, null=True)
    fl_tipo = models.CharField(max_length=1, blank=True, null=True)
    qt_devolvido = models.IntegerField(blank=True, null=True)
    fl_devolvido = models.CharField(max_length=1, blank=True, null=True)
    cd_marca = models.ForeignKey('TbMarca', models.DO_NOTHING, db_column='cd_marca', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_emprestimo'
        unique_together = (('nu_protocolo', 'cd_material', 'cd_ordem'),)


class TbItemExamePlanoUso(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem = models.IntegerField()
    cd_ordem_item = models.IntegerField()
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')
    qt_exame = models.IntegerField()
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    ds_justificativa = models.CharField(max_length=4000, blank=True, null=True)
    nm_usuario_coleta = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_usuario_coleta', blank=True, null=True)
    dt_hr_coleta = models.DateField(blank=True, null=True)
    cd_ordem_proced_hora = models.IntegerField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=240, blank=True, null=True)
    fl_lado_membro = models.CharField(max_length=1, blank=True, null=True)
    nu_pedido_gerado = models.FloatField(blank=True, null=True)
    fl_cancelado = models.CharField(max_length=1, blank=True, null=True)
    user_cancelou = models.CharField(max_length=30, blank=True, null=True)
    dt_canc_proced = models.DateField(blank=True, null=True)
    cd_lote_guia = models.FloatField(blank=True, null=True)
    cd_user_liberou_proc = models.CharField(max_length=30, blank=True, null=True)
    ds_justificativa_liberacao = models.CharField(max_length=1000, blank=True, null=True)
    cd_senha_autorizacao = models.CharField(max_length=200, blank=True, null=True)
    proced_auto = models.FloatField(blank=True, null=True)
    ds_just_coleta_ronda = models.CharField(max_length=1000, blank=True, null=True)
    ds_justificativa_cancelamento = models.CharField(max_length=2000, blank=True, null=True)
    fl_pedido_aut = models.CharField(max_length=1, blank=True, null=True)
    dt_autorizacao = models.DateField(blank=True, null=True)
    cd_risco = models.FloatField(blank=True, null=True)
    cd_operador_registra_senha = models.CharField(max_length=30, blank=True, null=True)
    cd_minenonico = models.CharField(max_length=50, blank=True, null=True)
    cd_pre_autorizacao = models.FloatField(blank=True, null=True)
    dt_nao_autoriza = models.DateField(blank=True, null=True)
    ds_justificativa_nao_autoriza = models.CharField(max_length=4000, blank=True, null=True)
    prescricao_pendente = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_exame_plano_uso'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem', 'cd_ordem_item'),)


class TbItemFiscal(models.Model):
    cd_item_fiscal = models.IntegerField(primary_key=True)
    nm_item_fiscal = models.CharField(max_length=43)
    nm_mnemonico = models.CharField(max_length=12, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_fiscal'


class TbItemGrupoImpressao(models.Model):
    cd_grupo_impressao = models.ForeignKey(TbGruposImpressao, models.DO_NOTHING, db_column='cd_grupo_impressao', primary_key=True)
    cd_ordem_item = models.IntegerField()
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', blank=True, null=True)
    nu_produto = models.ForeignKey('TbProduto', models.DO_NOTHING, db_column='nu_produto', blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    cd_grupo_farmacologico = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_grupo_impressao'
        unique_together = (('cd_grupo_impressao', 'cd_ordem_item'),)


class TbItemGrupoProcedimento(models.Model):
    cd_grupo_produto = models.ForeignKey(TbGrupoProduto, models.DO_NOTHING, db_column='cd_grupo_produto', primary_key=True)
    cd_procedimento = models.CharField(max_length=8)
    abreviatura = models.CharField(max_length=5, blank=True, null=True)
    fl_senha_coletor = models.CharField(max_length=1, blank=True, null=True)
    fl_libera_automatico = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_grupo_procedimento'
        unique_together = (('cd_grupo_produto', 'cd_procedimento'),)


class TbItemGrupoProduto(models.Model):
    cd_grupo_produto = models.ForeignKey(TbGrupoProduto, models.DO_NOTHING, db_column='cd_grupo_produto', primary_key=True)
    cd_produto = models.CharField(max_length=8)

    class Meta:
        managed = False
        db_table = 'tb_item_grupo_produto'
        unique_together = (('cd_grupo_produto', 'cd_produto'),)


class TbItemGrupoProdutoUnid(models.Model):
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento', primary_key=True)
    cd_grupo_produto = models.ForeignKey(TbGrupoProduto, models.DO_NOTHING, db_column='cd_grupo_produto', blank=True, null=True)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_grupo_produto_unid'
        unique_together = (('cd_unidade_atendimento', 'cd_procedimento', 'dt_ini_vigencia'),)


class TbItemIndHospResSitio(models.Model):
    cd_filial = models.IntegerField(primary_key=True)
    dt_ano_mes = models.CharField(max_length=7)
    cd_item_indicador = models.CharField(max_length=5)
    cd_ocorrencia = models.BigIntegerField()
    cd_sitio = models.ForeignKey('TbSitiosNniss', models.DO_NOTHING, db_column='cd_sitio')
    vl_resultado = models.DecimalField(max_digits=15, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_ind_hosp_res_sitio'
        unique_together = (('cd_filial', 'dt_ano_mes', 'cd_item_indicador', 'cd_ocorrencia', 'cd_sitio'),)


class TbItemIndicadorHospRes(models.Model):
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    dt_ano_mes = models.CharField(max_length=7)
    cd_item_indicador = models.ForeignKey('TbItemIndicadorHospitalar', models.DO_NOTHING, db_column='cd_item_indicador')
    cd_ocorrencia = models.BigIntegerField()
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)
    dt_ocorrencia = models.DateField(blank=True, null=True)
    vl_resultado = models.DecimalField(max_digits=15, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_indicador_hosp_res'
        unique_together = (('cd_filial', 'dt_ano_mes', 'cd_item_indicador', 'cd_ocorrencia'),)


class TbItemIndicadorHospitalar(models.Model):
    cd_item_indicador = models.CharField(primary_key=True, max_length=8)
    ds_item_indicador = models.CharField(max_length=100, blank=True, null=True)
    nm_funcao_indicador = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_indicador_hospitalar'


class TbItemKitAnestesiaLote(models.Model):
    id_kit_anest = models.ForeignKey('TmKitAnestesiaLote', models.DO_NOTHING, db_column='id_kit_anest', primary_key=True)
    cd_ordem = models.IntegerField()
    cd_material = models.IntegerField(blank=True, null=True)
    qt_material = models.FloatField(blank=True, null=True)
    cd_lote = models.CharField(max_length=20, blank=True, null=True)
    dt_validade_lote = models.DateField(blank=True, null=True)
    cd_codigo_barra = models.CharField(max_length=3000, blank=True, null=True)
    fl_material_devolvido = models.CharField(max_length=1, blank=True, null=True)
    qtd_material_devolvido = models.FloatField(blank=True, null=True)
    cd_setor_consignado = models.CharField(max_length=6, blank=True, null=True)
    cd_material_original = models.IntegerField(blank=True, null=True)
    qt_material_original = models.FloatField(blank=True, null=True)
    qtd_padrao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_kit_anestesia_lote'
        unique_together = (('id_kit_anest', 'cd_ordem'),)


class TbItemMalote(models.Model):
    cd_malote = models.ForeignKey('TbMalote', models.DO_NOTHING, db_column='cd_malote')
    nu_nota_fiscal = models.CharField(max_length=20)
    nu_cnpj = models.CharField(max_length=20)
    dt_emissao_nota = models.DateField()
    dt_processada = models.DateField()
    dt_recebida = models.DateField()
    cd_nota = models.FloatField(primary_key=True)
    cd_forncd = models.FloatField()
    cd_especie = models.CharField(max_length=10)
    fl_tipo = models.CharField(max_length=1)
    nm_obs = models.CharField(max_length=60, blank=True, null=True)
    cd_setor = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'tb_item_malote'
        unique_together = (('cd_nota', 'cd_malote'),)


class TbItemMatMed(models.Model):
    cd_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_mat_med', primary_key=True)
    cd_item_mat_med = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_item_mat_med')
    cd_unidade = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade')
    qt_unidade = models.FloatField()
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    fl_periodo = models.CharField(max_length=1, blank=True, null=True)
    ds_referencia_regra = models.CharField(max_length=120, blank=True, null=True)
    qt_limite_por_prescricao = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_mat_med'
        unique_together = (('cd_mat_med', 'cd_item_mat_med'),)


class TbItemMedAntimicrobiano(models.Model):
    cd_solicitacao = models.IntegerField(blank=True, null=True)
    cd_material = models.IntegerField(blank=True, null=True)
    dt_inicio_uso = models.DateField(blank=True, null=True)
    qt_dosagem = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    qt_intervalo_de = models.IntegerField(blank=True, null=True)
    qt_intervalo_ate = models.IntegerField(blank=True, null=True)
    dias_duracao = models.IntegerField(blank=True, null=True)
    dias_autorizado = models.IntegerField(blank=True, null=True)
    via = models.CharField(max_length=6, blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    ds_observacao = models.CharField(max_length=300, blank=True, null=True)
    cd_tipo_acesso = models.ForeignKey('TbTipoAcesso', models.DO_NOTHING, db_column='cd_tipo_acesso', blank=True, null=True)
    cd_atendimento = models.ForeignKey('TbPrescricaoPlano', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPrescricaoPlano', models.DO_NOTHING, db_column='cd_ocorrencia_plano', blank=True, null=True)
    cd_ordem_prescricao = models.ForeignKey('TbPrescricaoPlano', models.DO_NOTHING, db_column='cd_ordem_prescricao', blank=True, null=True)
    cd_ordem_prescricao_plano = models.ForeignKey('TbPrescricaoPlano', models.DO_NOTHING, db_column='cd_ordem_prescricao_plano', blank=True, null=True)
    ds_justificativa_solic = models.CharField(max_length=2000, blank=True, null=True)
    prof_validou = models.IntegerField(blank=True, null=True)
    dt_validacao = models.DateField(blank=True, null=True)
    usuario_ccih_autorizou = models.CharField(max_length=10, blank=True, null=True)
    dt_autorizacao_ccih = models.DateField(blank=True, null=True)
    dt_limite_uso = models.DateField(blank=True, null=True)
    dt_prorrogacao = models.DateField(blank=True, null=True)
    fl_tipo_adm = models.CharField(max_length=1, blank=True, null=True)
    fl_avisou_medico = models.CharField(max_length=1, blank=True, null=True)
    prof_prorrogou = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_med_antimicrobiano'


class TbItemMedUsoRestrito(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    nu_prescricao = models.FloatField()
    cd_material = models.FloatField()
    cd_indicacao = models.IntegerField()
    ds_justificativa = models.CharField(max_length=500, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_med_uso_restrito'
        unique_together = (('cd_atendimento', 'nu_prescricao', 'cd_material', 'cd_indicacao'),)


class TbItemMovAntiga(models.Model):
    cd_prontuario = models.CharField(primary_key=True, max_length=8)
    cd_seq_atend = models.IntegerField()
    cd_ordem = models.IntegerField()
    cd_item = models.CharField(max_length=8, blank=True, null=True)
    qt_item = models.DecimalField(max_digits=16, decimal_places=2, blank=True, null=True)
    vl_total = models.DecimalField(max_digits=16, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_mov_antiga'
        unique_together = (('cd_prontuario', 'cd_seq_atend', 'cd_ordem'),)


class TbItemNanda(models.Model):
    cd_grupo_nanda = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_grupo_nanda', primary_key=True)
    cd_ordem = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_ordem')
    cd_componente_avaliacao = models.ForeignKey(TbComponenteAvaliacao, models.DO_NOTHING, db_column='cd_componente_avaliacao')
    cd_componente_avaliacao_pai = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_componente_avaliacao_pai', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_nanda'
        unique_together = (('cd_grupo_nanda', 'cd_ordem', 'cd_componente_avaliacao'),)


class TbItemNotaFiscal(models.Model):
    cd_filial = models.ForeignKey('TbNotaFiscal', models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    cd_nota_fiscal = models.ForeignKey('TbNotaFiscal', models.DO_NOTHING, db_column='cd_nota_fiscal')
    cd_pessoa = models.ForeignKey('TbNotaFiscal', models.DO_NOTHING, db_column='cd_pessoa')
    cd_item_fiscal = models.ForeignKey(TbItemFiscal, models.DO_NOTHING, db_column='cd_item_fiscal')
    vl_base_calc_item = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_item_nota = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    nm_item_fiscal = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_nota_fiscal'
        unique_together = (('cd_filial', 'cd_nota_fiscal', 'cd_pessoa', 'cd_item_fiscal'),)


class TbItemObrigacao(models.Model):
    cd_obrigacao = models.ForeignKey('TmObrigacao', models.DO_NOTHING, db_column='cd_obrigacao', primary_key=True)
    cd_tipo_item_obrig = models.ForeignKey('TbTipoItemObrig', models.DO_NOTHING, db_column='cd_tipo_item_obrig')
    vl_item_obrigacao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_obrigacao'
        unique_together = (('cd_obrigacao', 'cd_tipo_item_obrig'),)


class TbItemParametroFormulario(models.Model):
    nm_item_parametro_formulario = models.CharField(primary_key=True, max_length=256)

    class Meta:
        managed = False
        db_table = 'tb_item_parametro_formulario'


class TbItemPedidoMatera(models.Model):
    id_forncd = models.IntegerField(primary_key=True)
    nu_contrato = models.FloatField()
    cd_ordem = models.IntegerField()
    id_pedido_compra = models.IntegerField(blank=True, null=True)
    cd_ano = models.IntegerField(blank=True, null=True)
    cd_mes = models.IntegerField(blank=True, null=True)
    fl_autoriza = models.CharField(max_length=1, blank=True, null=True)
    cd_usuario = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_pedido_matera'
        unique_together = (('id_forncd', 'nu_contrato', 'cd_ordem'),)


class TbItemPlanejOncologia(models.Model):
    cd_setor = models.CharField(primary_key=True, max_length=6)
    dt_inicial = models.DateField()
    dt_final = models.DateField()
    cd_ordem = models.IntegerField()
    cd_material = models.FloatField()
    fl_estabilidade = models.CharField(max_length=1)
    qt_estabilidade = models.FloatField()
    dt_agenda = models.DateField()
    cd_paciente = models.FloatField()
    cd_agenda = models.FloatField()
    qt_dosagem_padrao = models.FloatField(blank=True, null=True)
    qt_estab_padrao = models.FloatField(blank=True, null=True)
    qt_prescrita = models.FloatField(blank=True, null=True)
    qt_perdas = models.FloatField(blank=True, null=True)
    qt_sobras = models.FloatField(blank=True, null=True)
    cd_unidade = models.CharField(max_length=2, blank=True, null=True)
    qt_frascos = models.FloatField(blank=True, null=True)
    cd_ordem_rel = models.FloatField(blank=True, null=True)
    cd_ordem_estab = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_planej_oncologia'
        unique_together = (('cd_setor', 'dt_inicial', 'dt_final', 'cd_ordem', 'cd_material', 'fl_estabilidade', 'qt_estabilidade', 'dt_agenda', 'cd_paciente'),)


class TbItemProdutividadeMedica(models.Model):
    cd_produtividade = models.ForeignKey('TbProdutividadeMedica', models.DO_NOTHING, db_column='cd_produtividade', primary_key=True)
    cd_medico = models.ForeignKey('TbProdutividadeMedica', models.DO_NOTHING, db_column='cd_medico')
    cd_ocorrencia = models.FloatField()
    cd_tipo_produtividade = models.ForeignKey('TbTipoProdutividade', models.DO_NOTHING, db_column='cd_tipo_produtividade', blank=True, null=True)
    cd_grupo = models.IntegerField(blank=True, null=True)
    cd_produto = models.CharField(max_length=8, blank=True, null=True)
    cd_tipo_valor_fixo = models.FloatField(blank=True, null=True)
    qt_exames = models.FloatField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=255, blank=True, null=True)
    vl_movimento = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_saldo = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    cd_setor_origem = models.CharField(max_length=6, blank=True, null=True)
    cd_atendimento_proced = models.IntegerField(blank=True, null=True)
    cd_ocorrencia_proced = models.IntegerField(blank=True, null=True)
    cd_ordem_proced = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_produtividade_medica'
        unique_together = (('cd_produtividade', 'cd_medico', 'cd_ocorrencia'),)


class TbItemRegraAvalLocal(models.Model):
    cd_regra_aval_evolucao = models.ForeignKey('TbRegraAvalEvolucaoLocal', models.DO_NOTHING, db_column='cd_regra_aval_evolucao', primary_key=True)
    id_componente = models.CharField(max_length=2000, blank=True, null=True)
    cd_nivel_avaliacao = models.FloatField()
    cd_item_avaliacao = models.FloatField()
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_regra_aval_local'
        unique_together = (('cd_regra_aval_evolucao', 'cd_nivel_avaliacao', 'cd_item_avaliacao'),)


class TbItemRemessa(models.Model):
    nu_remessa = models.IntegerField(primary_key=True)
    cd_obrigacao = models.ForeignKey('TmObrigacao', models.DO_NOTHING, db_column='cd_obrigacao')
    cd_barras = models.CharField(max_length=44, blank=True, null=True)
    tp_registro = models.CharField(max_length=1, blank=True, null=True)
    cd_ocorrencia_remessa = models.IntegerField(blank=True, null=True)
    fl_ind_liquidacao = models.CharField(max_length=1, blank=True, null=True)
    cd_ocorrencia_titulo = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_remessa'
        unique_together = (('nu_remessa', 'cd_obrigacao'),)


class TbItemRemessaConvenio(models.Model):
    nu_remessa = models.IntegerField(primary_key=True)
    nu_item_remessa = models.IntegerField()
    qt_srv_prd = models.IntegerField(blank=True, null=True)
    qt_ch_prd = models.IntegerField(blank=True, null=True)
    vl_srv_prd = models.FloatField(blank=True, null=True)
    cd_obrigacao = models.ForeignKey('TmObrigacao', models.DO_NOTHING, db_column='cd_obrigacao', blank=True, null=True)
    vl_nota_debito = models.FloatField(blank=True, null=True)
    fl_gerou_arquivo = models.CharField(max_length=1, blank=True, null=True)
    fl_arq_unificado = models.CharField(max_length=1, blank=True, null=True)
    cd_usuario_liberou = models.CharField(max_length=30, blank=True, null=True)
    dt_usuario_liberou = models.DateField(blank=True, null=True)
    cd_usuario_importou = models.CharField(max_length=30, blank=True, null=True)
    dt_usuario_importou = models.DateField(blank=True, null=True)
    cd_processo_hapvida = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_remessa_convenio'
        unique_together = (('nu_remessa', 'nu_item_remessa'),)


class TbItemRemessaGlosa(models.Model):
    nu_remessa = models.FloatField(primary_key=True)
    nu_item_remessa = models.IntegerField()
    nu_processo = models.FloatField()
    nu_remessa_glosa = models.FloatField(blank=True, null=True)
    dt_geracao = models.DateField(blank=True, null=True)
    dt_pagamento = models.DateField(blank=True, null=True)
    dt_envio_remessa = models.DateField(blank=True, null=True)
    vl_processado = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_pago = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_glosado = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_recuperado = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_saldo = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    fl_gerou_arquivo = models.CharField(max_length=1, blank=True, null=True)
    cd_obrigacao = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_remessa_glosa'
        unique_together = (('nu_remessa', 'nu_item_remessa', 'nu_processo'),)


class TbItemReqOriginal(models.Model):
    cd_requisicao = models.IntegerField(primary_key=True)
    cd_material = models.IntegerField()
    cd_ordem = models.IntegerField()
    qt_material_c = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_item_req_original'
        unique_together = (('cd_requisicao', 'cd_ordem'),)


class TbItemRestaurante(models.Model):
    cd_comanda_restaurante = models.ForeignKey('TmComandaRestaurante', models.DO_NOTHING, db_column='cd_comanda_restaurante', primary_key=True)
    nu_ocorrencia = models.ForeignKey('TmComandaRestaurante', models.DO_NOTHING, db_column='nu_ocorrencia')
    cd_material = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_material')
    vl_comanda = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    qt_comanda = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_item_restaurante'
        unique_together = (('cd_comanda_restaurante', 'nu_ocorrencia', 'cd_material'),)


class TbItemResultadoCultura(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    cd_ocorrencia = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ocorrencia', blank=True, null=True)
    cd_ordem = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ordem', blank=True, null=True)
    cd_principio_ativo = models.ForeignKey('TbPrincipioAtivo', models.DO_NOTHING, db_column='cd_principio_ativo', blank=True, null=True)
    fl_sensivel = models.CharField(max_length=1, blank=True, null=True)
    nm_abreviatura = models.CharField(max_length=5, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_resultado_cultura'


class TbItemSolicHemo(models.Model):
    cd_solicitacao = models.ForeignKey('TbSolicReprocessHemo', models.DO_NOTHING, db_column='cd_solicitacao', primary_key=True)
    qtd_solicitada = models.FloatField(blank=True, null=True)
    vlr_reprocessamento = models.DecimalField(max_digits=15, decimal_places=2, blank=True, null=True)
    cd_material = models.FloatField()
    cd_codigo_hemo = models.CharField(max_length=10, blank=True, null=True)
    qtd_reprocessada = models.FloatField(blank=True, null=True)
    vlr_unitario = models.DecimalField(max_digits=15, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_solic_hemo'
        unique_together = (('cd_solicitacao', 'cd_material'),)


class TbItemTroca(models.Model):
    nu_protocolo = models.IntegerField(primary_key=True)
    cd_material = models.FloatField()
    cd_ordem = models.IntegerField()
    cd_lote = models.CharField(max_length=20, blank=True, null=True)
    dt_validade_lote = models.DateField(blank=True, null=True)
    qt_material = models.IntegerField(blank=True, null=True)
    fl_tipo = models.CharField(max_length=1, blank=True, null=True)
    cd_setor_ent = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_rec = models.CharField(max_length=6, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_troca'
        unique_together = (('nu_protocolo', 'cd_material', 'cd_ordem'),)


class TbItemUsoHemo(models.Model):
    cd_material = models.FloatField()
    fl_tipo_material = models.CharField(max_length=1, blank=True, null=True)
    cd_atendimento = models.FloatField()
    cd_codigo_hemo = models.CharField(max_length=10, blank=True, null=True)
    qtd_mat = models.FloatField(blank=True, null=True)
    dt_uso = models.DateField()
    cd_codigo_barra = models.CharField(max_length=100, blank=True, null=True)
    fl_reposto = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_uso_hemo'


class TbItemVigenciaSimpro(models.Model):
    cd_simpro = models.ForeignKey('TbSimpro', models.DO_NOTHING, db_column='cd_simpro', primary_key=True)
    dt_vigencia = models.DateField()
    tp_preco = models.CharField(max_length=1, blank=True, null=True)
    vl_fabrica = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    vl_venda = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    vl_fabrica_fracao = models.DecimalField(max_digits=11, decimal_places=3, blank=True, null=True)
    vl_venda_fracao = models.DecimalField(max_digits=11, decimal_places=3, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_vigencia_simpro'
        unique_together = (('cd_simpro', 'dt_vigencia'),)


class TbItemVlPossivelAvaliacao(models.Model):
    cd_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_nivel_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_ordem')
    nu_ordem = models.IntegerField()
    vl_valor_possivel = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_vl_possivel_avaliacao'
        unique_together = (('cd_avaliacao', 'cd_nivel_avaliacao', 'cd_ordem', 'nu_ordem'),)


class TbItemVlPossivelHtml(models.Model):
    cd_avaliacao = models.ForeignKey(TbItemVlPossivelAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_nivel_avaliacao = models.ForeignKey(TbItemVlPossivelAvaliacao, models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey(TbItemVlPossivelAvaliacao, models.DO_NOTHING, db_column='cd_ordem')
    nu_ordem = models.ForeignKey(TbItemVlPossivelAvaliacao, models.DO_NOTHING, db_column='nu_ordem')
    ds_html_item_before = models.TextField(blank=True, null=True)
    ds_html_item_style = models.TextField(blank=True, null=True)
    ds_html_item_after = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_item_vl_possivel_html'
        unique_together = (('cd_avaliacao', 'cd_nivel_avaliacao', 'cd_ordem', 'nu_ordem'),)


class TbItensAnamnese(models.Model):
    cd_paciente = models.ForeignKey('TbPaciente', models.DO_NOTHING, db_column='cd_paciente', primary_key=True)
    ds_anamnese = models.ForeignKey(TbAnamnese, models.DO_NOTHING, db_column='ds_anamnese')

    class Meta:
        managed = False
        db_table = 'tb_itens_anamnese'
        unique_together = (('cd_paciente', 'ds_anamnese'),)


class TbItensBalanco(models.Model):
    cd_balanco = models.IntegerField(primary_key=True)
    cd_setor_controle = models.CharField(max_length=6)
    cd_material = models.FloatField()
    dt_inicial = models.DateField(blank=True, null=True)
    dt_final = models.DateField(blank=True, null=True)
    fl_hospital = models.CharField(max_length=1, blank=True, null=True)
    fl_almoxarifado = models.CharField(max_length=1, blank=True, null=True)
    fl_curva = models.CharField(max_length=1, blank=True, null=True)
    cd_usuario = models.CharField(max_length=10, blank=True, null=True)
    fl_fechado = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_itens_balanco'
        unique_together = (('cd_balanco', 'cd_setor_controle', 'cd_material'),)


class TbItensInventariados(models.Model):
    cd_setor_controle = models.CharField(primary_key=True, max_length=6)
    cd_material = models.FloatField()
    cd_ordem = models.FloatField()
    dt_invent = models.DateField()
    qt_contado = models.FloatField(blank=True, null=True)
    qt_estoque = models.FloatField(blank=True, null=True)
    qt_saldo = models.FloatField(blank=True, null=True)
    vl_unit = models.FloatField(blank=True, null=True)
    vl_contado = models.FloatField(blank=True, null=True)
    vl_saldo = models.FloatField(blank=True, null=True)
    vl_dif = models.FloatField(blank=True, null=True)
    qt_contado_rel = models.FloatField(blank=True, null=True)
    qt_saldo_rel = models.FloatField(blank=True, null=True)
    vl_contado_rel = models.FloatField(blank=True, null=True)
    vl_saldo_rel = models.FloatField(blank=True, null=True)
    fl_dif_est = models.CharField(max_length=1, blank=True, null=True)
    cd_usuario = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_itens_inventariados'
        unique_together = (('cd_setor_controle', 'cd_material', 'cd_ordem', 'dt_invent'),)


class TbItensInventariadosBal(models.Model):
    cd_setor_controle = models.CharField(primary_key=True, max_length=6)
    cd_material = models.FloatField()
    cd_ordem = models.FloatField()
    dt_invent = models.DateField()
    qt_contado = models.FloatField(blank=True, null=True)
    qt_estoque = models.FloatField(blank=True, null=True)
    qt_saldo = models.FloatField(blank=True, null=True)
    vl_unit = models.FloatField(blank=True, null=True)
    vl_contado = models.FloatField(blank=True, null=True)
    vl_saldo = models.FloatField(blank=True, null=True)
    vl_dif = models.FloatField(blank=True, null=True)
    qt_contado_rel = models.FloatField(blank=True, null=True)
    qt_saldo_rel = models.FloatField(blank=True, null=True)
    vl_contado_rel = models.FloatField(blank=True, null=True)
    vl_saldo_rel = models.FloatField(blank=True, null=True)
    fl_dif_est = models.CharField(max_length=1, blank=True, null=True)
    cd_usuario = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_itens_inventariados_bal'
        unique_together = (('cd_setor_controle', 'cd_material', 'cd_ordem', 'dt_invent'),)


class TbItensInventario(models.Model):
    cd_anomes = models.FloatField(primary_key=True)
    cd_setor_controle = models.CharField(max_length=6)
    cd_material = models.FloatField()
    dt_inicial = models.DateField(blank=True, null=True)
    dt_final = models.DateField(blank=True, null=True)
    fl_hospital = models.CharField(max_length=1, blank=True, null=True)
    fl_almoxarifado = models.CharField(max_length=1, blank=True, null=True)
    fl_curva = models.CharField(max_length=1, blank=True, null=True)
    fl_mensal = models.CharField(max_length=1, blank=True, null=True)
    fl_quinzena1 = models.CharField(max_length=1, blank=True, null=True)
    fl_quinzena2 = models.CharField(max_length=1, blank=True, null=True)
    fl_semana1 = models.CharField(max_length=1, blank=True, null=True)
    fl_semana2 = models.CharField(max_length=1, blank=True, null=True)
    fl_semana3 = models.CharField(max_length=1, blank=True, null=True)
    fl_semana4 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia1 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia2 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia3 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia4 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia5 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia6 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia7 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia8 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia9 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia10 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia11 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia12 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia13 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia14 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia15 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia16 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia17 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia18 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia19 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia20 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia21 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia22 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia23 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia24 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia25 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia26 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia27 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia28 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia29 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia30 = models.CharField(max_length=1, blank=True, null=True)
    fl_dia31 = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_itens_inventario'
        unique_together = (('cd_anomes', 'cd_setor_controle', 'cd_material'),)


class TbJustifBoletim(models.Model):
    nu_evolucao = models.ForeignKey(TbEvolucao, models.DO_NOTHING, db_column='nu_evolucao', primary_key=True)
    id_kit = models.FloatField()
    ds_justificativa = models.CharField(max_length=4000)
    dt_justificativa = models.DateField()
    cd_pessoa = models.FloatField()
    nu_nota = models.FloatField(blank=True, null=True)
    ds_justificativa_nota = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_justif_boletim'


class TbJustifKitIncomp(models.Model):
    id_kit = models.FloatField(primary_key=True)
    ds_justificativa = models.CharField(max_length=4000)
    dt_justificativa = models.DateField()
    cd_pessoa = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_justif_kit_incomp'


class TbKitMatMedFilial(models.Model):
    cd_grupo_prod_proc = models.ForeignKey('TbParamGrupoProc', models.DO_NOTHING, db_column='cd_grupo_prod_proc', primary_key=True)
    cd_filial = models.CharField(max_length=3)
    cd_mat_med = models.IntegerField()
    qt_mat_med = models.IntegerField(blank=True, null=True)
    cd_param_grupo_proc = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_kit_mat_med_filial'
        unique_together = (('cd_grupo_prod_proc', 'cd_filial', 'cd_mat_med'),)


class TbLaboratorio(models.Model):
    cd_laboratorio = models.IntegerField(primary_key=True)
    nm_laboratorio = models.CharField(max_length=50)
    ds_laboratorio = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'tb_laboratorio'


class TbLaboratorioApoio(models.Model):
    cd_laboratorio_apoio = models.IntegerField(primary_key=True)
    nm_laboratorio_apoio = models.CharField(max_length=50)
    nm_pessoa_contato = models.CharField(max_length=30, blank=True, null=True)
    nr_fone_contato = models.CharField(max_length=20, blank=True, null=True)
    ds_email_contato = models.CharField(max_length=20, blank=True, null=True)
    ds_versao_xml = models.CharField(max_length=1000, blank=True, null=True)
    cd_entidade = models.BigIntegerField(blank=True, null=True)
    ds_chave = models.CharField(max_length=16, blank=True, null=True)
    cd_laboratorio_convenio = models.CharField(max_length=20, blank=True, null=True)
    cd_protocolo_convenio = models.IntegerField(blank=True, null=True)
    ds_diretorio_envio = models.CharField(max_length=1000, blank=True, null=True)
    ds_diretorio_recepcao = models.CharField(max_length=1000, blank=True, null=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    cd_profissional = models.IntegerField(blank=True, null=True)
    fl_ativo = models.CharField(max_length=1)
    fl_tipolab = models.CharField(max_length=1, blank=True, null=True)
    cd_laboratorio_ter = models.ForeignKey('TbLaboratorioTerceirizado', models.DO_NOTHING, db_column='cd_laboratorio_ter', blank=True, null=True)
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial', blank=True, null=True)
    empresa = models.CharField(max_length=30, blank=True, null=True)
    cd_regiao_produtiva = models.CharField(max_length=3, blank=True, null=True)
    fl_fracionamento_par = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_laboratorio_apoio'


class TbLaboratorioApoioAux(models.Model):
    cd_laboratorio_apoio = models.ForeignKey(TbLaboratorioApoio, models.DO_NOTHING, db_column='cd_laboratorio_apoio', primary_key=True)
    cd_laboratorio_apoio_aux = models.ForeignKey(TbLaboratorioApoio, models.DO_NOTHING, db_column='cd_laboratorio_apoio_aux')

    class Meta:
        managed = False
        db_table = 'tb_laboratorio_apoio_aux'
        unique_together = (('cd_laboratorio_apoio', 'cd_laboratorio_apoio_aux'),)


class TbLaboratorioConvenio(models.Model):
    cd_laboratorio_convenio = models.CharField(primary_key=True, max_length=20)
    nu_sequencial = models.FloatField()
    cd_laboratorio_ter = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_laboratorio_convenio'


class TbLaboratorioTerceirizado(models.Model):
    cd_laboratorio_ter = models.IntegerField(primary_key=True)
    nm_laboratorio_ter = models.CharField(max_length=50)
    nm_pessoa_contato = models.CharField(max_length=30, blank=True, null=True)
    nr_fone_contato = models.CharField(max_length=20, blank=True, null=True)
    ds_email_contato = models.CharField(max_length=20, blank=True, null=True)
    ds_uf = models.CharField(max_length=2, blank=True, null=True)
    ds_cidade = models.CharField(max_length=30, blank=True, null=True)
    cd_cnpj = models.CharField(max_length=20, blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_laboratorio_terceirizado'


class TbLancamentoValorMedico(models.Model):
    cd_lancamento_valor_medico = models.IntegerField(primary_key=True)
    cd_prestador_juridico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_prestador_juridico', blank=True, null=True)
    cd_prestador_fisico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_prestador_fisico', blank=True, null=True)
    cd_tipo_lancamento_medico = models.ForeignKey('TbTipoLancamentoMedico', models.DO_NOTHING, db_column='cd_tipo_lancamento_medico', blank=True, null=True)
    dt_ref_lancamento = models.DateField(blank=True, null=True)
    valor = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_operacao = models.DateField(blank=True, null=True)
    cd_emp_hapvida = models.FloatField(blank=True, null=True)
    dt_vencimento = models.DateField(blank=True, null=True)
    cd_aprovador = models.CharField(max_length=30, blank=True, null=True)
    dt_aprovacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_lancamento_valor_medico'


class TbLaudoArquivo(models.Model):
    na_accessionnumber = models.CharField(primary_key=True, max_length=50)
    dt_liberacao_laudo = models.DateField(blank=True, null=True)
    bl_arquivo = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_laudo_arquivo'


class TbLaudoExame(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ordem')
    cd_modelo_laudo = models.ForeignKey('TbModeloLaudo', models.DO_NOTHING, db_column='cd_modelo_laudo', blank=True, null=True)
    ds_laudo = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'tb_laudo_exame'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem'),)


class TbLaudoExameProcedimento(models.Model):
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', primary_key=True)
    cd_modelo_laudo = models.ForeignKey('TbModeloLaudoExame', models.DO_NOTHING, db_column='cd_modelo_laudo')

    class Meta:
        managed = False
        db_table = 'tb_laudo_exame_procedimento'
        unique_together = (('cd_procedimento', 'cd_modelo_laudo'),)


class TbLaudoMedico(models.Model):
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional', primary_key=True)
    cd_modelo_laudo = models.ForeignKey('TbModeloLaudoExame', models.DO_NOTHING, db_column='cd_modelo_laudo')

    class Meta:
        managed = False
        db_table = 'tb_laudo_medico'
        unique_together = (('cd_profissional', 'cd_modelo_laudo'),)


class TbLaudoPaciente(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ordem')
    cd_modelo_laudo = models.ForeignKey('TbModeloLaudoExame', models.DO_NOTHING, db_column='cd_modelo_laudo', blank=True, null=True)
    ds_laudo_medico = models.TextField(blank=True, null=True)  # This field type is a guess.
    nm_exame = models.CharField(max_length=100, blank=True, null=True)
    cd_natureza_alt_laudo = models.FloatField(blank=True, null=True)
    ds_motivo_alt_laudo = models.CharField(max_length=100, blank=True, null=True)
    cd_medico_unidade = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_medico_unidade', blank=True, null=True)
    fl_queixa_principal = models.CharField(max_length=1, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_laudo_paciente'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem'),)


class TbLaudoPacienteLibera(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ordem')
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    dt_status = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_laudo_paciente_libera'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem'),)


class TbLaudoParamFiltro(models.Model):
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional', primary_key=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    dt_inicial = models.DateField(blank=True, null=True)
    dt_final = models.DateField(blank=True, null=True)
    cd_tipo_atendimento = models.CharField(max_length=2, blank=True, null=True)
    fl_cr = models.FloatField(blank=True, null=True)
    fl_mg = models.FloatField(blank=True, null=True)
    fl_ct = models.FloatField(blank=True, null=True)
    fl_mr = models.FloatField(blank=True, null=True)
    fl_us = models.FloatField(blank=True, null=True)
    fl_es = models.FloatField(blank=True, null=True)
    fl_nm = models.FloatField(blank=True, null=True)
    fl_xa = models.FloatField(blank=True, null=True)
    fl_habilita_filtro = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_laudo_param_filtro'


class TbLaudoPendente(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_ordem = models.ForeignKey('TbProcedimentoRealizado', models.DO_NOTHING, db_column='cd_ordem')
    cd_motivo_pendencia = models.IntegerField(blank=True, null=True)
    ds_acao = models.CharField(max_length=1000, blank=True, null=True)
    dt_agendamento = models.DateField(blank=True, null=True)
    hr_agendamento = models.IntegerField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    dt_status = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_laudo_pendente'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem'),)


class TbLaudoProcedimento(models.Model):
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', primary_key=True)
    cd_modelo_laudo = models.ForeignKey('TbModeloLaudo', models.DO_NOTHING, db_column='cd_modelo_laudo')

    class Meta:
        managed = False
        db_table = 'tb_laudo_procedimento'
        unique_together = (('cd_procedimento', 'cd_modelo_laudo'),)


class TbLaudoProfPacs(models.Model):
    cd_profissional = models.ForeignKey(TbLaudoParamFiltro, models.DO_NOTHING, db_column='cd_profissional', primary_key=True)
    cd_setor_pacs = models.ForeignKey('TbSetorPacs', models.DO_NOTHING, db_column='cd_setor_pacs')
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor')
    fl_filtra = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_laudo_prof_pacs'
        unique_together = (('cd_profissional', 'cd_setor_pacs', 'cd_setor'),)


class TbLeitoAcomodacao(models.Model):
    cd_acomodacao = models.ForeignKey('TmAcomodacao', models.DO_NOTHING, db_column='cd_acomodacao')
    cd_posto = models.ForeignKey('TmAcomodacao', models.DO_NOTHING, db_column='cd_posto', primary_key=True)
    cd_classe_acomodacao = models.IntegerField(blank=True, null=True)
    nu_leito = models.IntegerField()
    fl_ocupacao_acomodacao = models.CharField(max_length=1, blank=True, null=True)
    dt_ocupacao = models.DateField(blank=True, null=True)
    hr_ocupacao = models.IntegerField(blank=True, null=True)
    dt_prevista_liberacao = models.DateField(blank=True, null=True)
    hr_prevista_liberacao = models.IntegerField(blank=True, null=True)
    ds_observacoes_medicas = models.CharField(max_length=60, blank=True, null=True)
    cd_status = models.ForeignKey('TbStatusLeitoAcomodacao', models.DO_NOTHING, db_column='cd_status', blank=True, null=True)
    dt_status = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_leito_acomodacao'
        unique_together = (('cd_posto', 'cd_acomodacao', 'nu_leito'),)


class TbLeitosClinica(models.Model):
    cd_clinica = models.BooleanField(primary_key=True)
    qt_leitos = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_leitos_clinica'


class TbLiberacaoBioquimico(models.Model):
    cd_atendimento = models.FloatField()
    cd_ocorrencia = models.FloatField()
    cd_ordem = models.FloatField()
    cd_profissional = models.FloatField()
    nm_operador = models.CharField(max_length=10)
    dt_acao = models.DateField()
    cd_liberacao = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_liberacao_bioquimico'


class TbLiberacaoItemNegativo(models.Model):
    cd_liberacao = models.IntegerField(primary_key=True)
    cd_setor_controle = models.CharField(max_length=6)
    cd_material = models.IntegerField()
    qt_material = models.IntegerField(blank=True, null=True)
    cd_requisicao = models.IntegerField(blank=True, null=True)
    cd_transferencia = models.IntegerField(blank=True, null=True)
    nu_comanda = models.CharField(max_length=8, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=10, blank=True, null=True)
    fl_status = models.NullBooleanField()
    ds_observacao = models.CharField(max_length=200, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_liberacao_item_negativo'


class TbLiberacaoItensComanda(models.Model):
    nu_comanda = models.CharField(primary_key=True, max_length=8)
    cd_mat_med = models.IntegerField()
    cd_atendimento = models.IntegerField()
    qt_liberada = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    fl_status_liberada = models.CharField(max_length=1, blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    dt_liberacao = models.DateField(blank=True, null=True)
    ds_justificativa = models.CharField(max_length=256, blank=True, null=True)
    nm_autorizador = models.CharField(max_length=10, blank=True, null=True)
    cd_solicitante = models.FloatField(blank=True, null=True)
    fl_lib_acima_limite = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_liberacao_itens_comanda'
        unique_together = (('nu_comanda', 'cd_mat_med'),)


class TbLiberacaoOncologia(models.Model):
    cd_paciente = models.IntegerField(primary_key=True)
    dt_agenda = models.DateField()
    cd_modelo = models.BigIntegerField()
    cd_operador = models.CharField(max_length=15, blank=True, null=True)
    dt_liberacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_liberacao_oncologia'
        unique_together = (('cd_paciente', 'dt_agenda', 'cd_modelo'),)


class TbLiberacaoTela(models.Model):
    cd_setor = models.CharField(max_length=6)
    dt_inicio_liberacao = models.DateField(blank=True, null=True)
    hr_inicio_liberacao = models.IntegerField(blank=True, null=True)
    dt_fim_liberacao = models.DateField(blank=True, null=True)
    hr_fim_liberacao = models.IntegerField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=10, blank=True, null=True)
    ds_justificativa = models.CharField(max_length=100, blank=True, null=True)
    fl_situacao = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_liberacao_tela'


class TbLibhora(models.Model):
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor')
    dt_liberacao = models.DateField()
    dt_gravacao = models.DateField()
    nm_usuario = models.CharField(max_length=8)
    autorizado = models.CharField(max_length=1, blank=True, null=True)
    observacao = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_libhora'


class TbLiquidosAdm(models.Model):
    cd_ocorrencia = models.IntegerField()
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    dt_administracao = models.DateField()
    hr_administracao = models.IntegerField()
    cd_liquido = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_liquido')
    qt_oral = models.IntegerField(blank=True, null=True)
    qt_retal = models.IntegerField(blank=True, null=True)
    qt_gastrostomia = models.IntegerField(blank=True, null=True)
    qt_im = models.IntegerField(blank=True, null=True)
    qt_iv = models.IntegerField(blank=True, null=True)
    ds_caracteristica = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_liquidos_adm'
        unique_together = (('cd_atendimento', 'cd_ocorrencia'),)


class TbLiquidosElim(models.Model):
    cd_ocorrencia = models.IntegerField()
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    dt_eliminacao = models.DateField()
    hr_eliminacao = models.IntegerField()
    qt_diurese = models.IntegerField(blank=True, null=True)
    qt_secrecao_gastrica = models.IntegerField(blank=True, null=True)
    qt_drenagem = models.IntegerField(blank=True, null=True)
    qt_sudorese = models.IntegerField(blank=True, null=True)
    qt_vomitos = models.IntegerField(blank=True, null=True)
    qt_esputo = models.IntegerField(blank=True, null=True)
    qt_fezes = models.IntegerField(blank=True, null=True)
    ds_caracteristica = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_liquidos_elim'
        unique_together = (('cd_atendimento', 'cd_ocorrencia'),)


class TbListaEsperaAcomod(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_classe_acomodacao = models.ForeignKey(TbClasseAcomodacao, models.DO_NOTHING, db_column='cd_classe_acomodacao')
    dt_inscricao_lista = models.DateField(blank=True, null=True)
    hr_inscricao_lista = models.IntegerField(blank=True, null=True)
    fl_prioridade = models.BooleanField()

    class Meta:
        managed = False
        db_table = 'tb_lista_espera_acomod'
        unique_together = (('cd_atendimento', 'cd_classe_acomodacao'),)


class TbListaFilial(models.Model):
    cd_filial = models.CharField(primary_key=True, max_length=3)
    cd_lista = models.CharField(max_length=15)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_lista_filial'
        unique_together = (('cd_filial', 'cd_lista'),)


class TbListaMatmedVencimento(models.Model):
    cd_material = models.FloatField()
    nm_material = models.CharField(max_length=100)
    cd_lote = models.CharField(max_length=100)
    dt_validade_lote = models.DateField()
    qt_dias = models.FloatField(blank=True, null=True)
    qt_material = models.FloatField(blank=True, null=True)
    nm_operador = models.CharField(primary_key=True, max_length=15)

    class Meta:
        managed = False
        db_table = 'tb_lista_matmed_vencimento'
        unique_together = (('nm_operador', 'cd_material', 'cd_lote', 'dt_validade_lote'),)


class TbListaValores(models.Model):
    nm_lista = models.CharField(primary_key=True, max_length=30)
    nm_tabela = models.CharField(max_length=30)
    nm_coluna_codigo = models.CharField(max_length=30)
    nm_coluna_nome = models.CharField(max_length=30)
    fl_uso = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_lista_valores'


class TbLocaisAgrupamentoSa(models.Model):
    cd_local_atendimento = models.ForeignKey('TbLocalAtendimentoSa', models.DO_NOTHING, db_column='cd_local_atendimento', primary_key=True)
    cd_local_agrupamento = models.IntegerField()
    dt_atualizacao = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_locais_agrupamento_sa'
        unique_together = (('cd_local_atendimento', 'cd_local_agrupamento'),)


class TbLocaisFilhosSa(models.Model):
    cd_local_atendimento = models.ForeignKey('TbLocalAtendimentoSa', models.DO_NOTHING, db_column='cd_local_atendimento', primary_key=True)
    cd_local_filho = models.IntegerField()
    dt_atualizacao = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_locais_filhos_sa'
        unique_together = (('cd_local_atendimento', 'cd_local_filho'),)


class TbLocalAtendimentoSa(models.Model):
    cd_local_atendimento = models.IntegerField(primary_key=True)
    ds_local_atendimento = models.CharField(max_length=45)
    cd_status = models.BooleanField()
    nu_endereco_ip = models.CharField(max_length=15, blank=True, null=True)
    fl_imp_ativa = models.NullBooleanField()
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)
    fl_tipo_senha = models.CharField(max_length=1, blank=True, null=True)
    cd_prestador = models.FloatField(blank=True, null=True)
    fl_tipo_local = models.CharField(max_length=1, blank=True, null=True)
    nu_endereco_ip_sec = models.CharField(max_length=15, blank=True, null=True)
    cd_prestador_totem = models.FloatField(blank=True, null=True)
    cd_pessoa_cobra = models.FloatField(blank=True, null=True)
    cd_pessoa_realiza = models.FloatField(blank=True, null=True)
    nu_endereco_ip_totem = models.CharField(max_length=15, blank=True, null=True)
    nm_maquina = models.CharField(max_length=40, blank=True, null=True)
    nu_endereco_ip_local = models.CharField(max_length=15, blank=True, null=True)
    cd_local_coleta = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_local_coleta', blank=True, null=True)
    cd_local_realiza_exame_vi = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_local_realiza_exame_vi', blank=True, null=True)
    fl_protocolo_cid = models.CharField(max_length=1, blank=True, null=True)
    nu_viaimp = models.IntegerField(blank=True, null=True)
    fl_banco = models.CharField(max_length=3, blank=True, null=True)
    qtd_atend_hora = models.IntegerField(blank=True, null=True)
    cd_prestador_totem_exame = models.FloatField(blank=True, null=True)
    fl_rec_lib_paciente_exame = models.CharField(max_length=1, blank=True, null=True)
    fl_login_aut_med = models.CharField(max_length=1, blank=True, null=True)
    fl_somente_img_ret_auto = models.CharField(max_length=1, blank=True, null=True)
    fl_prioridade_tele_atend = models.CharField(max_length=1, blank=True, null=True)
    dt_prioridade_tele_atend = models.DateField(blank=True, null=True)
    fl_retorna_paciente_auto = models.CharField(max_length=1, blank=True, null=True)
    qt_define_ausencia = models.FloatField(blank=True, null=True)
    fl_comparar_exame = models.CharField(max_length=1, blank=True, null=True)
    fl_encerra_auto = models.CharField(max_length=1, blank=True, null=True)
    fl_questionario = models.CharField(max_length=1, blank=True, null=True)
    permanencia_max_hr = models.FloatField(blank=True, null=True)
    sinal_permanencia_hr = models.FloatField(blank=True, null=True)
    ultimo_movimento_hr = models.FloatField(blank=True, null=True)
    fl_nova_versao_t7006 = models.CharField(max_length=1, blank=True, null=True)
    fl_troca_recepcao = models.CharField(max_length=1, blank=True, null=True)
    qt_dias_coleta = models.FloatField(blank=True, null=True)
    fl_retorno_consultorio_medico = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_local_atendimento_sa'


class TbLocalEndereco(models.Model):
    cd_local_endereco = models.FloatField(primary_key=True)
    ds_local_endereco = models.CharField(max_length=1000, blank=True, null=True)
    nm_operador = models.CharField(max_length=30)
    dt_cadastro = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_local_endereco'


class TbLocalEscalaHotelaria(models.Model):
    cd_escala_hotelaria = models.ForeignKey('TbOperadorEscalaHotelaria', models.DO_NOTHING, db_column='cd_escala_hotelaria', primary_key=True)
    nm_operador = models.ForeignKey('TbOperadorEscalaHotelaria', models.DO_NOTHING, db_column='nm_operador')
    cd_ordem = models.FloatField()
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    cd_localizacao_escala = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_inclusao = models.DateField(blank=True, null=True)
    dt_ult_alteracao = models.DateField(blank=True, null=True)
    fl_escala_cheia = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_local_escala_hotelaria'
        unique_together = (('cd_escala_hotelaria', 'nm_operador', 'cd_ordem'),)


class TbLocalGrupoMonitorHosp(models.Model):
    cd_grupo_monitor_hosp = models.ForeignKey(TbGrupoMonitorHosp, models.DO_NOTHING, db_column='cd_grupo_monitor_hosp', primary_key=True)
    cd_ordem_local = models.IntegerField()
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento', blank=True, null=True)
    cd_local_atendimento = models.ForeignKey(TbLocalAtendimentoSa, models.DO_NOTHING, db_column='cd_local_atendimento', blank=True, null=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_local_grupo_monitor_hosp'
        unique_together = (('cd_grupo_monitor_hosp', 'cd_ordem_local'),)


class TbLocalGrupoProcedSa(models.Model):
    cd_grupo_atendimento = models.FloatField(primary_key=True)
    cd_local_atendimento = models.FloatField()
    cd_grupo_procedimento = models.CharField(max_length=3)
    cd_grupo_procedimento_sa = models.CharField(max_length=5, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_local_grupo_proced_sa'
        unique_together = (('cd_grupo_atendimento', 'cd_local_atendimento', 'cd_grupo_procedimento'),)


class TbLocalInfeccao(models.Model):
    cd_local_infeccao = models.BooleanField(primary_key=True)
    ds_local_infeccao = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_local_infeccao'


class TbLocalTotemSa(models.Model):
    cd_local_atendimento = models.FloatField(primary_key=True)
    nm_maquina = models.CharField(max_length=40)
    user_totem = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='user_totem', unique=True, blank=True, null=True)
    fl_tipo_impressora = models.FloatField(blank=True, null=True)
    ip_maquina = models.CharField(unique=True, max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_local_totem_sa'
        unique_together = (('cd_local_atendimento', 'nm_maquina'),)


class TbLocalTotemTeleSa(models.Model):
    cd_local_atendimento = models.FloatField(primary_key=True)
    nm_maquina = models.CharField(max_length=40)
    user_totem = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='user_totem', blank=True, null=True)
    fl_tipo_impressora = models.FloatField(blank=True, null=True)
    ip_maquina = models.CharField(unique=True, max_length=100, blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)
    fl_disponivel = models.CharField(max_length=1, blank=True, null=True)
    nu_end_servidor = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_local_totem_tele_sa'
        unique_together = (('cd_local_atendimento', 'nm_maquina'),)


class TbLocalidadeIbge(models.Model):
    mn_ibge = models.CharField(max_length=6, blank=True, null=True)
    mn_uf = models.CharField(max_length=2, blank=True, null=True)
    mn_cod = models.CharField(max_length=5, blank=True, null=True)
    mn_nome = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_localidade_ibge'


class TbLocalizacaoEscala(models.Model):
    cd_localizacao_escala = models.FloatField(primary_key=True)
    ds_localizacao_escala = models.CharField(max_length=400, blank=True, null=True)
    fl_vis_setores = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_localizacao_escala'


class TbLogAppTmp(models.Model):
    dt_audit = models.DateField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_log_app_tmp'


class TbLogAtualizaCadastro(models.Model):
    cd_usuario = models.CharField(max_length=14)
    cd_prestador = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_log_atualiza_cadastro'


class TbLogCartaoHap(models.Model):
    cd_paciente = models.ForeignKey('TbPaciente', models.DO_NOTHING, db_column='cd_paciente', primary_key=True)
    cd_ordem_entrega = models.IntegerField()
    fl_entregou_cartao = models.CharField(max_length=1, blank=True, null=True)
    dt_entrega = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_log_cartao_hap'
        unique_together = (('cd_paciente', 'cd_ordem_entrega'),)


class TbLogEstoqueLote(models.Model):
    cd_material = models.FloatField()
    cd_setor_controle = models.CharField(max_length=6)
    cd_lote = models.CharField(max_length=20)
    dt_validade = models.DateField()
    qt_estoque = models.FloatField()
    cd_unidade_atendimento = models.CharField(max_length=3)
    fl_status = models.CharField(max_length=1)
    dt_audit = models.DateField(primary_key=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_log_estoque_lote'
        unique_together = (('dt_audit', 'cd_material', 'cd_setor_controle', 'cd_lote', 'dt_validade'),)


class TbLogEtiqPulseiraHap(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ordem_entrega = models.IntegerField()
    dt_entrega = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=40, blank=True, null=True)
    cd_motivo_reimpressao_pulseira = models.ForeignKey('TbMotivoReimpressaoPulseira', models.DO_NOTHING, db_column='cd_motivo_reimpressao_pulseira', blank=True, null=True)
    ds_motivo_reimpressao_outro = models.CharField(max_length=140, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_log_etiq_pulseira_hap'
        unique_together = (('cd_atendimento', 'cd_ordem_entrega'),)


class TbLogImagemDigital(models.Model):
    cd_pessoa = models.FloatField()
    dt_log = models.DateField()
    ds_log = models.CharField(max_length=200, blank=True, null=True)
    im_digital = models.BinaryField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    fl_tipo_digital = models.IntegerField()
    cd_responsavel = models.FloatField(blank=True, null=True)
    cd_tipo_log_imagem_digital = models.FloatField()
    nu_consulta = models.IntegerField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_classe_log_digital = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_log_imagem_digital'


class TbLogImagemDigitalTransf(models.Model):
    cd_pessoa = models.FloatField()
    dt_log = models.DateField()
    fl_tipo_digital = models.IntegerField()
    cd_tipo_log_imagem_digital = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_log_imagem_digital_transf'


class TbLogImpressao(models.Model):
    id_log_impressao = models.FloatField(primary_key=True)
    nm_tela = models.CharField(max_length=30, blank=True, null=True)
    nu_documento = models.ForeignKey(TbDocumentoProntuario, models.DO_NOTHING, blank=True, null=True)
    dt_transacao = models.DateField()
    nm_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_log_impressao'


class TbLogLogin(models.Model):
    nm_operador = models.CharField(max_length=10)
    ult_acesso = models.DateField()
    cd_papel = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_log_login'


class TbLogProcessoColeta(models.Model):
    cd_senha_master = models.IntegerField(blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ordem_log = models.IntegerField(blank=True, null=True)
    ds_log = models.CharField(max_length=1000, blank=True, null=True)
    dt_log = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_log_processo_coleta'


class TbLogRecadMedico(models.Model):
    cd_alteracao = models.FloatField(primary_key=True)
    dt_alteracao = models.DateField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    nr_dias_anterior = models.FloatField(blank=True, null=True)
    nr_dias_novo = models.FloatField(blank=True, null=True)
    uf_crm = models.CharField(max_length=5, blank=True, null=True)
    dt_forcada = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_log_recad_medico'


class TbLogTransacao(models.Model):
    cd_ip_rede = models.CharField(max_length=30, blank=True, null=True)
    cd_ip_maquina = models.CharField(max_length=30, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    dt_inicio_transacao = models.DateField(blank=True, null=True)
    dt_termino_transacao = models.DateField(blank=True, null=True)
    nu_tempo = models.FloatField(blank=True, null=True)
    ds_local = models.CharField(max_length=200, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_log_transacao'


class TbLoginAtdVirtual1(models.Model):
    cd_login = models.FloatField(primary_key=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    fl_disponivel = models.CharField(max_length=1, blank=True, null=True)
    dt_disponivel = models.DateField(blank=True, null=True)
    dt_logou = models.DateField(blank=True, null=True)
    dt_deslogou = models.DateField(blank=True, null=True)
    nu_elegibilidade = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_login_atd_virtual1'


class TbLoginMedicoSa(models.Model):
    cd_medico = models.IntegerField(primary_key=True)
    cd_grupo_atendimento = models.IntegerField()
    cd_local_atendimento = models.IntegerField()
    dt_inicio_atendimento = models.DateField()
    dt_final_atendimento = models.DateField(blank=True, null=True)
    fl_medico_chefe = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_login_medico_sa'
        unique_together = (('cd_medico', 'cd_grupo_atendimento', 'cd_local_atendimento', 'dt_inicio_atendimento'),)


class TbLogomarcaProduto(models.Model):
    nu_ordem_logomarca = models.FloatField(primary_key=True)
    ds_logomarca = models.CharField(max_length=20, blank=True, null=True)
    im_logomarca = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'tb_logomarca_produto'


class TbLoteAnaliseContaAns(models.Model):
    nu_registro_ans = models.CharField(primary_key=True, max_length=6)
    nu_demonstrativo = models.CharField(max_length=20)
    nu_lote = models.CharField(max_length=20)
    nu_protocolo = models.CharField(max_length=12)
    dt_envio_lote = models.DateField()
    vl_protocolo = models.FloatField()
    vl_glosa_protocolo = models.FloatField(blank=True, null=True)
    nu_remessa = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_lote_analise_conta_ans'
        unique_together = (('nu_registro_ans', 'nu_demonstrativo', 'nu_lote', 'nu_protocolo'),)


class TbLoteEnvioLabApoio(models.Model):
    nu_pedido = models.FloatField(primary_key=True)
    cd_lote = models.FloatField()
    cd_laboratorio_apoio = models.IntegerField()
    cd_mnemonico_exame = models.CharField(max_length=20)
    cd_mnemonico_mat = models.CharField(max_length=20, blank=True, null=True)
    qt_amostra = models.FloatField(blank=True, null=True)
    ds_condicao_coleta = models.CharField(max_length=45, blank=True, null=True)
    nu_tempo_min = models.FloatField(blank=True, null=True)
    nu_volume_diurese = models.FloatField(blank=True, null=True)
    nu_tempo_diurese = models.FloatField(blank=True, null=True)
    nu_dosagem = models.FloatField(blank=True, null=True)
    ds_conservante = models.CharField(max_length=20, blank=True, null=True)
    ds_uso_medicacao = models.CharField(max_length=45, blank=True, null=True)
    dt_coleta = models.DateField()
    hr_coleta = models.CharField(max_length=10)
    ds_material = models.CharField(max_length=40, blank=True, null=True)
    fl_status = models.FloatField(blank=True, null=True)
    dt_status = models.DateField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_amostra = models.IntegerField(blank=True, null=True)
    cd_id_tubo_lab = models.CharField(max_length=12, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_lote_envio_lab_apoio'
        unique_together = (('nu_pedido', 'cd_lote', 'cd_laboratorio_apoio', 'cd_mnemonico_exame'),)


class TbLoteLabApoio(models.Model):
    cd_lote = models.FloatField(primary_key=True)
    cd_laboratorio_apoio = models.IntegerField()
    dt_lote = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_lote_lab_apoio'
        unique_together = (('cd_lote', 'cd_laboratorio_apoio'),)


class TbLoteLabFechamento(models.Model):
    cd_lote = models.ForeignKey(TbLoteLabApoio, models.DO_NOTHING, db_column='cd_lote')
    cd_laboratorio_apoio = models.ForeignKey(TbLoteLabApoio, models.DO_NOTHING, db_column='cd_laboratorio_apoio')
    dt_encerramento = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_lote_lab_fechamento'


class TbLoteMedicLabApoio(models.Model):
    nu_pedido = models.FloatField(primary_key=True)
    cd_laboratorio_apoio = models.ForeignKey(TbLoteLabApoio, models.DO_NOTHING, db_column='cd_laboratorio_apoio')
    cd_lote = models.ForeignKey(TbLoteLabApoio, models.DO_NOTHING, db_column='cd_lote')
    cd_mnemonico_med = models.FloatField()
    cd_atendimento = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_lote_medic_lab_apoio'
        unique_together = (('nu_pedido', 'cd_laboratorio_apoio', 'cd_lote', 'cd_mnemonico_med'),)


class TbLotePedidoLabApoio(models.Model):
    nu_pedido = models.FloatField(primary_key=True)
    cd_laboratorio_apoio = models.ForeignKey(TbLoteLabApoio, models.DO_NOTHING, db_column='cd_laboratorio_apoio')
    cd_lote = models.ForeignKey(TbLoteLabApoio, models.DO_NOTHING, db_column='cd_lote')
    dt_pedido = models.DateField(blank=True, null=True)
    cd_paciente = models.FloatField(blank=True, null=True)
    nu_altura = models.DecimalField(max_digits=4, decimal_places=2, blank=True, null=True)
    nu_peso = models.DecimalField(max_digits=5, decimal_places=3, blank=True, null=True)
    ds_observacao = models.CharField(max_length=70, blank=True, null=True)
    hr_pedido = models.CharField(max_length=10, blank=True, null=True)
    dt_ult_menstr = models.DateField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_ordem = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_lote_pedido_lab_apoio'
        unique_together = (('nu_pedido', 'cd_laboratorio_apoio', 'cd_lote'),)


class TbLoteProtocolo(models.Model):
    cd_lote_protocolo = models.FloatField(primary_key=True)
    cd_lote = models.ForeignKey('TbLoteRast', models.DO_NOTHING, db_column='cd_lote', unique=True)
    nu_pedido = models.ForeignKey('TbPedidoExame', models.DO_NOTHING, db_column='nu_pedido')
    dt_pedido = models.ForeignKey('TbPedidoExame', models.DO_NOTHING, db_column='dt_pedido')

    class Meta:
        managed = False
        db_table = 'tb_lote_protocolo'


class TbLoteRast(models.Model):
    cd_lote = models.FloatField(primary_key=True)
    cd_empresa_rast = models.ForeignKey(TbFuncionarioRast, models.DO_NOTHING, db_column='cd_empresa_rast', blank=True, null=True)
    cd_funcionario = models.ForeignKey(TbFuncionarioRast, models.DO_NOTHING, db_column='cd_funcionario', blank=True, null=True)
    nm_funcionario = models.CharField(max_length=45, blank=True, null=True)
    nu_cpf = models.CharField(max_length=20, blank=True, null=True)
    nr_fone_contato = models.CharField(max_length=20, blank=True, null=True)
    dt_saida_lote = models.DateField()
    cd_oper_entrega = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cd_oper_entrega')
    cd_setor_coleta = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_coleta')
    qt_amostra_entrega = models.IntegerField()
    dt_chegada_lote = models.DateField(blank=True, null=True)
    cd_oper_recebe = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cd_oper_recebe', blank=True, null=True)
    cd_setor_recebe = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_recebe', blank=True, null=True)
    qt_amostra_recebe = models.IntegerField(blank=True, null=True)
    fl_status = models.CharField(max_length=1)
    ds_observacao = models.CharField(max_length=1000, blank=True, null=True)
    dt_cancelamento = models.DateField(blank=True, null=True)
    cd_oper_cancela = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_lote_rast'


class TbMacroCid10(models.Model):
    cd_macrodiag_cid10 = models.IntegerField(primary_key=True)
    cid10 = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cid10')

    class Meta:
        managed = False
        db_table = 'tb_macro_cid10'
        unique_together = (('cd_macrodiag_cid10', 'cid10'),)


class TbMacrodiagCid10(models.Model):
    cd_macrodiag_cid10 = models.IntegerField(primary_key=True)
    nm_macrodiag_cid10 = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'tb_macrodiag_cid10'


class TbMalote(models.Model):
    cd_malote = models.FloatField(primary_key=True)
    cd_usuario = models.CharField(max_length=20)
    dt_cadastro = models.DateField()
    fl_status = models.CharField(max_length=1)
    nm_obs = models.CharField(max_length=1000, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    cd_setor_des = models.CharField(max_length=10, blank=True, null=True)
    cd_setor_ori = models.CharField(max_length=10, blank=True, null=True)
    cd_usuario_des = models.CharField(max_length=100, blank=True, null=True)
    fl_tipo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_malote'


class TbManipOncoHist(models.Model):
    cd_requisicao = models.BigIntegerField(primary_key=True)
    cd_material = models.ForeignKey('TbMatMed', models.DO_NOTHING, db_column='cd_material')
    cd_ordem = models.IntegerField()
    cd_atendimento = models.BigIntegerField(blank=True, null=True)
    nu_comanda = models.CharField(max_length=9, blank=True, null=True)
    dt_manipulacao = models.DateField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade_atendimento = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_unidade_atendimento', blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_paciente = models.ForeignKey('TbPaciente', models.DO_NOTHING, db_column='cd_paciente', blank=True, null=True)
    cd_pessoa_hosp = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa_hosp', blank=True, null=True)
    cd_pessoa_hap = models.FloatField(blank=True, null=True)
    nm_pessoa = models.CharField(max_length=45, blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    nome_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_estoq = models.FloatField(blank=True, null=True)
    prc_mat_med_estoq = models.FloatField(blank=True, null=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_manip_onco_hist'
        unique_together = (('cd_requisicao', 'cd_material', 'cd_ordem'),)


class TbManutencaoLeito(models.Model):
    cd_posto = models.ForeignKey(TbLeitoAcomodacao, models.DO_NOTHING, db_column='cd_posto', primary_key=True)
    cd_acomodacao = models.ForeignKey(TbLeitoAcomodacao, models.DO_NOTHING, db_column='cd_acomodacao')
    nu_leito = models.ForeignKey(TbLeitoAcomodacao, models.DO_NOTHING, db_column='nu_leito')
    cd_tipo_manutencao = models.ForeignKey('TbTipoManutencaoLeito', models.DO_NOTHING, db_column='cd_tipo_manutencao')
    dt_inicio = models.DateField()
    dt_fim = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_manutencao_leito'
        unique_together = (('cd_posto', 'cd_acomodacao', 'nu_leito', 'cd_tipo_manutencao', 'dt_inicio'),)


class TbMapa(models.Model):
    cd_mapa = models.IntegerField(primary_key=True)
    nm_mapa = models.CharField(max_length=240)
    nu_altura = models.IntegerField()
    nu_comprimanto = models.IntegerField()
    fl_uso = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_mapa'


class TbMapaAcomodacao(models.Model):
    cd_mapa = models.ForeignKey('TbVigenciaMapa', models.DO_NOTHING, db_column='cd_mapa')
    dt_vigencia = models.ForeignKey('TbVigenciaMapa', models.DO_NOTHING, db_column='dt_vigencia')
    cd_acomodacao = models.ForeignKey('TmAcomodacao', models.DO_NOTHING, db_column='cd_acomodacao', primary_key=True)
    cd_posto = models.ForeignKey('TmAcomodacao', models.DO_NOTHING, db_column='cd_posto')
    nu_altura = models.IntegerField()
    nu_comprimento = models.IntegerField()
    nu_posicao_x = models.IntegerField()
    nu_posicao_y = models.IntegerField()
    nu_grau = models.IntegerField()
    fl_uso = models.CharField(max_length=1)
    nu_ordem = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_mapa_acomodacao'
        unique_together = (('cd_acomodacao', 'cd_posto', 'cd_mapa', 'dt_vigencia'),)


class TbMapaLeito(models.Model):
    cd_mapa = models.ForeignKey('TbVigenciaMapa', models.DO_NOTHING, db_column='cd_mapa', primary_key=True)
    dt_vigencia = models.ForeignKey('TbVigenciaMapa', models.DO_NOTHING, db_column='dt_vigencia')
    cd_acomodacao = models.ForeignKey(TbLeitoAcomodacao, models.DO_NOTHING, db_column='cd_acomodacao')
    cd_posto = models.ForeignKey(TbLeitoAcomodacao, models.DO_NOTHING, db_column='cd_posto')
    nu_leito = models.ForeignKey(TbLeitoAcomodacao, models.DO_NOTHING, db_column='nu_leito')
    nu_altura = models.IntegerField()
    nu_comprimento = models.IntegerField()
    nu_posicao_x = models.IntegerField()
    nu_posicao_y = models.IntegerField()
    nu_grau = models.IntegerField()
    fl_uso = models.CharField(max_length=1)
    nu_ordem = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_mapa_leito'
        unique_together = (('cd_mapa', 'dt_vigencia', 'cd_acomodacao', 'cd_posto', 'nu_leito'),)


class TbMapaNutricao(models.Model):
    cd_mapa_nutricao = models.BigIntegerField()
    dt_mapa_nutricao = models.DateField(blank=True, null=True)
    nm_setor = models.CharField(max_length=45, blank=True, null=True)
    leito = models.CharField(max_length=47, blank=True, null=True)
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia_plano = models.IntegerField(blank=True, null=True)
    nm_paciente = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    idade = models.CharField(max_length=10, blank=True, null=True)
    peso = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    nu_prescricao_medica = models.IntegerField(blank=True, null=True)
    cd_dieta = models.IntegerField(blank=True, null=True)
    nm_dieta = models.CharField(max_length=500, blank=True, null=True)
    nm_tipo_acesso = models.CharField(max_length=40, blank=True, null=True)
    cd_profissional_valida = models.CharField(max_length=20, blank=True, null=True)
    dt_prescricao_dieta = models.DateField(blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    cd_acomodacao = models.CharField(max_length=6, blank=True, null=True)
    cd_profissional = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    cd_ordem_copia = models.IntegerField(blank=True, null=True)
    cd_ordem_dieta = models.IntegerField(blank=True, null=True)
    cd_ordem_prescricao = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mapa_nutricao'


class TbMapaNutricaoCardapio(models.Model):
    cd_mapa_nutricao = models.BigIntegerField()
    cd_atendimento = models.IntegerField()
    cd_setor = models.CharField(max_length=6)
    cd_dieta = models.IntegerField()
    nm_dieta = models.CharField(max_length=500)
    cd_tipo_cardapio = models.IntegerField()
    nm_tipo_cardapio = models.CharField(max_length=60, blank=True, null=True)
    ds_observacao = models.CharField(max_length=400, blank=True, null=True)
    cd_profissional = models.IntegerField(blank=True, null=True)
    nm_profissional = models.CharField(max_length=20, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_operador_etiq = models.CharField(max_length=30, blank=True, null=True)
    dt_geracao_etiq = models.DateField(blank=True, null=True)
    vl_volume = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    dt_administracao = models.DateField(blank=True, null=True)
    hr_administracao = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mapa_nutricao_cardapio'


class TbMapaNutricaoImpressao(models.Model):
    cd_mapa_nutricao_impressao = models.FloatField(blank=True, null=True)
    cd_mapa_nutricao = models.BigIntegerField(blank=True, null=True)
    dt_mapa_nutricao = models.DateField(blank=True, null=True)
    nm_setor = models.CharField(max_length=45, blank=True, null=True)
    leito = models.CharField(max_length=47, blank=True, null=True)
    cd_atendimento = models.DecimalField(max_digits=22, decimal_places=10, blank=True, null=True)
    cd_ocorrencia_plano = models.DecimalField(max_digits=22, decimal_places=3, blank=True, null=True)
    nm_paciente = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    idade = models.CharField(max_length=10, blank=True, null=True)
    peso = models.DecimalField(max_digits=22, decimal_places=10, blank=True, null=True)
    nu_prescricao_medica = models.DecimalField(max_digits=22, decimal_places=10, blank=True, null=True)
    cd_dieta = models.DecimalField(max_digits=22, decimal_places=6, blank=True, null=True)
    nm_dieta = models.CharField(max_length=500, blank=True, null=True)
    nm_tipo_acesso = models.CharField(max_length=40, blank=True, null=True)
    cd_profissional_valida = models.CharField(max_length=20, blank=True, null=True)
    dt_prescricao_dieta = models.DateField(blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    cd_acomodacao = models.CharField(max_length=6, blank=True, null=True)
    cd_profissional = models.DecimalField(max_digits=22, decimal_places=8, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_ordem = models.DecimalField(max_digits=22, decimal_places=11, blank=True, null=True)
    cd_ordem_copia = models.DecimalField(max_digits=22, decimal_places=11, blank=True, null=True)
    x_1 = models.CharField(max_length=400, blank=True, null=True)
    x_2 = models.CharField(max_length=400, blank=True, null=True)
    x_3 = models.CharField(max_length=400, blank=True, null=True)
    x_4 = models.CharField(max_length=400, blank=True, null=True)
    x_5 = models.CharField(max_length=400, blank=True, null=True)
    x_6 = models.CharField(max_length=400, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mapa_nutricao_impressao'


class TbMapeamentoExamesNd(models.Model):
    cd_exame = models.CharField(primary_key=True, max_length=20)
    ds_exame = models.CharField(max_length=60, blank=True, null=True)
    cd_material = models.CharField(max_length=20, blank=True, null=True)
    ds_material = models.CharField(max_length=60, blank=True, null=True)
    nr_resultado = models.CharField(max_length=30)
    ds_resultado = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mapeamento_exames_nd'
        unique_together = (('cd_exame', 'nr_resultado'),)


class TbMarca(models.Model):
    cd_marca = models.IntegerField(primary_key=True)
    nm_marca = models.CharField(max_length=45)
    nm_contato = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'tb_marca'


class TbMatFornecConversaoUnid(models.Model):
    cd_material = models.FloatField(primary_key=True)
    cd_fornecedor = models.ForeignKey(TbCedenteSacado, models.DO_NOTHING, db_column='cd_fornecedor')
    cd_ocorrencia = models.IntegerField()
    cd_apresentacao_compra = models.ForeignKey(TbApresentacao, models.DO_NOTHING, db_column='cd_apresentacao_compra', blank=True, null=True)
    cd_apresentacao = models.ForeignKey(TbApresentacao, models.DO_NOTHING, db_column='cd_apresentacao', blank=True, null=True)
    qt_conversor_compra_armaz = models.FloatField(blank=True, null=True)
    qt_conversor_armaz_compra = models.FloatField(blank=True, null=True)
    qt_compra = models.FloatField(blank=True, null=True)
    fl_fabricante = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mat_fornec_conversao_unid'
        unique_together = (('cd_material', 'cd_fornecedor', 'cd_ocorrencia'),)


class TbMatMed(models.Model):
    cd_mat_med = models.FloatField(primary_key=True)
    nm_mat_med = models.CharField(max_length=55)
    cd_apresentacao = models.ForeignKey(TbApresentacao, models.DO_NOTHING, db_column='cd_apresentacao', blank=True, null=True)
    cd_classificacao = models.ForeignKey(TbClassificacao, models.DO_NOTHING, db_column='cd_classificacao', blank=True, null=True)
    cd_unidade = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade', blank=True, null=True)
    qt_conteudo = models.FloatField(blank=True, null=True)
    cd_material = models.FloatField(unique=True, blank=True, null=True)
    qt_dosagem = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    qt_conteudo_dosagem = models.FloatField(blank=True, null=True)
    cd_unidade_conteudo_dose = models.CharField(max_length=2, blank=True, null=True)
    fl_diluente = models.CharField(max_length=1, blank=True, null=True)
    cd_referencia = models.CharField(max_length=15, blank=True, null=True)
    cd_tipo_acesso = models.ForeignKey('TbTipoAcesso', models.DO_NOTHING, db_column='cd_tipo_acesso', blank=True, null=True)
    fl_opme = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mat_med'


class TbMatMedCompraFatura(models.Model):
    cd_filial = models.CharField(max_length=3)
    cd_material = models.FloatField()
    dt_refer = models.DateField()
    fl_compra_fatura = models.CharField(max_length=1)
    qt_material = models.FloatField(blank=True, null=True)
    vl_material = models.FloatField(blank=True, null=True)
    vl_material_cf = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mat_med_compra_fatura'


class TbMatMedImcompGrupoProc(models.Model):
    cd_mat_med = models.FloatField(blank=True, null=True)
    cd_param_grupo_proc = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mat_med_imcomp_grupo_proc'


class TbMatMedImcompProcedPed(models.Model):
    cd_mat_med = models.FloatField(blank=True, null=True)
    cd_procedimento = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mat_med_imcomp_proced_ped'


class TbMatMedLido(models.Model):
    cd_requisicao = models.FloatField(primary_key=True)
    cd_codigo_barra = models.CharField(max_length=100)
    cd_material = models.FloatField(blank=True, null=True)
    cd_origem = models.FloatField(blank=True, null=True)
    cd_lote = models.CharField(max_length=30, blank=True, null=True)
    dt_validade = models.DateField(blank=True, null=True)
    cd_ordem = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_mat_med_lido'
        unique_together = (('cd_requisicao', 'cd_codigo_barra', 'cd_ordem'),)


class TbMatMedProcedimento(models.Model):
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', primary_key=True)
    cd_mat_med = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_mat_med')
    qt_mat_med = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_mat_med_procedimento'
        unique_together = (('cd_procedimento', 'cd_mat_med'),)


class TbMatMedProduto(models.Model):
    cd_mat_med = models.FloatField(primary_key=True)
    nu_produto = models.IntegerField()
    fl_uso = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mat_med_produto'
        unique_together = (('cd_mat_med', 'nu_produto'),)


class TbMatReprocessaHemo(models.Model):
    cd_codigo_hemo = models.CharField(max_length=10)
    cd_material = models.FloatField(primary_key=True)
    nm_marca = models.CharField(max_length=60, blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nm_modelo = models.CharField(max_length=40, blank=True, null=True)
    qtd_max_reprocess = models.FloatField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mat_reprocessa_hemo'
        unique_together = (('cd_material', 'cd_codigo_hemo'),)


class TbMatUnidCompraAlternativa(models.Model):
    cd_material = models.FloatField(primary_key=True)
    cd_ocorrencia = models.IntegerField()
    cd_apresentacao_compra = models.ForeignKey(TbApresentacao, models.DO_NOTHING, db_column='cd_apresentacao_compra', blank=True, null=True)
    cd_apresentacao = models.ForeignKey(TbApresentacao, models.DO_NOTHING, db_column='cd_apresentacao', blank=True, null=True)
    qt_conversor_compra_armaz = models.FloatField(blank=True, null=True)
    qt_conversor_armaz_compra = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mat_unid_compra_alternativa'
        unique_together = (('cd_material', 'cd_ocorrencia'),)


class TbMaterialAnestesia(models.Model):
    id = models.FloatField(primary_key=True)
    cd_tipo_anestesia = models.ForeignKey('TbTipoAnestesia', models.DO_NOTHING, db_column='cd_tipo_anestesia', blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    qt_material = models.FloatField(blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fin_vigencia = models.DateField(blank=True, null=True)
    user_ini = models.CharField(max_length=10, blank=True, null=True)
    user_fin = models.CharField(max_length=10, blank=True, null=True)
    fl_pqa = models.CharField(max_length=1, blank=True, null=True)
    fl_pediatria = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_material_anestesia'


class TbMaterialCirurgia(models.Model):
    id = models.FloatField(primary_key=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', blank=True, null=True)
    cd_ato_cirurgico = models.ForeignKey(TbCirurgiaMaterial, models.DO_NOTHING, db_column='cd_ato_cirurgico', blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fin_vigencia = models.DateField(blank=True, null=True)
    user_ini = models.CharField(max_length=10, blank=True, null=True)
    user_fin = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_material_cirurgia'


class TbMaterialComErro(models.Model):
    cd_material = models.FloatField()
    cd_setor = models.CharField(max_length=6)
    dt_transacao = models.DateField()
    cd_usuario = models.CharField(max_length=8, blank=True, null=True)
    ds_justificativa = models.CharField(max_length=200, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_material_com_erro'


class TbMaterialControlVal(models.Model):
    cd_mat_med = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_mat_med')
    dt_transacao = models.DateField(blank=True, null=True)
    cd_responsavel = models.CharField(max_length=20, blank=True, null=True)
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio', primary_key=True)

    class Meta:
        managed = False
        db_table = 'tb_material_control_val'
        unique_together = (('cd_convenio', 'cd_mat_med'),)


class TbMaterialConvenio(models.Model):
    cd_material = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_material')
    cd_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_convenio', primary_key=True)
    cd_plano_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano_convenio')
    fl_pagamento = models.CharField(max_length=1)
    cd_material_convenio = models.FloatField()
    nm_material_convenio = models.CharField(max_length=55)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fin_vigencia = models.DateField(blank=True, null=True)
    fl_emergencia = models.CharField(max_length=1, blank=True, null=True)
    cd_mat_tiss = models.FloatField(blank=True, null=True)
    fl_opme = models.CharField(max_length=1, blank=True, null=True)
    cd_operador = models.CharField(max_length=20, blank=True, null=True)
    dt_atualizacao = models.DateField(blank=True, null=True)
    cd_tuss = models.CharField(max_length=12, blank=True, null=True)
    qt_mat_permitida = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_material_convenio'
        unique_together = (('cd_convenio', 'cd_plano_convenio', 'cd_material'),)


class TbMaterialCurvaAbc(models.Model):
    cd_material = models.FloatField(primary_key=True)
    cd_setor = models.CharField(max_length=6)
    fl_abc = models.CharField(max_length=1, blank=True, null=True)
    fl_xyz = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_material_curva_abc'
        unique_together = (('cd_material', 'cd_setor'),)


class TbMaterialDePara(models.Model):
    cd_material_de = models.FloatField(primary_key=True)
    cd_material_para = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_material_de_para'
        unique_together = (('cd_material_de', 'cd_material_para'),)


class TbMaterialEmergencia(models.Model):
    cd_material = models.FloatField(primary_key=True)
    nm_material = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'tb_material_emergencia'


class TbMaterialGasto(models.Model):
    cd_material = models.FloatField(primary_key=True)
    cd_mat_med = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_mat_med')
    fl_tipo_gasto = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_material_gasto'
        unique_together = (('cd_material', 'cd_mat_med'),)


class TbMaterialIdFabricante(models.Model):
    cd_material = models.FloatField(primary_key=True)
    id_fabricante = models.BigIntegerField()
    cd_fabricante = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_fabricante')
    fl_status = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'tb_material_id_fabricante'
        unique_together = (('cd_material', 'id_fabricante'),)


class TbMaterialLabApoio(models.Model):
    cd_mnemonico_mat = models.CharField(primary_key=True, max_length=20)
    cd_laboratorio_apoio = models.ForeignKey(TbLaboratorioApoio, models.DO_NOTHING, db_column='cd_laboratorio_apoio')
    ds_material = models.CharField(max_length=20)
    material_real = models.CharField(max_length=20, blank=True, null=True)
    conservante = models.CharField(max_length=20, blank=True, null=True)
    ds_inf_comple = models.CharField(max_length=60, blank=True, null=True)
    cd_mnemonico_exame = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_material_lab_apoio'
        unique_together = (('cd_mnemonico_mat', 'cd_laboratorio_apoio', 'cd_mnemonico_exame'),)


class TbMaterialLacre(models.Model):
    nu_lacre = models.FloatField(primary_key=True)
    dt_transacao = models.DateField()
    nm_operador = models.CharField(max_length=10)
    cd_setor = models.CharField(max_length=6)
    cd_motorista = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_material_lacre'


class TbMaterialMarca(models.Model):
    cd_material = models.IntegerField(primary_key=True)
    cd_marca = models.ForeignKey(TbMarca, models.DO_NOTHING, db_column='cd_marca')
    qt_caixa = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_material_marca'
        unique_together = (('cd_material', 'cd_marca'),)


class TbMaterialPadronizado(models.Model):
    cd_material = models.FloatField(primary_key=True)
    cd_filial = models.CharField(max_length=3)
    fl_padronizado = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_material_padronizado'
        unique_together = (('cd_material', 'cd_filial'),)


class TbMaterialPediatria(models.Model):
    id = models.FloatField(primary_key=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', blank=True, null=True)
    cd_faixa = models.FloatField(blank=True, null=True)
    qt_material = models.FloatField(blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fin_vigencia = models.DateField(blank=True, null=True)
    user_ini = models.CharField(max_length=10, blank=True, null=True)
    user_fin = models.CharField(max_length=10, blank=True, null=True)
    qt_dispensacao = models.FloatField(blank=True, null=True)
    qt_kit_reduzido = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_material_pediatria'


class TbMaterialProv(models.Model):
    nr_material = models.CharField(max_length=100, blank=True, null=True)
    cd_classificacao = models.CharField(max_length=100, blank=True, null=True)
    qt_conteudo = models.CharField(max_length=100, blank=True, null=True)
    cd_unidade_usual = models.CharField(max_length=100, blank=True, null=True)
    fl_validade = models.CharField(max_length=100, blank=True, null=True)
    cd_setor_entrada = models.CharField(max_length=100, blank=True, null=True)
    cd_similar = models.CharField(max_length=100, blank=True, null=True)
    cd_apresentacao = models.CharField(max_length=100, blank=True, null=True)
    dt_cadastro = models.CharField(max_length=100, blank=True, null=True)
    fl_controlado = models.CharField(max_length=100, blank=True, null=True)
    fl_fragmenta = models.CharField(max_length=100, blank=True, null=True)
    fl_consignado = models.CharField(max_length=100, blank=True, null=True)
    dt_ini_vigencia = models.CharField(max_length=100, blank=True, null=True)
    fl_invasivo = models.CharField(max_length=100, blank=True, null=True)
    qt_dosagem = models.CharField(max_length=100, blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=100, blank=True, null=True)
    qt_conteudo_dosagem = models.CharField(max_length=100, blank=True, null=True)
    cd_unidade_conteudo_dose = models.CharField(max_length=100, blank=True, null=True)
    fl_foto_sensivel = models.CharField(max_length=100, blank=True, null=True)
    fl_possui_diluente_proprio = models.CharField(max_length=100, blank=True, null=True)
    cd_apresentacao_armaz = models.CharField(max_length=100, blank=True, null=True)
    qt_conteudo_armaz = models.CharField(max_length=100, blank=True, null=True)
    cd_unidade_usual_armaz = models.CharField(max_length=100, blank=True, null=True)
    cd_apresentacao_compra = models.CharField(max_length=100, blank=True, null=True)
    qt_conteudo_compra = models.CharField(max_length=100, blank=True, null=True)
    cd_unidade_usual_compra = models.CharField(max_length=100, blank=True, null=True)
    nm_universal = models.CharField(max_length=100, blank=True, null=True)
    nm_cor = models.CharField(max_length=100, blank=True, null=True)
    nm_potencia = models.CharField(max_length=100, blank=True, null=True)
    nm_voltagem = models.CharField(max_length=100, blank=True, null=True)
    nm_utilizacao = models.CharField(max_length=100, blank=True, null=True)
    nr_tamanho = models.CharField(max_length=100, blank=True, null=True)
    cd_unidade_pot = models.CharField(max_length=100, blank=True, null=True)
    cd_unidade_vol = models.CharField(max_length=100, blank=True, null=True)
    fl_alta_vigilancia = models.CharField(max_length=100, blank=True, null=True)
    nm_material = models.CharField(max_length=100, blank=True, null=True)
    ds_mensagem = models.TextField(blank=True, null=True)
    nr_linha = models.FloatField(blank=True, null=True)
    cd_arquivo = models.FloatField(blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_material_prov'


class TbMaterialProvArq(models.Model):
    cd_arquivo = models.FloatField(primary_key=True)
    nm_arquivo = models.CharField(max_length=2000, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)
    nm_operador = models.CharField(max_length=15, blank=True, null=True)
    ds_mensagem = models.TextField(blank=True, null=True)
    cd_status = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_material_prov_arq'


class TbMaterialRealLapApoio(models.Model):
    cd_material_real = models.CharField(primary_key=True, max_length=20)
    ds_material_real = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_material_real_lap_apoio'


class TbMaterialResponsavel(models.Model):
    id = models.FloatField(primary_key=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', blank=True, null=True)
    cd_responsavel = models.FloatField(blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fin_vigencia = models.DateField(blank=True, null=True)
    user_ini = models.CharField(max_length=10, blank=True, null=True)
    user_fin = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_material_responsavel'


class TbMaterialTpCarroParada(models.Model):
    cd_tipo_carro_parada = models.ForeignKey('TbTipoCarroParada', models.DO_NOTHING, db_column='cd_tipo_carro_parada', primary_key=True)
    cd_material = models.FloatField()
    cd_local = models.FloatField(blank=True, null=True)
    qtd_material = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_material_tp_carro_parada'
        unique_together = (('cd_tipo_carro_parada', 'cd_material'),)


class TbMaterialValor(models.Model):
    id = models.FloatField(primary_key=True)
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio')
    cd_material = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_material')
    vlr_caucao = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vlr_material = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    observacao = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_material_valor'
        unique_together = (('cd_convenio', 'cd_material'),)


class TbMedAntimicrobiano(models.Model):
    cd_solicitacao = models.IntegerField(primary_key=True)
    cd_unidade_atendimento = models.CharField(max_length=3, blank=True, null=True)
    cd_setor_controle = models.CharField(max_length=6, blank=True, null=True)
    cd_atendimento = models.ForeignKey(TbDiagnosticoAtendimento, models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    nu_comanda = models.IntegerField(blank=True, null=True)
    cd_paciente = models.IntegerField(blank=True, null=True)
    nm_operador = models.CharField(max_length=30, blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    usuario_liberou = models.CharField(max_length=10, blank=True, null=True)
    dt_liberacao = models.DateField(blank=True, null=True)
    nu_prescricao_medica = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='nu_prescricao_medica', blank=True, null=True)
    fl_infeccao_cateter = models.CharField(max_length=1, blank=True, null=True)
    fl_itu = models.CharField(max_length=1, blank=True, null=True)
    fl_pneumonia = models.CharField(max_length=1, blank=True, null=True)
    fl_meningite = models.CharField(max_length=1, blank=True, null=True)
    fl_sitio_cirurgico = models.CharField(max_length=1, blank=True, null=True)
    outras_infeccoes = models.CharField(max_length=100, blank=True, null=True)
    ds_quadro_clinico = models.CharField(max_length=3000, blank=True, null=True)
    prof_validou = models.IntegerField(blank=True, null=True)
    dt_validacao = models.DateField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=500, blank=True, null=True)
    cd_prof_autorizou = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_prof_autorizou', blank=True, null=True)
    cd_ocorrencia_plano = models.ForeignKey(TbDiagnosticoAtendimento, models.DO_NOTHING, db_column='cd_ocorrencia_plano', blank=True, null=True)
    cd_ordem_diagnostico = models.ForeignKey(TbDiagnosticoAtendimento, models.DO_NOTHING, db_column='cd_ordem_diagnostico', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_med_antimicrobiano'


class TbMedBio(models.Model):
    idbio = models.FloatField(primary_key=True)
    cd_cstat = models.FloatField(blank=True, null=True)
    nm_xmotivo = models.CharField(max_length=1024, blank=True, null=True)
    nu_consulta = models.FloatField(blank=True, null=True)
    dt_verificacao = models.DateField()
    cd_pessoa = models.FloatField(blank=True, null=True)
    cd_identificador = models.CharField(max_length=14, blank=True, null=True)
    obs = models.CharField(max_length=1024, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_med_bio'


class TbMedSugestaoEsquema(models.Model):
    cd_solicitacao = models.IntegerField(primary_key=True)
    cd_material = models.IntegerField()
    via = models.CharField(max_length=6, blank=True, null=True)
    qt_dosagem = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_dosagem', blank=True, null=True)
    qt_intervalo_de = models.IntegerField(blank=True, null=True)
    qt_intervalo_ate = models.IntegerField(blank=True, null=True)
    dias_duracao = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_med_sugestao_esquema'
        unique_together = (('cd_solicitacao', 'cd_material'),)


class TbMedicControlLib(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_requisicao = models.IntegerField()
    nu_comanda = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='nu_comanda', blank=True, null=True)
    cd_material = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_material')
    cd_dias = models.IntegerField(blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_responsavel = models.CharField(max_length=20, blank=True, null=True)
    obs = models.CharField(max_length=100, blank=True, null=True)
    liberado = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    dt_emissao = models.DateField(blank=True, null=True)
    dt_transacao_req = models.DateField(blank=True, null=True)
    cd_responsavel_req = models.CharField(max_length=20, blank=True, null=True)
    cd_pendencia = models.IntegerField(blank=True, null=True)
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento', blank=True, null=True)
    nm_similar_autorizado = models.CharField(max_length=500, blank=True, null=True)
    dt_liberacao = models.DateField(blank=True, null=True)
    hr_liberacao = models.FloatField(blank=True, null=True)
    cd_requisicao_lib = models.IntegerField(blank=True, null=True)
    qt_autorizada = models.FloatField(blank=True, null=True)
    cd_senha = models.CharField(max_length=12, blank=True, null=True)
    cd_material_ori_presc = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_medic_control_lib'
        unique_together = (('cd_atendimento', 'cd_requisicao', 'cd_material'),)


class TbMedicControlRec(models.Model):
    nu_receita = models.IntegerField(primary_key=True)
    nu_prescricao_medica = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='nu_prescricao_medica')
    cd_ordem_presc = models.IntegerField()
    cd_mat_med = models.IntegerField()
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_medic_control_rec'


class TbMedicControlVal(models.Model):
    cd_mat_med = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_mat_med', primary_key=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_responsavel = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_medic_control_val'


class TbMedicamentoGenerico(models.Model):
    cd_generico = models.IntegerField(primary_key=True)
    nm_generico = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_medicamento_generico'


class TbMedicamentoIncopativeis(models.Model):
    cd_principio_ativo = models.ForeignKey('TbPrincipioAtivo', models.DO_NOTHING, db_column='cd_principio_ativo', primary_key=True)
    cd_principio_ativo_icompativel = models.ForeignKey('TbPrincipioAtivo', models.DO_NOTHING, db_column='cd_principio_ativo_icompativel')
    ds_efeito_princ_ativo = models.CharField(max_length=1000, blank=True, null=True)
    ds_efeito_princ_ativo_incomp = models.CharField(max_length=1000, blank=True, null=True)
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)
    fl_interacao_principal = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_medicamento_incopativeis'
        unique_together = (('cd_principio_ativo', 'cd_principio_ativo_icompativel'),)


class TbMedicamentoLabApoio(models.Model):
    cd_mnemonico_med = models.CharField(primary_key=True, max_length=10)
    cd_laboratorio_apoio = models.IntegerField()
    ds_medicamento = models.CharField(max_length=30, blank=True, null=True)
    ds_tratamento = models.CharField(max_length=45, blank=True, null=True)
    ds_interferencia = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_medicamento_lab_apoio'
        unique_together = (('cd_mnemonico_med', 'cd_laboratorio_apoio'),)


class TbMedicoAtuanteAtendimento(models.Model):
    cd_ocorrencia_atuacao = models.FloatField(blank=True, null=True)
    dt_encaminhamento = models.DateField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_operador_encaminhamento = models.CharField(max_length=20, blank=True, null=True)
    cd_local = models.FloatField(blank=True, null=True)
    cd_grupo = models.FloatField(blank=True, null=True)
    dt_inicio_atendimento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_medico_atuante_atendimento'


class TbMedicoCrm(models.Model):
    nome = models.CharField(max_length=40, blank=True, null=True)
    endereco = models.CharField(max_length=40, blank=True, null=True)
    bairro = models.CharField(max_length=30, blank=True, null=True)
    cep = models.CharField(max_length=8, blank=True, null=True)
    cidade = models.CharField(max_length=30, blank=True, null=True)
    estado = models.CharField(max_length=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_medico_crm'


class TbMedicoFilial(models.Model):
    cd_empresa = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_empresa')
    cd_medico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_medico_filial'
        unique_together = (('cd_medico', 'cd_empresa', 'dt_ini_vigencia'),)


class TbMedicoFormaPagamento(models.Model):
    cd_medico_forma_pagamento = models.IntegerField()
    cd_prestador_fisico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_prestador_fisico', blank=True, null=True)
    cd_prestador_juridico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_prestador_juridico', blank=True, null=True)
    cd_especialidade = models.ForeignKey(TbEspecialidade, models.DO_NOTHING, db_column='cd_especialidade', blank=True, null=True)
    dt_inicio_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_forma_pagamento_medico = models.ForeignKey(TbFormaPagamentoMedico, models.DO_NOTHING, db_column='cd_forma_pagamento_medico', blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_operacao = models.DateField(blank=True, null=True)
    id_pessoa_finpac = models.FloatField(blank=True, null=True)
    id_cc_finpac = models.FloatField(blank=True, null=True)
    id_pessoa_sap = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_medico_forma_pagamento'
        unique_together = (('cd_prestador_juridico', 'cd_prestador_fisico', 'dt_inicio_vigencia'),)


class TbMedicoTitulo(models.Model):
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional', primary_key=True)
    cd_titulo = models.ForeignKey('TbMedicoTituloTipo', models.DO_NOTHING, db_column='cd_titulo')
    dt_con = models.DateField(blank=True, null=True)
    cd_ord_exb = models.IntegerField(blank=True, null=True)
    fl_exb_tit = models.CharField(max_length=1, blank=True, null=True)
    nm_titulo = models.CharField(max_length=200, blank=True, null=True)
    dt_cadastro = models.DateField(blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)
    fl_excluido = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_medico_titulo'
        unique_together = (('cd_profissional', 'cd_titulo'),)


class TbMedicoTituloTipo(models.Model):
    cd_titulo = models.IntegerField(primary_key=True)
    nm_titulo = models.CharField(max_length=240)
    nr_titulo = models.CharField(max_length=50, blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)
    fl_excluido = models.NullBooleanField()
    dt_cad = models.DateField(blank=True, null=True)
    dt_mod = models.DateField(blank=True, null=True)
    cd_user = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_medico_titulo_tipo'


class TbMedidasRn(models.Model):
    cd_atendimento = models.ForeignKey(TbDadosRn, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    dt_acompanhamento = models.DateField()
    qt_perimetro_cefalico = models.IntegerField()
    qt_perimetro_toraxico = models.IntegerField()
    qt_tamanho = models.IntegerField()
    qt_peso = models.DecimalField(max_digits=4, decimal_places=1)
    ds_observacao = models.CharField(max_length=150, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_medidas_rn'
        unique_together = (('cd_atendimento', 'dt_acompanhamento'),)


class TbMeioComunicacaoPessoa(models.Model):
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa', primary_key=True)
    cd_ordem_meio_comunicacao = models.IntegerField()
    cd_tipo_meio_comunicacao = models.ForeignKey('TbTipoMeioComunicacao', models.DO_NOTHING, db_column='cd_tipo_meio_comunicacao')
    nu_meio_comunicacao = models.CharField(max_length=20)
    ds_compl_meio_comunic = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_meio_comunicacao_pessoa'
        unique_together = (('cd_pessoa', 'cd_ordem_meio_comunicacao'),)


class TbMeioOcorrencia(models.Model):
    tp_meio_ocorrencia = models.IntegerField(primary_key=True)
    ds_meio_ocorrencia = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_meio_ocorrencia'


class TbMembrosReuniao(models.Model):
    cd_profissional = models.ForeignKey('TbProfissionalComite', models.DO_NOTHING, db_column='cd_profissional')
    cd_comite = models.ForeignKey('TbReunioes', models.DO_NOTHING, db_column='cd_comite', primary_key=True)
    cd_ocorrencia = models.ForeignKey('TbReunioes', models.DO_NOTHING, db_column='cd_ocorrencia')

    class Meta:
        managed = False
        db_table = 'tb_membros_reuniao'
        unique_together = (('cd_comite', 'cd_ocorrencia', 'cd_profissional'),)


class TbMensLocalAtendimentoSa(models.Model):
    cd_local_atendimento = models.ForeignKey(TbLocalAtendimentoSa, models.DO_NOTHING, db_column='cd_local_atendimento', primary_key=True)
    nu_endereco_ip = models.CharField(max_length=15)
    ds_mensagem = models.CharField(max_length=85)

    class Meta:
        managed = False
        db_table = 'tb_mens_local_atendimento_sa'
        unique_together = (('cd_local_atendimento', 'nu_endereco_ip'),)


class TbMensagemGeradaTiss(models.Model):
    nu_protocolo = models.FloatField(primary_key=True)
    xml_doc = models.TextField(blank=True, null=True)  # This field type is a guess.
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mensagem_gerada_tiss'


class TbMensagemMedico(models.Model):
    cd_mensagem_medico = models.FloatField(primary_key=True)
    ds_mensagem = models.CharField(max_length=20, blank=True, null=True)
    dt_inicio_mensagem = models.DateField(blank=True, null=True)
    dt_fim_mensagem = models.DateField(blank=True, null=True)
    im_mensagem = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'tb_mensagem_medico'


class TbMensagemRecebidaTiss(models.Model):
    nu_protocolo = models.FloatField(primary_key=True)
    xml_doc = models.TextField(blank=True, null=True)  # This field type is a guess.
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    cd_glosa = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mensagem_recebida_tiss'


class TbMensagemXml(models.Model):
    nu_protocolo = models.BigIntegerField(primary_key=True)
    obj_version = models.BigIntegerField(blank=True, null=True)
    xml_doc = models.TextField(blank=True, null=True)
    nu_protocolo_ret = models.BigIntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    hash_xml = models.CharField(max_length=32, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mensagem_xml'


class TbMensagensClass(models.Model):
    cd_mensagens_class = models.FloatField(primary_key=True)
    ds_mensagens_class = models.CharField(max_length=255)
    nm_formulario = models.CharField(max_length=100, blank=True, null=True)
    fl_tipo_detalhe = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mensagens_class'


class TbMensagensTipo(models.Model):
    cd_mensagens_tipo = models.FloatField(primary_key=True)
    ds_mensagens_tipo = models.CharField(max_length=255)

    class Meta:
        managed = False
        db_table = 'tb_mensagens_tipo'


class TbMes(models.Model):
    cd_mes = models.FloatField(primary_key=True)
    nm_mes = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'tb_mes'


class TbMetodoApgar(models.Model):
    cd_atendimento = models.ForeignKey(TbDadosRn, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.IntegerField()
    nu_apgar = models.BooleanField()
    nu_minuto = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_metodo_apgar'
        unique_together = (('cd_atendimento', 'cd_ocorrencia'),)


class TbMetodoProcedimento(models.Model):
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', primary_key=True)
    cd_metodo_realizado = models.ForeignKey('TbMetodoRealizado', models.DO_NOTHING, db_column='cd_metodo_realizado')
    cd_metodo_usual = models.CharField(max_length=1, blank=True, null=True)
    dt_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_laboratorio_apoio = models.FloatField(blank=True, null=True)
    cd_laboratorio_ter = models.ForeignKey(TbLaboratorioTerceirizado, models.DO_NOTHING, db_column='cd_laboratorio_ter', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_metodo_procedimento'
        unique_together = (('cd_procedimento', 'cd_metodo_realizado'),)


class TbMetodoRealizado(models.Model):
    cd_metodo_realizado = models.IntegerField(primary_key=True)
    ds_metodo_realizado = models.CharField(max_length=100)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    dt_vigencia = models.DateField(blank=True, null=True)
    fl_filial = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_metodo_realizado'


class TbMetodoRealizadoFilial(models.Model):
    cd_metodo_realizado = models.ForeignKey(TbMetodoRealizado, models.DO_NOTHING, db_column='cd_metodo_realizado')
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento')
    fl_ativo = models.CharField(max_length=1)
    cd_operador = models.CharField(max_length=30)
    dt_modificacao = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_metodo_realizado_filial'


class TbMicroorganismo(models.Model):
    cd_microbio = models.FloatField(primary_key=True)
    nm_microbio = models.CharField(max_length=120, blank=True, null=True)
    ds_genero_microbio = models.CharField(max_length=120, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_microorganismo'


class TbModalEspcProfPacs(models.Model):
    cd_profissional = models.IntegerField()
    cd_grupo_produto = models.IntegerField()
    cd_procedimento = models.CharField(max_length=8)
    fl_filtra = models.CharField(max_length=1, blank=True, null=True)
    fl_libera_trava = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_modal_espc_prof_pacs'
        unique_together = (('cd_profissional', 'cd_grupo_produto', 'cd_procedimento'),)


class TbModalidadeProfPacs(models.Model):
    cd_profissional = models.ForeignKey(TbLaudoParamFiltro, models.DO_NOTHING, db_column='cd_profissional', primary_key=True)
    cd_grupo_produto = models.ForeignKey('TbModalidadeWorklist', models.DO_NOTHING, db_column='cd_grupo_produto')
    fl_filtra = models.CharField(max_length=1, blank=True, null=True)
    fl_libera_trava = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_modalidade_prof_pacs'
        unique_together = (('cd_profissional', 'cd_grupo_produto'),)


class TbModalidadeWorklist(models.Model):
    cd_grupo_produto = models.ForeignKey(TbGrupoProduto, models.DO_NOTHING, db_column='cd_grupo_produto', primary_key=True)
    ds_sigla = models.CharField(max_length=4)
    dt_registro = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    fl_disponivel = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_modalidade_worklist'


class TbModelo(models.Model):
    cd_modelo = models.IntegerField(primary_key=True)
    nm_modelo = models.CharField(max_length=45)

    class Meta:
        managed = False
        db_table = 'tb_modelo'


class TbModeloDiagnostico(models.Model):
    cd_modelo_diagnostico = models.IntegerField(primary_key=True)
    ds_modelo_diagnostico = models.CharField(max_length=2000)
    cd_mnemonico = models.CharField(unique=True, max_length=8)
    dt_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_microbio = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_modelo_diagnostico'


class TbModeloDiagnosticoProced(models.Model):
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')
    cd_modelo_diagnostico = models.ForeignKey(TbModeloDiagnostico, models.DO_NOTHING, db_column='cd_modelo_diagnostico')
    fl_ativo = models.CharField(max_length=1)
    fl_obrigacao = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_modelo_diagnostico_proced'
        unique_together = (('cd_procedimento', 'cd_modelo_diagnostico'),)


class TbModeloLaudo(models.Model):
    cd_modelo_laudo = models.IntegerField(primary_key=True)
    nm_modelo_laudo = models.CharField(max_length=30)
    ds_modelo_laudo = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'tb_modelo_laudo'


class TbModeloLaudoExame(models.Model):
    cd_modelo_laudo = models.IntegerField(primary_key=True)
    nm_modelo_laudo = models.CharField(max_length=45)
    cd_mnemonico = models.CharField(max_length=8, blank=True, null=True)
    ds_modelo_laudo = models.TextField(blank=True, null=True)  # This field type is a guess.
    qt_dias_uteis_alt_laudo = models.FloatField(blank=True, null=True)
    fl_padrao_normal = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_modelo_laudo_exame'


class TbModeloPlanoTratFilial(models.Model):
    cd_modelo = models.IntegerField(primary_key=True)
    cd_ocorrencia_filial = models.IntegerField()
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial')
    cd_grupo_atendimento = models.ForeignKey(TbGrupoAtendimentoSa, models.DO_NOTHING, db_column='cd_grupo_atendimento', blank=True, null=True)
    cd_local_atendimento = models.ForeignKey(TbGrupoAtendimentoSa, models.DO_NOTHING, db_column='cd_local_atendimento', blank=True, null=True)
    cd_classe_acomodacao = models.ForeignKey(TbClasseAcomodacao, models.DO_NOTHING, db_column='cd_classe_acomodacao', blank=True, null=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)
    fl_visita_obrigatoria = models.CharField(max_length=1, blank=True, null=True)
    fl_obriga_biometria = models.CharField(max_length=1, blank=True, null=True)
    qt_dias_validade_tev = models.IntegerField(blank=True, null=True)
    fl_reconhecimento_facial = models.CharField(max_length=1, blank=True, null=True)
    fl_class_pos_cirurgica = models.CharField(max_length=1, blank=True, null=True)
    cd_perfil_cuidado_pos = models.ForeignKey('TbPerfilCuidadoPaciente', models.DO_NOTHING, db_column='cd_perfil_cuidado_pos', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_modelo_plano_trat_filial'
        unique_together = (('cd_modelo', 'cd_ocorrencia_filial'),)


class TbModeloPlanoTratParam(models.Model):
    cd_modelo = models.IntegerField(primary_key=True)
    visual_attribute = models.CharField(max_length=64, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_modelo_plano_trat_param'


class TbModeloPlanoTratamento(models.Model):
    cd_modelo = models.IntegerField(primary_key=True)
    ds_modelo = models.CharField(max_length=1000)
    nu_tempo_estimado = models.IntegerField(blank=True, null=True)
    fl_unidade_tempo = models.CharField(max_length=1, blank=True, null=True)
    ds_tratamento = models.CharField(max_length=1000, blank=True, null=True)
    fl_local_tratamento = models.CharField(max_length=1, blank=True, null=True)
    cd_diagnostico = models.ForeignKey(TbCid, models.DO_NOTHING, db_column='cd_diagnostico', blank=True, null=True)
    dt_ultima_modificacao = models.DateField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=1000, blank=True, null=True)
    cd_cid = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cd_cid', blank=True, null=True)
    cd_mnemonico_modelo = models.CharField(max_length=50, blank=True, null=True)
    fl_tipo_modelo = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_modelo_plano_tratamento'


class TbModeloPlanoTratamentoCid(models.Model):
    cd_modelo = models.ForeignKey(TbModeloPlanoTratamento, models.DO_NOTHING, db_column='cd_modelo', primary_key=True)
    cd_ocorrencia_cid = models.IntegerField()
    cd_cid = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cd_cid', blank=True, null=True)
    nm_cid = models.CharField(max_length=500, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_modelo_plano_tratamento_cid'
        unique_together = (('cd_modelo', 'cd_ocorrencia_cid'),)


class TbModeloProcedimento(models.Model):
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', primary_key=True)
    cd_modelo_diagnostico = models.ForeignKey(TbModeloDiagnostico, models.DO_NOTHING, db_column='cd_modelo_diagnostico')
    fl_modelo_obrigatorio = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_modelo_procedimento'
        unique_together = (('cd_procedimento', 'cd_modelo_diagnostico'),)


class TbMotivoAceitePedido(models.Model):
    cd_motivo_aceite_dedido = models.FloatField(primary_key=True)
    ds_motivo_aceite_pedido = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_motivo_aceite_pedido'


class TbMotivoAtendimento(models.Model):
    cd_motivo_atendimento = models.IntegerField(primary_key=True)
    nm_motivo_atendimento = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_motivo_atendimento'


class TbMotivoAutorizacao(models.Model):
    cd_motivo_autorizacao = models.FloatField(primary_key=True)
    ds_motivo_autorizacao = models.CharField(max_length=45, blank=True, null=True)
    fl_gera_pendencia = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_motivo_autorizacao'


class TbMotivoAutorizacaoBioFace(models.Model):
    cd_motivo_autorizacao = models.FloatField(primary_key=True)
    ds_motivo_autorizacao = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_motivo_autorizacao_bio_face'


class TbMotivoCategAmostra(models.Model):
    cd_categ_amostra = models.FloatField(primary_key=True)
    nm_categ_amostra = models.CharField(max_length=100)
    fl_classificacao = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_motivo_categ_amostra'


class TbMotivoCirurgia(models.Model):
    cd_motivo = models.IntegerField(primary_key=True)
    nm_motivo = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_motivo_cirurgia'


class TbMotivoGlosaAcatada(models.Model):
    cd_motivo = models.FloatField(primary_key=True)
    nr_motivo = models.CharField(max_length=60, blank=True, null=True)
    cd_classe_motivo = models.CharField(max_length=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_motivo_glosa_acatada'


class TbMotivoOcupaUti(models.Model):
    cd_atendimento = models.ForeignKey('TbOcupacaoAcomodacao', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_atend = models.ForeignKey('TbOcupacaoAcomodacao', models.DO_NOTHING, db_column='cd_ocorrencia_atend')
    cd_motivo_uti = models.ForeignKey('TbMotivoUti', models.DO_NOTHING, db_column='cd_motivo_uti')

    class Meta:
        managed = False
        db_table = 'tb_motivo_ocupa_uti'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_atend', 'cd_motivo_uti'),)


class TbMotivoPendencia(models.Model):
    cd_motivo_pendencia = models.IntegerField(primary_key=True)
    ds_motivo_pendencia = models.CharField(max_length=60)

    class Meta:
        managed = False
        db_table = 'tb_motivo_pendencia'


class TbMotivoRecoleta(models.Model):
    cd_motivo_recoleta = models.IntegerField(primary_key=True)
    ds_motivo_recoleta = models.CharField(max_length=100)
    fl_ativo = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_motivo_recoleta'


class TbMotivoReimpressaoPulseira(models.Model):
    cd_motivo_reimpressao_pulseira = models.IntegerField(primary_key=True)
    ds_motivo_reimpressao = models.CharField(max_length=140)
    fl_exibe_pep = models.CharField(max_length=1, blank=True, null=True)
    fl_ativo = models.CharField(max_length=1)
    fl_primeira_visita = models.CharField(max_length=1, blank=True, null=True)
    fl_outro = models.CharField(max_length=1, blank=True, null=True)
    nu_ordem_apresentacao = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=40, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_motivo_reimpressao_pulseira'


class TbMotivoRetificacao(models.Model):
    cd_motivo_retificacao = models.FloatField(primary_key=True)
    nm_motivo_retificacao = models.CharField(max_length=500)

    class Meta:
        managed = False
        db_table = 'tb_motivo_retificacao'


class TbMotivoSaidaInternacaoAns(models.Model):
    cd_motivo_saida_internacao = models.IntegerField(primary_key=True)
    ds_motivo_saida_internacao = models.CharField(max_length=100)
    cd_termo = models.CharField(max_length=12, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_motivo_saida_internacao_ans'


class TbMotivoTransfExterna(models.Model):
    cd_motivo_transf_externa = models.IntegerField(primary_key=True)
    ds_motivo_transf_externa = models.CharField(max_length=140)
    fl_exame = models.CharField(max_length=1, blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_motivo_transf_externa'


class TbMotivoUti(models.Model):
    cd_motivo_uti = models.IntegerField(primary_key=True)
    ds_motivo_uti = models.CharField(max_length=60)

    class Meta:
        managed = False
        db_table = 'tb_motivo_uti'


class TbMotorista(models.Model):
    cd_motorista = models.IntegerField(primary_key=True)
    cd_setor = models.CharField(max_length=6)
    nu_matricula = models.IntegerField(blank=True, null=True)
    nm_motorista = models.CharField(max_length=100)
    rg_motorista = models.CharField(max_length=20)
    cnh_motorista = models.CharField(max_length=20)
    nm_empresa = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'tb_motorista'


class TbMovCodbarraPosto(models.Model):
    cd_codigo_barra = models.CharField(primary_key=True, max_length=100)
    cd_ocorrencia = models.IntegerField()
    dt_transacao = models.DateField()
    fl_tipo = models.CharField(max_length=1)
    cd_atendimento = models.BigIntegerField(blank=True, null=True)
    cd_posto_origem = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_posto_origem', blank=True, null=True)
    cd_posto_destino = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_posto_destino', blank=True, null=True)
    cd_ocorrencia_plano = models.IntegerField(blank=True, null=True)
    cd_ordem_prescricao = models.IntegerField(blank=True, null=True)
    cd_ordem_prescricao_plano = models.IntegerField(blank=True, null=True)
    cd_ordem_hr_medic = models.IntegerField(blank=True, null=True)
    cd_ordem_proc_plano_uso = models.IntegerField(blank=True, null=True)
    cd_ordem_hr_proc = models.IntegerField(blank=True, null=True)
    cd_ordem_hv = models.IntegerField(blank=True, null=True)
    cd_usuario_recebeu = models.CharField(max_length=10, blank=True, null=True)
    fl_caixa = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem_dieta = models.IntegerField(blank=True, null=True)
    fl_prescrito = models.CharField(max_length=1, blank=True, null=True)
    cd_material = models.FloatField(blank=True, null=True)
    cd_transferencia = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mov_codbarra_posto'
        unique_together = (('cd_codigo_barra', 'cd_ocorrencia'),)


class TbMovDoc(models.Model):
    cd_mov_doc = models.FloatField(primary_key=True)
    cd_atendimento_mov_doc = models.ForeignKey(TbAtendimentoMovDoc, models.DO_NOTHING, db_column='cd_atendimento_mov_doc')
    cd_tipo_doc_movimentacao = models.FloatField()
    dt_movimentacao = models.DateField()
    nm_operador = models.CharField(max_length=10)
    ds_observacao = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mov_doc'


class TbMovimentacaoAntiga(models.Model):
    cd_prontuario = models.CharField(primary_key=True, max_length=8)
    cd_seq_atend = models.IntegerField()
    nm_paciente = models.CharField(max_length=50)
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio', blank=True, null=True)
    dt_admissao = models.DateField(blank=True, null=True)
    dt_alta = models.DateField(blank=True, null=True)
    vl_conta = models.DecimalField(max_digits=16, decimal_places=2, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    lote = models.IntegerField(blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_movimentacao_antiga'
        unique_together = (('cd_prontuario', 'cd_seq_atend'),)


class TbMovimentacaoCaixa(models.Model):
    cd_conta_caixa = models.FloatField()
    dt_mov_caixa = models.DateField()
    cd_atendimento = models.FloatField(blank=True, null=True)
    cd_movimentacao_caixa = models.FloatField(primary_key=True)
    fl_status = models.FloatField()
    nu_cpf_cgc = models.CharField(max_length=20)
    dt_abertura_mov = models.DateField()
    dt_fechamento_mov = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_movimentacao_caixa'
        unique_together = (('cd_movimentacao_caixa', 'cd_conta_caixa'),)


class TbMovimentacaoCaixaEvento(models.Model):
    cd_movimentacao_caixa_evento = models.FloatField(primary_key=True)
    cd_movimentacao_caixa = models.ForeignKey(TbMovimentacaoCaixa, models.DO_NOTHING, db_column='cd_movimentacao_caixa')
    cd_grupo_mov_caixa = models.ForeignKey(TbDescricaoMovCaixa, models.DO_NOTHING, db_column='cd_grupo_mov_caixa')
    ds_complemento = models.CharField(max_length=400, blank=True, null=True)
    vl_mov_caixa = models.FloatField(blank=True, null=True)
    fl_tipo_unidade = models.FloatField()
    dt_insercao = models.DateField()
    cd_descricao_mov_caixa = models.ForeignKey(TbDescricaoMovCaixa, models.DO_NOTHING, db_column='cd_descricao_mov_caixa')
    cd_conta_caixa = models.ForeignKey(TbMovimentacaoCaixa, models.DO_NOTHING, db_column='cd_conta_caixa')
    nm_operador = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_movimentacao_caixa_evento'
        unique_together = (('cd_movimentacao_caixa_evento', 'cd_movimentacao_caixa', 'cd_conta_caixa'),)


class TbMovimentacaoMatMed(models.Model):
    cd_material = models.IntegerField(blank=True, null=True)
    dt_comanda = models.DateField(blank=True, null=True)
    qt_material = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_total = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    fl_tipo = models.IntegerField(blank=True, null=True)
    nu_comanda = models.CharField(max_length=8, blank=True, null=True)
    cd_cobranca = models.CharField(max_length=15, blank=True, null=True)
    cd_nota = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_movimentacao_mat_med'


class TbMovimentoCheque(models.Model):
    cd_cheque_recebido = models.ForeignKey(TbChequeRecebido, models.DO_NOTHING, db_column='cd_cheque_recebido')
    cd_movimento_conta = models.ForeignKey('TmMovimentoConta', models.DO_NOTHING, db_column='cd_movimento_conta', primary_key=True)
    cd_conta_bancaria = models.ForeignKey('TmContaCorrente', models.DO_NOTHING, db_column='cd_conta_bancaria')
    cd_tipo_movimento_cheque = models.ForeignKey('TbTipoMovimentoCheque', models.DO_NOTHING, db_column='cd_tipo_movimento_cheque')
    dt_movimento_cheque = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_movimento_cheque'
        unique_together = (('cd_movimento_conta', 'cd_cheque_recebido'),)


class TbMovimentoObrigacao(models.Model):
    cd_movimento_conta = models.ForeignKey('TmMovimentoConta', models.DO_NOTHING, db_column='cd_movimento_conta', primary_key=True)
    cd_obrigacao = models.ForeignKey('TmObrigacao', models.DO_NOTHING, db_column='cd_obrigacao')
    cd_comando = models.ForeignKey(TbComandoObrigacao, models.DO_NOTHING, db_column='cd_comando')
    dt_liquidacao = models.DateField()
    vl_titulo = models.FloatField()
    dt_liberacao = models.DateField()
    fl_transacao = models.CharField(max_length=1, blank=True, null=True)
    vl_tarifa = models.FloatField(blank=True, null=True)
    vl_outras_despesa = models.FloatField(blank=True, null=True)
    vl_abatimento = models.FloatField(blank=True, null=True)
    vl_desconto_concedido = models.FloatField(blank=True, null=True)
    vl_recebido = models.FloatField(blank=True, null=True)
    vl_juros_mora = models.FloatField(blank=True, null=True)
    vl_outros_recebimentos = models.FloatField(blank=True, null=True)
    vl_abatimento_nao_aprov = models.FloatField(blank=True, null=True)
    fl_valor = models.NullBooleanField()
    vl_ajuste = models.FloatField(blank=True, null=True)
    vl_lancamento = models.FloatField(blank=True, null=True)
    vl_ir = models.FloatField(blank=True, null=True)
    vl_iss = models.FloatField(blank=True, null=True)
    vl_cofins = models.FloatField(blank=True, null=True)
    vl_pis = models.FloatField(blank=True, null=True)
    vl_csll = models.FloatField(blank=True, null=True)
    pc_desconto_concedido = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_movimento_obrigacao'
        unique_together = (('cd_movimento_conta', 'cd_obrigacao'),)


class TbMsgInterfaceamento(models.Model):
    ds_destinatario = models.CharField(primary_key=True, max_length=60)
    fl_tipo_msg_interface = models.CharField(max_length=1)
    ds_remetente = models.CharField(max_length=60)

    class Meta:
        managed = False
        db_table = 'tb_msg_interfaceamento'
        unique_together = (('ds_destinatario', 'fl_tipo_msg_interface'),)


class TbMudaComandaAtendimento(models.Model):
    cd_alteracao = models.FloatField(primary_key=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento')
    cd_ocorrencia = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='cd_ocorrencia', blank=True, null=True)
    cd_ordem = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='cd_ordem', blank=True, null=True)
    cd_ordem_cmd = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='cd_ordem_cmd', blank=True, null=True)
    cd_atendimento_novo = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento_novo', blank=True, null=True)
    cd_ocorrencia_novo = models.IntegerField(blank=True, null=True)
    cd_ordem_novo = models.IntegerField(blank=True, null=True)
    cd_ordem_cmd_novo = models.IntegerField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_alteracao = models.DateField(blank=True, null=True)
    nu_comanda = models.CharField(max_length=8)

    class Meta:
        managed = False
        db_table = 'tb_muda_comanda_atendimento'


class TbMvtoStatusLeito(models.Model):
    cd_posto = models.ForeignKey(TbLeitoAcomodacao, models.DO_NOTHING, db_column='cd_posto', primary_key=True)
    cd_acomodacao = models.ForeignKey(TbLeitoAcomodacao, models.DO_NOTHING, db_column='cd_acomodacao')
    nu_leito = models.ForeignKey(TbLeitoAcomodacao, models.DO_NOTHING, db_column='nu_leito')
    dt_inicio = models.DateField()
    cd_status_inicio = models.CharField(max_length=1, blank=True, null=True)
    dt_fim = models.DateField(blank=True, null=True)
    cd_status_fim = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_mvto_status_leito'
        unique_together = (('cd_posto', 'cd_acomodacao', 'nu_leito', 'dt_inicio'),)


class TbNacionalidade(models.Model):
    cd_nacionalidade = models.IntegerField(primary_key=True)
    nm_nacionalidade = models.CharField(max_length=45)
    cod_nac_ans = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_nacionalidade'


class TbNacionalidadeAns(models.Model):
    cd_nac = models.IntegerField(primary_key=True)
    ds_nac = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_nacionalidade_ans'


class TbNanda(models.Model):
    cd_grupo_nanda = models.ForeignKey(TbGrupoNanda, models.DO_NOTHING, db_column='cd_grupo_nanda', primary_key=True)
    cd_ordem = models.IntegerField()
    cd_ordem_pai = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_ordem_pai', blank=True, null=True)
    cd_nanda = models.CharField(unique=True, max_length=20)
    nm_nanda = models.CharField(max_length=240)
    fl_nanda = models.CharField(max_length=1, blank=True, null=True)
    fl_uso = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_nanda'
        unique_together = (('cd_grupo_nanda', 'cd_ordem'),)


class TbNaturezaConsulta(models.Model):
    cd_natureza_consulta = models.BooleanField(primary_key=True)
    nm_natureza_consulta = models.CharField(max_length=20)
    cd_tipo_internacao = models.ForeignKey('TbTipoInternacaoAns', models.DO_NOTHING, db_column='cd_tipo_internacao', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_natureza_consulta'


class TbNaturezaGlosa(models.Model):
    cd_natureza_glosa = models.CharField(primary_key=True, max_length=2)
    nr_natureza_glosa = models.CharField(max_length=60)

    class Meta:
        managed = False
        db_table = 'tb_natureza_glosa'


class TbNaturezaProcedimento(models.Model):
    cd_natureza_procedimento = models.FloatField(primary_key=True)
    ds_natureza_procedimento = models.CharField(max_length=45)
    fl_excluir_txmtcirurgica = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_natureza_procedimento'


class TbNaturezaTransacao(models.Model):
    cd_natureza_transacao = models.CharField(primary_key=True, max_length=1)
    nm_natureza_transacao = models.CharField(max_length=12)

    class Meta:
        managed = False
        db_table = 'tb_natureza_transacao'


class TbNegociacao(models.Model):
    cd_negociacao_obrigacao = models.ForeignKey('TbNegociacaoObrigacao', models.DO_NOTHING, db_column='cd_negociacao_obrigacao', primary_key=True)
    cd_obrigacao = models.ForeignKey('TmObrigacao', models.DO_NOTHING, db_column='cd_obrigacao')

    class Meta:
        managed = False
        db_table = 'tb_negociacao'
        unique_together = (('cd_negociacao_obrigacao', 'cd_obrigacao'),)


class TbNegociacaoObrigacao(models.Model):
    cd_negociacao_obrigacao = models.IntegerField(primary_key=True)
    dt_negociacao_obrigacao = models.DateField()
    ds_negociacao_obrigacao = models.CharField(max_length=50, blank=True, null=True)
    pc_juro_mes = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    pc_multa_atrazo = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_cedente_sacado = models.ForeignKey(TbCedenteSacado, models.DO_NOTHING, db_column='cd_cedente_sacado', blank=True, null=True)
    fl_tipo_juro = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_negociacao_obrigacao'


class TbNivelAvaliacao(models.Model):
    cd_avaliacao = models.ForeignKey(TbAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_nivel_avaliacao = models.IntegerField()
    nm_nivel_avaliacao = models.CharField(max_length=100)
    nu_ordem_apresentacao = models.IntegerField(blank=True, null=True)
    fl_totaliza_sub_totais_itens = models.CharField(max_length=1, blank=True, null=True)
    nm_documento = models.CharField(max_length=80, blank=True, null=True)
    cd_tipo_solicitacao = models.ForeignKey('TbTipoSolicServicos', models.DO_NOTHING, db_column='cd_tipo_solicitacao', blank=True, null=True)
    fl_ordem_alfabetica = models.CharField(max_length=1, blank=True, null=True)
    fl_expandir = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_grupo = models.CharField(max_length=2, blank=True, null=True)
    fl_exige_marcacao = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_nivel_avaliacao'
        unique_together = (('cd_avaliacao', 'cd_nivel_avaliacao'),)


class TbNivelAvaliacaoTela(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    cd_avaliacao_ini = models.IntegerField(blank=True, null=True)
    chave = models.CharField(max_length=200, blank=True, null=True)
    ordem = models.CharField(max_length=200, blank=True, null=True)
    cd_avaliacao = models.ForeignKey(TbAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', blank=True, null=True)
    cd_nivel_avaliacao = models.IntegerField(blank=True, null=True)
    nm_nivel_avaliacao = models.CharField(max_length=300, blank=True, null=True)
    nu_ordem_apresentacao = models.IntegerField(blank=True, null=True)
    fl_totaliza_sub_totais_itens = models.CharField(max_length=1, blank=True, null=True)
    nm_documento = models.CharField(max_length=80, blank=True, null=True)
    cd_tipo_solicitacao = models.ForeignKey('TbTipoSolicServicos', models.DO_NOTHING, db_column='cd_tipo_solicitacao', blank=True, null=True)
    fl_ordem_alfabetica = models.CharField(max_length=1, blank=True, null=True)
    fl_expandir = models.CharField(max_length=1, blank=True, null=True)
    fl_ultimo = models.CharField(max_length=1, blank=True, null=True)
    id_componente = models.CharField(max_length=2000, blank=True, null=True)
    cd_nivel_avaliacao_ini = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_nivel_avaliacao_tela'


class TbNivelAvaliacaoTelaTmp(models.Model):
    id = models.BigIntegerField()
    cd_avaliacao_ini = models.IntegerField(blank=True, null=True)
    chave = models.CharField(max_length=200, blank=True, null=True)
    ordem = models.CharField(max_length=200, blank=True, null=True)
    cd_avaliacao = models.IntegerField(blank=True, null=True)
    cd_nivel_avaliacao = models.IntegerField(blank=True, null=True)
    nm_nivel_avaliacao = models.CharField(max_length=300, blank=True, null=True)
    nu_ordem_apresentacao = models.IntegerField(blank=True, null=True)
    fl_totaliza_sub_totais_itens = models.CharField(max_length=1, blank=True, null=True)
    nm_documento = models.CharField(max_length=80, blank=True, null=True)
    cd_tipo_solicitacao = models.IntegerField(blank=True, null=True)
    fl_ordem_alfabetica = models.CharField(max_length=1, blank=True, null=True)
    fl_expandir = models.CharField(max_length=1, blank=True, null=True)
    fl_ultimo = models.CharField(max_length=1, blank=True, null=True)
    id_componente = models.CharField(max_length=2000, blank=True, null=True)
    cd_nivel_avaliacao_ini = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_nivel_avaliacao_tela_tmp'


class TbNivelClassificacaoRisco(models.Model):
    cd_nivel_classificacao_risco = models.IntegerField(primary_key=True)
    nm_nivel_classificacao_risco = models.CharField(max_length=60)
    cd_cor = models.ForeignKey(TbCorAtendimentoSa, models.DO_NOTHING, db_column='cd_cor')
    ds_detalhamento_risco = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_nivel_classificacao_risco'


class TbNivelOperacao(models.Model):
    cd_nivel_operacao = models.IntegerField(primary_key=True)
    nm_nivel_operacao = models.CharField(max_length=45)
    cd_tipo_operacao = models.ForeignKey('TbTipoOperacao', models.DO_NOTHING, db_column='cd_tipo_operacao')
    cd_classe_tipo_operacao = models.ForeignKey(TbClasseTipoOperacao, models.DO_NOTHING, db_column='cd_classe_tipo_operacao', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_nivel_operacao'
        unique_together = (('cd_tipo_operacao', 'cd_nivel_operacao'),)


class TbNivelOperacao(models.Model):
    cd_nivel_operacao = models.IntegerField(primary_key=True)
    nm_nivel_operacao = models.CharField(max_length=45)
    cd_tipo_operacao = models.ForeignKey('TbTipoOperacao', models.DO_NOTHING, db_column='cd_tipo_operacao')
    cd_classe_tipo_operacao = models.ForeignKey(TbClasseTipoOperacao, models.DO_NOTHING, db_column='cd_classe_tipo_operacao', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_nivel_operacao_'
        unique_together = (('cd_tipo_operacao', 'cd_nivel_operacao'),)


class TbNotaFiscal(models.Model):
    cd_filial = models.CharField(primary_key=True, max_length=3)
    cd_nota_fiscal = models.CharField(max_length=10)
    cd_pessoa = models.FloatField()
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio')
    fl_status = models.CharField(max_length=1)
    dt_emissao = models.DateField(blank=True, null=True)
    vl_total_nota = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    vl_liq_nota = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    dt_prestacao_servico = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_nota_fiscal'
        unique_together = (('cd_filial', 'cd_nota_fiscal', 'cd_pessoa'), ('cd_filial', 'cd_nota_fiscal', 'cd_convenio'),)


class TbNotaImposto(models.Model):
    cd_filial = models.ForeignKey(TbNotaFiscal, models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    cd_nota_fiscal = models.ForeignKey(TbNotaFiscal, models.DO_NOTHING, db_column='cd_nota_fiscal')
    cd_convenio = models.ForeignKey(TbNotaFiscal, models.DO_NOTHING, db_column='cd_convenio')
    cd_imposto = models.IntegerField()
    dt_vigencia = models.DateField()
    vl_base_calculo = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    pc_aliquota = models.DecimalField(max_digits=10, decimal_places=5, blank=True, null=True)
    tp_operacao = models.CharField(max_length=1, blank=True, null=True)
    vl_imposto = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_nota_imposto'
        unique_together = (('cd_filial', 'cd_nota_fiscal', 'cd_convenio', 'cd_imposto', 'dt_vigencia'),)


class TbNotifCcihEquipeCirurgia(models.Model):
    cd_notificacao = models.ForeignKey('TbNotificacaoCcihCirurgia', models.DO_NOTHING, db_column='cd_notificacao', primary_key=True)
    cd_ordem_cirurgia = models.ForeignKey('TbNotificacaoCcihCirurgia', models.DO_NOTHING, db_column='cd_ordem_cirurgia')
    cd_ordem_equipe = models.FloatField()
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional', blank=True, null=True)
    cd_ato_cirurgia = models.ForeignKey('TbTipoAtoProfissional', models.DO_NOTHING, db_column='cd_ato_cirurgia', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_notif_ccih_equipe_cirurgia'
        unique_together = (('cd_notificacao', 'cd_ordem_cirurgia', 'cd_ordem_equipe'),)


class TbNotifCcihMicrobPerfil(models.Model):
    cd_notificacao = models.ForeignKey('TbNotificacaoCcihMicrob', models.DO_NOTHING, db_column='cd_notificacao', primary_key=True)
    cd_ordem_microb = models.ForeignKey('TbNotificacaoCcihMicrob', models.DO_NOTHING, db_column='cd_ordem_microb')
    cd_ordem_perfil = models.FloatField()
    cd_material = models.FloatField(blank=True, null=True)
    cd_perfil_sensibilidade = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_notif_ccih_microb_perfil'
        unique_together = (('cd_notificacao', 'cd_ordem_microb', 'cd_ordem_perfil'),)


class TbNotifCritNniss(models.Model):
    cd_notif_crit = models.FloatField(primary_key=True)
    cd_atendimento = models.ForeignKey('TbNotifSitiosNniss', models.DO_NOTHING, db_column='cd_atendimento')
    cd_ocorrencia_plano = models.ForeignKey('TbNotifSitiosNniss', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_notif_sitio = models.ForeignKey('TbNotifSitiosNniss', models.DO_NOTHING, db_column='cd_notif_sitio')
    cd_criterio_inicial = models.ForeignKey(TbCriteriosIniciaisNniss, models.DO_NOTHING, db_column='cd_criterio_inicial')
    cd_condicao_sitio = models.ForeignKey(TbCondicoesSitiosNniss, models.DO_NOTHING, db_column='cd_condicao_sitio')
    cd_criterio_condicao = models.ForeignKey(TbCriteriosCondicoesNniss, models.DO_NOTHING, db_column='cd_criterio_condicao')
    cd_criterio = models.ForeignKey(TbCriteriosNniss, models.DO_NOTHING, db_column='cd_criterio')
    fl_checado = models.CharField(max_length=1)
    cd_operador = models.CharField(max_length=45)
    dt_transacao = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_notif_crit_nniss'


class TbNotifSitiosNniss(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.FloatField()
    cd_notif_sitio = models.FloatField()
    cd_notificacao = models.ForeignKey('TbNotificacaoCcih', models.DO_NOTHING, db_column='cd_notificacao')
    cd_sitio_p = models.ForeignKey('TbSitiosPrincipalEspecifico', models.DO_NOTHING, db_column='cd_sitio_p')
    cd_sitio_e = models.ForeignKey('TbSitiosPrincipalEspecifico', models.DO_NOTHING, db_column='cd_sitio_e')
    cd_operador = models.CharField(max_length=45)
    dt_transacao = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_notif_sitios_nniss'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_notif_sitio'),)


class TbNotificacaoCcih(models.Model):
    cd_notificacao = models.FloatField(primary_key=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento')
    cd_ocorrencia_plano = models.IntegerField()
    cd_solicitacao = models.ForeignKey(TbMedAntimicrobiano, models.DO_NOTHING, db_column='cd_solicitacao', blank=True, null=True)
    cd_posto = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_posto')
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', blank=True, null=True)
    cd_sitio_principal = models.ForeignKey('TbSitiosNniss', models.DO_NOTHING, db_column='cd_sitio_principal', blank=True, null=True)
    cd_sitio_especifico = models.ForeignKey('TbSitiosNniss', models.DO_NOTHING, db_column='cd_sitio_especifico', blank=True, null=True)
    dt_infeccao = models.DateField()
    dt_inicio_procedimento_uso = models.DateField(blank=True, null=True)
    tp_infeccao = models.CharField(max_length=1)
    fl_sitio_especifico_ni = models.CharField(max_length=1, blank=True, null=True)
    fl_septicemia_secundaria = models.CharField(max_length=1, blank=True, null=True)
    fl_origem_materna = models.CharField(max_length=1, blank=True, null=True)
    ds_resumo_ocorrencia = models.CharField(max_length=1000, blank=True, null=True)
    cd_invasivo = models.FloatField(blank=True, null=True)
    cd_avaliacao = models.IntegerField(blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    fl_status = models.NullBooleanField()
    cd_prenotificacao = models.ForeignKey('TbPrenotificacaoCcih', models.DO_NOTHING, db_column='cd_prenotificacao', blank=True, null=True)
    cd_notificacao_associada = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_notificacao_associada', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_notificacao_ccih'


class TbNotificacaoCcihCirurgia(models.Model):
    cd_notificacao = models.FloatField(primary_key=True)
    cd_ordem_cirurgia = models.FloatField()
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', blank=True, null=True)
    cd_procedimento2 = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento2', blank=True, null=True)
    cd_procedimento3 = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento3', blank=True, null=True)
    cd_procedimento4 = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento4', blank=True, null=True)
    cd_asa = models.ForeignKey(TbAsa, models.DO_NOTHING, db_column='cd_asa', blank=True, null=True)
    cd_grau_contaminacao = models.ForeignKey(TbGrauContaminacao, models.DO_NOTHING, db_column='cd_grau_contaminacao', blank=True, null=True)
    dt_cirurgia = models.DateField(blank=True, null=True)
    hr_inicio = models.IntegerField(blank=True, null=True)
    hr_fim = models.IntegerField(blank=True, null=True)
    id_registro = models.IntegerField(blank=True, null=True)
    tp_tecnica_cirurgia = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_notificacao_ccih_cirurgia'
        unique_together = (('cd_notificacao', 'cd_ordem_cirurgia'),)


class TbNotificacaoCcihMicrob(models.Model):
    cd_notificacao = models.ForeignKey(TbNotificacaoCcih, models.DO_NOTHING, db_column='cd_notificacao', primary_key=True)
    cd_ordem_microb = models.FloatField()
    dt_coleta = models.DateField()
    cd_especime = models.FloatField()
    cd_microrganismo = models.ForeignKey(TbMicroorganismo, models.DO_NOTHING, db_column='cd_microrganismo')
    fl_perfil_realizado = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_notificacao_ccih_microb'
        unique_together = (('cd_notificacao', 'cd_ordem_microb'),)


class TbNumeroExtenso(models.Model):
    qt_numero = models.FloatField(primary_key=True)
    nm_numero = models.CharField(max_length=50)

    class Meta:
        managed = False
        db_table = 'tb_numero_extenso'


class TbObrigacaoHospHapv(models.Model):
    cd_obrigacao_hosp = models.IntegerField(blank=True, null=True)
    cd_obrigacao_hapv = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_obrigacao_hosp_hapv'


class TbObrigacaoOpHh(models.Model):
    cd_obrigacao_hosp = models.IntegerField(blank=True, null=True)
    cd_operacao_hosp = models.IntegerField(blank=True, null=True)
    cd_operacao_hapv = models.FloatField(blank=True, null=True)
    cd_setor_hapv = models.CharField(max_length=6, blank=True, null=True)
    cd_setor_hosp = models.CharField(max_length=6, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_obrigacao_op_hh'


class TbObservacaoInteracao(models.Model):
    cd_obs_interacao = models.FloatField(primary_key=True)
    cd_reg_men = models.ForeignKey('TbRegistroMensagem', models.DO_NOTHING, db_column='cd_reg_men', blank=True, null=True)
    cd_atendimento = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ocorrencia_plano', blank=True, null=True)
    cd_ordem_prescricao = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ordem_prescricao', blank=True, null=True)
    nu_produto1 = models.IntegerField(blank=True, null=True)
    cd_principio_ativo1 = models.IntegerField(blank=True, null=True)
    nu_produto2 = models.IntegerField(blank=True, null=True)
    cd_principio_ativo2 = models.IntegerField(blank=True, null=True)
    ds_observacao_interacao = models.CharField(max_length=1000, blank=True, null=True)
    dt_registro_interacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_observacao_interacao'


class TbObservacaoPrescricao(models.Model):
    cd_atendimento = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_observacao = models.IntegerField()
    ds_observacao = models.TextField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    dt_ocorrencia = models.DateField(blank=True, null=True)
    hr_ocorrencia = models.FloatField(blank=True, null=True)
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)
    dt_cancelamento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_observacao_prescricao'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_observacao'),)


class TbOcorPadrao(models.Model):
    cd_ocor_padrao = models.IntegerField(primary_key=True)
    ds_ocor_padrao = models.CharField(max_length=50, blank=True, null=True)
    tp_ocorrencia = models.ForeignKey('TbTipoOcorrencia', models.DO_NOTHING, db_column='tp_ocorrencia')

    class Meta:
        managed = False
        db_table = 'tb_ocor_padrao'


class TbOcorrencia(models.Model):
    nr_ocorrencia = models.IntegerField(primary_key=True)
    tp_ocorrencia = models.ForeignKey('TbTipoOcorrencia', models.DO_NOTHING, db_column='tp_ocorrencia')
    dt_ocorrencia = models.DateField()
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    cd_setor_ref = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_ref', blank=True, null=True)
    nm_responsavel = models.CharField(max_length=30, blank=True, null=True)
    cd_situacao = models.ForeignKey('TbSituacao', models.DO_NOTHING, db_column='cd_situacao')
    dt_situacao = models.DateField()
    cd_ocor_padrao = models.ForeignKey(TbOcorPadrao, models.DO_NOTHING, db_column='cd_ocor_padrao')
    complemento = models.CharField(max_length=500, blank=True, null=True)
    acompanhante = models.CharField(max_length=40, blank=True, null=True)
    nm_operador = models.CharField(max_length=30)
    cd_empresa = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_empresa')
    tp_meio_ocorrencia = models.ForeignKey(TbMeioOcorrencia, models.DO_NOTHING, db_column='tp_meio_ocorrencia')
    resp_setor_ref = models.CharField(max_length=500, blank=True, null=True)
    conclusao = models.CharField(max_length=500, blank=True, null=True)
    providencia = models.CharField(max_length=500, blank=True, null=True)
    cd_acomodacao = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_acomodacao', blank=True, null=True)
    dt_follow = models.DateField(blank=True, null=True)
    follow_up = models.CharField(max_length=500, blank=True, null=True)
    nm_paciente = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ocorrencia'


class TbOcorrenciaAdministrativa(models.Model):
    cd_sistema = models.ForeignKey(TbAdministracao, models.DO_NOTHING, db_column='cd_sistema', primary_key=True)
    cd_ocorrencia = models.FloatField()
    dt_ocorrencia = models.DateField()
    cd_tipo_ocorr_administrativa = models.ForeignKey('TbTipoOcorrAdministrativa', models.DO_NOTHING, db_column='cd_tipo_ocorr_administrativa')
    ds_ocorrencia = models.CharField(max_length=2000)
    fl_status = models.CharField(max_length=1)
    dt_solucao_final = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ocorrencia_administrativa'
        unique_together = (('cd_sistema', 'cd_ocorrencia'),)


class TbOcorrenciaMonitorHosp(models.Model):
    cd_evento_monitor_hosp = models.ForeignKey(TbEventoMonitorHosp, models.DO_NOTHING, db_column='cd_evento_monitor_hosp', primary_key=True)
    cd_ocorrencia_monitor_hosp = models.FloatField()
    cd_local_ocorrencia = models.ForeignKey(TbLocalAtendimentoSa, models.DO_NOTHING, db_column='cd_local_ocorrencia', blank=True, null=True)
    nm_local_ocorrencia = models.CharField(max_length=45, blank=True, null=True)
    qt_quantidade = models.FloatField()
    dt_ini_ocorrencia = models.DateField(blank=True, null=True)
    dt_fim_ocorrencia = models.DateField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)
    dt_atualizacao = models.DateField()
    nm_operador = models.CharField(max_length=10)
    id_evento_hosp = models.BigIntegerField(blank=True, null=True)
    cd_solicitacao = models.BigIntegerField(blank=True, null=True)
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    nm_setor = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ocorrencia_monitor_hosp'
        unique_together = (('cd_evento_monitor_hosp', 'cd_ocorrencia_monitor_hosp'),)


class TbOcorrenciaObstetrica(models.Model):
    cd_paciente = models.IntegerField(primary_key=True)
    cd_tipo_obstetricia = models.ForeignKey('TbTipoObstetricia', models.DO_NOTHING, db_column='cd_tipo_obstetricia', blank=True, null=True)
    dt_ocorrencia = models.DateField()
    cd_tipo_operatorio = models.ForeignKey('TbTipoOperatorio', models.DO_NOTHING, db_column='cd_tipo_operatorio', blank=True, null=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', blank=True, null=True)
    hr_inicial = models.IntegerField(blank=True, null=True)
    hr_final = models.IntegerField(blank=True, null=True)
    fl_perineo = models.CharField(max_length=1, blank=True, null=True)
    nu_grau_roto = models.NullBooleanField()
    nu_meses_gestacao = models.IntegerField(blank=True, null=True)
    nu_epsiotomia = models.IntegerField(blank=True, null=True)
    fl_dequitacao = models.CharField(max_length=1, blank=True, null=True)
    ds_indicacao_oper = models.CharField(max_length=2000, blank=True, null=True)
    ds_cirurgia_inter = models.CharField(max_length=2000, blank=True, null=True)
    ds_conclusao_obst = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ocorrencia_obstetrica'
        unique_together = (('cd_paciente', 'dt_ocorrencia'),)


class TbOcorrenciaProcGlosa(models.Model):
    nu_processo = models.FloatField()
    nu_remessa = models.FloatField(blank=True, null=True)
    nu_item_remessa = models.ForeignKey(TbItemArquivo, models.DO_NOTHING, db_column='nu_item_remessa')
    dt_pagamento = models.DateField(blank=True, null=True)
    nu_guia = models.CharField(max_length=16, blank=True, null=True)
    cd_senha = models.CharField(max_length=20, blank=True, null=True)
    nu_seq_item_guia = models.FloatField(blank=True, null=True)
    dt_servico = models.DateField(blank=True, null=True)
    cd_beneficiario = models.CharField(max_length=20, blank=True, null=True)
    nm_beneficiario = models.CharField(max_length=70, blank=True, null=True)
    cd_servico = models.CharField(max_length=20, blank=True, null=True)
    nm_servico = models.CharField(max_length=70, blank=True, null=True)
    vl_glosado = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    cd_glosa = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_processamento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ocorrencia_proc_glosa'


class TbOcupacaoAcomodacao(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.IntegerField()
    fl_ocupacao = models.CharField(max_length=1)
    cd_acomodacao = models.ForeignKey(TbLeitoAcomodacao, models.DO_NOTHING, db_column='cd_acomodacao')
    cd_posto = models.ForeignKey(TbLeitoAcomodacao, models.DO_NOTHING, db_column='cd_posto')
    cd_classe_acomodacao = models.IntegerField()
    nu_leito = models.ForeignKey(TbLeitoAcomodacao, models.DO_NOTHING, db_column='nu_leito')
    dt_ocupacao = models.DateField()
    hr_ocupacao = models.IntegerField()
    dt_prevista_liberacao = models.DateField()
    hr_prevista_liberacao = models.IntegerField()
    dt_liberacao = models.DateField(blank=True, null=True)
    hr_liberacao = models.IntegerField(blank=True, null=True)
    ds_observacoes_medicas = models.CharField(max_length=240, blank=True, null=True)
    fl_atendimento_ocupa = models.CharField(max_length=1, blank=True, null=True)
    fl_diferenca_acomodacao = models.CharField(max_length=1, blank=True, null=True)
    cd_motivo_diferenca_acomod = models.CharField(max_length=1, blank=True, null=True)
    cd_usuario_digitador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cd_usuario_digitador', blank=True, null=True)
    fl_procedimento = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ocupacao_acomodacao'
        unique_together = (('cd_atendimento', 'cd_ocorrencia'),)


class TbOpcoesMenu(models.Model):
    cod_op = models.CharField(primary_key=True, max_length=20)
    descricao = models.CharField(max_length=60)
    tipo = models.CharField(max_length=2)
    ajuda = models.CharField(max_length=300, blank=True, null=True)
    nm_prog = models.CharField(max_length=40, blank=True, null=True)
    cod_op_rel = models.CharField(max_length=20, blank=True, null=True)
    cd_tela = models.CharField(max_length=10, blank=True, null=True)
    cd_tela_alias = models.CharField(max_length=10, blank=True, null=True)
    cd_logotipo = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_opcoes_menu'


class TbOperacao(models.Model):
    cd_operacao = models.FloatField(primary_key=True)
    nm_operacao = models.CharField(max_length=45)
    cd_tipo_operacao = models.ForeignKey('TbTipoOperacao', models.DO_NOTHING, db_column='cd_tipo_operacao')
    ds_historico = models.CharField(max_length=60, blank=True, null=True)
    cd_nivel_operacao = models.ForeignKey(TbNivelOperacao, models.DO_NOTHING, db_column='cd_nivel_operacao', blank=True, null=True)
    cd_conta_contabil = models.CharField(max_length=15, blank=True, null=True)
    cod_tipo_produto_servico = models.CharField(max_length=5, blank=True, null=True)
    cd_operacao_hapv = models.FloatField(blank=True, null=True)
    cd_operacao_pai = models.IntegerField(blank=True, null=True)
    vl_limite_operacao = models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_operacao'
        unique_together = (('cd_tipo_operacao', 'cd_operacao'),)


class TbOperacao(models.Model):
    cd_operacao = models.FloatField(primary_key=True)
    nm_operacao = models.CharField(max_length=45)
    cd_tipo_operacao = models.ForeignKey('TbTipoOperacao', models.DO_NOTHING, db_column='cd_tipo_operacao')
    ds_historico = models.CharField(max_length=60, blank=True, null=True)
    cd_nivel_operacao = models.CharField(max_length=6, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_operacao_'
        unique_together = (('cd_tipo_operacao', 'cd_operacao'),)


class TbOperacaoCarnet(models.Model):
    cd_carnet = models.ForeignKey('TmCarnet', models.DO_NOTHING, db_column='cd_carnet', primary_key=True)
    cd_operacao = models.ForeignKey(TbOperacao, models.DO_NOTHING, db_column='cd_operacao')
    vl_rateio = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_operacao_carnet'
        unique_together = (('cd_carnet', 'cd_operacao'),)


class TbOperacaoClassificacao(models.Model):
    cd_operacao_classificacao = models.IntegerField(primary_key=True)
    cd_operacao = models.FloatField()
    cd_tipo_classificacao = models.IntegerField(blank=True, null=True)
    fl_tipo_classificacao = models.NullBooleanField()
    fl_permite = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_operacao_classificacao'


class TbOperacaoFluxo(models.Model):
    cd_operador = models.FloatField(blank=True, null=True)
    cd_operacao = models.FloatField(blank=True, null=True)
    cd_operacao_char = models.CharField(max_length=6, blank=True, null=True)
    nm_operacao = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_operacao_fluxo'


class TbOperacaoNota(models.Model):
    cd_nota = models.ForeignKey('TmNota', models.DO_NOTHING, db_column='cd_nota', primary_key=True)
    cd_operacao = models.ForeignKey(TbOperacao, models.DO_NOTHING, db_column='cd_operacao')
    vl_rateio = models.FloatField()
    cd_filial = models.CharField(max_length=3)

    class Meta:
        managed = False
        db_table = 'tb_operacao_nota'
        unique_together = (('cd_nota', 'cd_operacao', 'cd_filial'),)


class TbOperacaoObrigacao(models.Model):
    cd_obrigacao = models.ForeignKey('TmObrigacao', models.DO_NOTHING, db_column='cd_obrigacao', primary_key=True)
    cd_operacao = models.ForeignKey(TbOperacao, models.DO_NOTHING, db_column='cd_operacao')
    vl_rateio = models.FloatField()
    cd_filial = models.CharField(max_length=3)
    vl_obrigacao = models.FloatField(blank=True, null=True)
    vl_saldo_obrigacao = models.FloatField(blank=True, null=True)
    dt_prevista_liquidacao = models.DateField(blank=True, null=True)
    cd_tipo_obrigacao = models.FloatField(blank=True, null=True)
    cd_um = models.FloatField(blank=True, null=True)
    dt_emissao = models.DateField(blank=True, null=True)
    cd_status = models.FloatField(blank=True, null=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor')

    class Meta:
        managed = False
        db_table = 'tb_operacao_obrigacao'
        unique_together = (('cd_obrigacao', 'cd_operacao', 'cd_filial', 'cd_setor'),)


class TbOperacaoObrigacao(models.Model):
    cd_obrigacao = models.FloatField(blank=True, null=True)
    cd_operacao = models.FloatField(blank=True, null=True)
    vl_rateio = models.FloatField()
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    vl_obrigacao = models.FloatField(blank=True, null=True)
    vl_saldo_obrigacao = models.FloatField(blank=True, null=True)
    dt_prevista_liquidacao = models.DateField(blank=True, null=True)
    cd_tipo_obrigacao = models.FloatField(blank=True, null=True)
    cd_um = models.FloatField(blank=True, null=True)
    dt_emissao = models.DateField(blank=True, null=True)
    cd_status = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_operacao_obrigacao_'


class TbOperacaoOrcamento(models.Model):
    cd_operacao = models.ForeignKey('TbOrcamentoPrevistoOperacao', models.DO_NOTHING, db_column='cd_operacao', primary_key=True)
    cd_periodo = models.IntegerField()
    vl_limite_periodo = models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)
    cd_filial = models.ForeignKey('TbOrcamentoPrevistoOperacao', models.DO_NOTHING, db_column='cd_filial')

    class Meta:
        managed = False
        db_table = 'tb_operacao_orcamento'
        unique_together = (('cd_operacao', 'cd_periodo', 'cd_filial'),)


class TbOperacaoPedido(models.Model):
    cd_pedido = models.ForeignKey('TmPedidoFornecedor', models.DO_NOTHING, db_column='cd_pedido', primary_key=True)
    cd_operacao = models.ForeignKey(TbOperacao, models.DO_NOTHING, db_column='cd_operacao')
    vl_rateio = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_operacao_pedido'
        unique_together = (('cd_pedido', 'cd_operacao'),)


class TbOperacaoTransacao(models.Model):
    cd_movimento_conta = models.ForeignKey('TmMovimentoTransacao', models.DO_NOTHING, db_column='cd_movimento_conta', primary_key=True)
    cd_ordem_transacao = models.ForeignKey('TmMovimentoTransacao', models.DO_NOTHING, db_column='cd_ordem_transacao')
    cd_operacao = models.ForeignKey(TbOperacao, models.DO_NOTHING, db_column='cd_operacao')
    vl_rateio = models.FloatField()
    cd_filial = models.CharField(max_length=3)
    fl_lancamento = models.CharField(max_length=1, blank=True, null=True)
    cd_um_transacao = models.FloatField(blank=True, null=True)
    vl_transacao = models.FloatField(blank=True, null=True)
    dt_lancamento = models.DateField(blank=True, null=True)
    dt_estorno = models.DateField(blank=True, null=True)
    dt_documento = models.DateField(blank=True, null=True)
    fl_movimento_conta = models.NullBooleanField()
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor')

    class Meta:
        managed = False
        db_table = 'tb_operacao_transacao'
        unique_together = (('cd_movimento_conta', 'cd_ordem_transacao', 'cd_operacao', 'cd_filial', 'cd_setor'),)


class TbOperacaoTransacao(models.Model):
    cd_movimento_conta = models.FloatField(blank=True, null=True)
    cd_ordem_transacao = models.FloatField(blank=True, null=True)
    cd_operacao = models.FloatField(blank=True, null=True)
    vl_rateio = models.FloatField()
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    fl_lancamento = models.CharField(max_length=1, blank=True, null=True)
    cd_um_transacao = models.FloatField(blank=True, null=True)
    vl_transacao = models.FloatField(blank=True, null=True)
    dt_lancamento = models.DateField(blank=True, null=True)
    dt_estorno = models.DateField(blank=True, null=True)
    dt_documento = models.DateField(blank=True, null=True)
    fl_movimento_conta = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_operacao_transacao_'
# Unable to inspect table 'tb_operador'
# The error was: 'orders'


class TbOperadorAltHoraLab(models.Model):
    cd_operador = models.CharField(primary_key=True, max_length=20)
    tipo = models.CharField(max_length=1, blank=True, null=True)
    dt_cadastro = models.DateField(blank=True, null=True)
    operador_cadastro = models.CharField(max_length=20, blank=True, null=True)
    fl_atera = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_operador_alt_hora_lab'


class TbOperadorAltSame(models.Model):
    cd_operador = models.CharField(primary_key=True, max_length=20)
    tipo = models.CharField(max_length=1, blank=True, null=True)
    dt_cadastro = models.DateField(blank=True, null=True)
    operador_cadastro = models.CharField(max_length=20, blank=True, null=True)
    fl_atera = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_operador_alt_same'


class TbOperadorAnomalia(models.Model):
    cd_atendimento = models.FloatField(primary_key=True)
    cd_correncia = models.FloatField()
    cd_ordem = models.FloatField()
    cd_procedimento = models.FloatField()
    nu_pedido = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=100)
    dt_visualizacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_operador_anomalia'
        unique_together = (('cd_atendimento', 'cd_correncia', 'cd_ordem', 'cd_procedimento', 'cd_operador'),)


class TbOperadorAtividade(models.Model):
    nm_operador = models.CharField(primary_key=True, max_length=10)
    cd_atividade = models.IntegerField()
    cd_atividade_pai = models.IntegerField(blank=True, null=True)
    fl_query = models.CharField(max_length=1, blank=True, null=True)
    fl_insert = models.CharField(max_length=1, blank=True, null=True)
    fl_update = models.CharField(max_length=1, blank=True, null=True)
    fl_delete = models.CharField(max_length=1, blank=True, null=True)
    fl_status = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_operador_atividade'
        unique_together = (('nm_operador', 'cd_atividade'),)


class TbOperadorDevolucao(models.Model):
    cd_operador_devolucao = models.FloatField(primary_key=True)
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador')
    cd_tipo_devolucao = models.ForeignKey('TbTipoDevolucao', models.DO_NOTHING, db_column='cd_tipo_devolucao')

    class Meta:
        managed = False
        db_table = 'tb_operador_devolucao'
        unique_together = (('nm_operador', 'cd_tipo_devolucao'),)


class TbOperadorEscalaHotelaria(models.Model):
    cd_escala_hotelaria = models.ForeignKey(TbEscalaHotelaria, models.DO_NOTHING, db_column='cd_escala_hotelaria', primary_key=True)
    nm_operador = models.CharField(max_length=30)
    nu_matricula = models.FloatField()
    hr_inicio_intervalo = models.CharField(max_length=5, blank=True, null=True)
    hr_fim_intervalo = models.CharField(max_length=5, blank=True, null=True)
    fl_afastado = models.CharField(max_length=1, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_inclusao = models.DateField(blank=True, null=True)
    dt_ult_alteracao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_operador_escala_hotelaria'
        unique_together = (('cd_escala_hotelaria', 'nm_operador'),)


class TbOperadorGrupoEvento(models.Model):
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador', primary_key=True)
    cd_grupo_monitor_hosp = models.ForeignKey(TbGrupoMonitorHosp, models.DO_NOTHING, db_column='cd_grupo_monitor_hosp')

    class Meta:
        managed = False
        db_table = 'tb_operador_grupo_evento'
        unique_together = (('nm_operador', 'cd_grupo_monitor_hosp'),)


class TbOperadorLocalAtendSa(models.Model):
    cd_operador = models.CharField(primary_key=True, max_length=20)
    cd_local_atendimento = models.ForeignKey(TbLocalAtendimentoSa, models.DO_NOTHING, db_column='cd_local_atendimento')
    cd_status = models.BooleanField()
    fl_tipo = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_operador_local_atend_sa'
        unique_together = (('cd_operador', 'cd_local_atendimento'),)


class TbOperadorParametros(models.Model):
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador', primary_key=True)
    fl_ativa_leitos = models.CharField(max_length=1, blank=True, null=True)
    dt_alt_fl_ativa_leitos = models.DateField(blank=True, null=True)
    cd_operador_ativa_leitos = models.CharField(max_length=10, blank=True, null=True)
    fl_hab_questionario_satisf_mob = models.CharField(max_length=1, blank=True, null=True)
    fl_hab_boletim_uti_mob = models.CharField(max_length=1, blank=True, null=True)
    dt_atu_cad = models.DateField(blank=True, null=True)
    dias_prox_atu = models.FloatField(blank=True, null=True)
    fl_check_ip_liberacao = models.CharField(max_length=1, blank=True, null=True)
    fl_valida_cadastro_rapido_cc = models.CharField(max_length=1, blank=True, null=True)
    fl_hab_visita_acolhimento_eme = models.CharField(max_length=1, blank=True, null=True)
    fl_lib_digital_alta = models.CharField(max_length=1, blank=True, null=True)
    dt_validacao_certificado = models.DateField(blank=True, null=True)
    fl_cria_carro_parada = models.CharField(max_length=1, blank=True, null=True)
    fl_abre_carro_parada = models.CharField(max_length=1, blank=True, null=True)
    fl_mailing_compras = models.CharField(max_length=1, blank=True, null=True)
    fl_gerencia_mailing = models.CharField(max_length=1, blank=True, null=True)
    dt_atu_forc = models.DateField(blank=True, null=True)
    fl_hab_ficha_anestesis_mob = models.CharField(max_length=1, blank=True, null=True)
    dt_descaptura = models.DateField(blank=True, null=True)
    nu_dias_bloqueio = models.IntegerField(blank=True, null=True)
    dt_captura = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_operador_parametros'


class TbOperadorTipoSolic(models.Model):
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador', primary_key=True)
    cd_tipo_solicitacao = models.ForeignKey('TbTipoSolicServicos', models.DO_NOTHING, db_column='cd_tipo_solicitacao')

    class Meta:
        managed = False
        db_table = 'tb_operador_tipo_solic'
        unique_together = (('nm_operador', 'cd_tipo_solicitacao'),)


class TbOperadoresGrupoSolic(models.Model):
    cd_grupo = models.ForeignKey(TbGrupoOperadorSolicitacao, models.DO_NOTHING, db_column='cd_grupo', primary_key=True)
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador')
    email_operador = models.CharField(max_length=100, blank=True, null=True)
    nu_telefone_fixo = models.CharField(max_length=30, blank=True, null=True)
    nu_telefone_movel = models.CharField(max_length=30, blank=True, null=True)
    fl_reenvio_email = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_operadores_grupo_solic'
        unique_together = (('cd_grupo', 'nm_operador'),)


class TbOpmResumoIntAns(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans')
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_seq_registro = models.FloatField(blank=True, null=True)
    nu_registro_ans = models.CharField(max_length=6)
    nu_guia = models.CharField(max_length=20, blank=True, null=True)
    cd_tabela_usada = models.CharField(max_length=2, blank=True, null=True)
    cd_codigo_opm = models.CharField(max_length=10, blank=True, null=True)
    ds_descricao_opm = models.CharField(max_length=60, blank=True, null=True)
    qt_opm_utilizada = models.IntegerField(blank=True, null=True)
    cd_cod_de_barras = models.CharField(max_length=20, blank=True, null=True)
    vl_unitario_opm = models.FloatField(blank=True, null=True)
    vl_total_opm = models.FloatField(blank=True, null=True)
    vl_geral_opm = models.FloatField(blank=True, null=True)
    cd_tipo_faturamento = models.CharField(max_length=1)
    vl_total_procedimento = models.FloatField(blank=True, null=True)
    vl_total_diarias = models.FloatField(blank=True, null=True)
    vl_total_taxas = models.FloatField(blank=True, null=True)
    vl_total_materiais = models.FloatField(blank=True, null=True)
    vl_total_medicamento = models.FloatField(blank=True, null=True)
    vl_total_gases = models.FloatField(blank=True, null=True)
    vl_total_geral = models.FloatField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=24, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_opm_resumo_int_ans'


class TbOpmeKit(models.Model):
    id_kit = models.FloatField(primary_key=True)
    cd_material = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_material')
    qt_material = models.FloatField(blank=True, null=True)
    cd_operador = models.CharField(max_length=12, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_opme_kit'
        unique_together = (('id_kit', 'cd_material'),)


class TbOpmeSolicitadaAns(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans')
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_seq_registro = models.FloatField(blank=True, null=True)
    nu_registro_ans = models.CharField(max_length=6)
    nu_guia_prestador = models.CharField(max_length=20, blank=True, null=True)
    cd_tabela_usada = models.CharField(max_length=2, blank=True, null=True)
    cd_codigo_opm = models.CharField(max_length=10, blank=True, null=True)
    ds_descricao_opm = models.CharField(max_length=60, blank=True, null=True)
    qt_opm_solicitada = models.IntegerField(blank=True, null=True)
    cd_cod_de_barras = models.CharField(max_length=20, blank=True, null=True)
    vl_unitario_opm = models.FloatField(blank=True, null=True)
    vl_total_opm = models.FloatField(blank=True, null=True)
    vl_geral_opm = models.FloatField(blank=True, null=True)
    cd_tipo_faturamento = models.CharField(max_length=1)
    vl_total_procedimento = models.FloatField(blank=True, null=True)
    vl_total_diarias = models.FloatField(blank=True, null=True)
    vl_total_taxas = models.FloatField(blank=True, null=True)
    vl_total_materiais = models.FloatField(blank=True, null=True)
    vl_total_medicamento = models.FloatField(blank=True, null=True)
    vl_total_gases = models.FloatField(blank=True, null=True)
    vl_total_geral = models.FloatField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=24, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_opme_solicitada_ans'


class TbOpmeUtilizadaAns(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans')
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_seq_registro = models.FloatField(blank=True, null=True)
    nu_registro_ans = models.CharField(max_length=6)
    nu_guia_prestador = models.CharField(max_length=20, blank=True, null=True)
    cd_tabela_usada = models.CharField(max_length=2, blank=True, null=True)
    cd_codigo_opm = models.CharField(max_length=10, blank=True, null=True)
    ds_descricao_opm = models.CharField(max_length=60, blank=True, null=True)
    qt_opm_utilizada = models.IntegerField(blank=True, null=True)
    cd_cod_de_barras = models.CharField(max_length=20, blank=True, null=True)
    vl_unitario_opm = models.FloatField(blank=True, null=True)
    vl_total_opm = models.FloatField(blank=True, null=True)
    vl_geral_opm = models.FloatField(blank=True, null=True)
    cd_tipo_faturamento = models.CharField(max_length=1)
    vl_total_procedimento = models.FloatField(blank=True, null=True)
    vl_total_diarias = models.FloatField(blank=True, null=True)
    vl_total_taxas = models.FloatField(blank=True, null=True)
    vl_total_materiais = models.FloatField(blank=True, null=True)
    vl_total_medicamento = models.FloatField(blank=True, null=True)
    vl_total_gases = models.FloatField(blank=True, null=True)
    vl_total_geral = models.FloatField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=24, blank=True, null=True)
    ds_justificativa = models.CharField(max_length=60, blank=True, null=True)
    cd_tamanho_codigo = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_opme_utilizada_ans'


class TbOrcamentoFilial(models.Model):
    cd_filial = models.CharField(primary_key=True, max_length=3)
    cd_ano = models.IntegerField()
    cd_mes = models.IntegerField()
    vl_limite_1 = models.BigIntegerField(blank=True, null=True)
    vl_limite_2 = models.BigIntegerField(blank=True, null=True)
    cd_usuario_2 = models.CharField(max_length=10, blank=True, null=True)
    dt_autoriza_2 = models.DateField(blank=True, null=True)
    ds_justifica_2 = models.CharField(max_length=100, blank=True, null=True)
    vl_limite_3 = models.BigIntegerField(blank=True, null=True)
    cd_usuario_3 = models.CharField(max_length=10, blank=True, null=True)
    dt_autoriza_3 = models.DateField(blank=True, null=True)
    ds_justifica_3 = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_orcamento_filial'
        unique_together = (('cd_filial', 'cd_ano', 'cd_mes'),)


class TbOrcamentoPrevistoOperacao(models.Model):
    cd_operacao = models.ForeignKey(TbOperacao, models.DO_NOTHING, db_column='cd_operacao', primary_key=True)
    vl_limite = models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial')

    class Meta:
        managed = False
        db_table = 'tb_orcamento_previsto_operacao'
        unique_together = (('cd_operacao', 'cd_filial'),)


class TbOrcamentoSetor(models.Model):
    cd_setor = models.CharField(primary_key=True, max_length=6)
    cd_ano = models.IntegerField()
    cd_mes = models.IntegerField()
    vl_limite_1 = models.BigIntegerField(blank=True, null=True)
    vl_limite_2 = models.BigIntegerField(blank=True, null=True)
    cd_usuario_2 = models.CharField(max_length=10, blank=True, null=True)
    dt_autoriza_2 = models.DateField(blank=True, null=True)
    ds_justifica_2 = models.CharField(max_length=100, blank=True, null=True)
    vl_limite_3 = models.BigIntegerField(blank=True, null=True)
    cd_usuario_3 = models.CharField(max_length=10, blank=True, null=True)
    dt_autoriza_3 = models.DateField(blank=True, null=True)
    ds_justifica_3 = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_orcamento_setor'
        unique_together = (('cd_setor', 'cd_ano', 'cd_mes'),)


class TbOrdenacaoExame(models.Model):
    cd_grupo_ordenacao = models.ForeignKey(TbGrupoOrdenacao, models.DO_NOTHING, db_column='cd_grupo_ordenacao', primary_key=True)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')
    cd_ordem = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_ordenacao_exame'
        unique_together = (('cd_grupo_ordenacao', 'cd_procedimento'),)


class TbOrganizacaoProntuario(models.Model):
    cd_organizacao_prontuario = models.FloatField(primary_key=True)
    nm_organizacao_prontuario = models.CharField(max_length=100)
    cd_organizacao_prontuario_pai = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_organizacao_prontuario_pai', blank=True, null=True)
    nm_icone = models.CharField(max_length=20, blank=True, null=True)
    cd_tipo_documento_prontuario = models.ForeignKey('TbTipoDocumentoProntuario', models.DO_NOTHING, db_column='cd_tipo_documento_prontuario', blank=True, null=True)
    ds_sql = models.CharField(max_length=4000, blank=True, null=True)
    nu_ordem_apresentacao = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_organizacao_prontuario'


class TbOrgaoExpedidor(models.Model):
    cd_orgao = models.IntegerField(primary_key=True)
    ds_orgao = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_orgao_expedidor'


class TbOutrasDespesasAns(models.Model):
    tp_guia_ans = models.ForeignKey('TbTipoGuiaAns', models.DO_NOTHING, db_column='tp_guia_ans')
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_seq_registro = models.FloatField(blank=True, null=True)
    nu_registro_ans = models.CharField(max_length=6)
    nu_guia = models.CharField(max_length=20, blank=True, null=True)
    nu_cgc_cpf_executante = models.CharField(max_length=14, blank=True, null=True)
    nu_cnes_executante = models.CharField(max_length=7, blank=True, null=True)
    cd_tipo_tabela = models.CharField(max_length=2, blank=True, null=True)
    cd_codigo = models.CharField(max_length=10, blank=True, null=True)
    ds_descricao = models.CharField(max_length=60, blank=True, null=True)
    cd_tipo_despesa = models.CharField(max_length=1, blank=True, null=True)
    dt_realizacao = models.DateField(blank=True, null=True)
    hr_inicial = models.CharField(max_length=5, blank=True, null=True)
    hr_final = models.CharField(max_length=5, blank=True, null=True)
    pc_reducao_acrescimo = models.FloatField(blank=True, null=True)
    qt_quantidade = models.FloatField(blank=True, null=True)
    vl_unitario = models.FloatField(blank=True, null=True)
    vl_total = models.FloatField(blank=True, null=True)
    ds_justificativa = models.CharField(max_length=60, blank=True, null=True)
    cd_tamanho_codigo = models.FloatField(blank=True, null=True)
    cd_termo = models.CharField(max_length=12, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_outras_despesas_ans'


class TbOutrasDespesasAnsTemp(models.Model):
    tp_guia_ans = models.CharField(max_length=8, blank=True, null=True)
    nu_remessa = models.FloatField(blank=True, null=True)
    cd_atendimento = models.FloatField(blank=True, null=True)
    nu_seq_registro = models.FloatField(blank=True, null=True)
    nu_registro_ans = models.CharField(max_length=6, blank=True, null=True)
    nu_guia = models.CharField(max_length=20, blank=True, null=True)
    nu_cgc_cpf_executante = models.CharField(max_length=14, blank=True, null=True)
    nu_cnes_executante = models.CharField(max_length=7, blank=True, null=True)
    cd_tipo_tabela = models.CharField(max_length=2, blank=True, null=True)
    cd_codigo = models.CharField(max_length=10, blank=True, null=True)
    ds_descricao = models.CharField(max_length=60, blank=True, null=True)
    cd_tipo_despesa = models.CharField(max_length=1, blank=True, null=True)
    dt_realizacao = models.DateField(blank=True, null=True)
    hr_inicial = models.CharField(max_length=5, blank=True, null=True)
    hr_final = models.CharField(max_length=5, blank=True, null=True)
    pc_reducao_acrescimo = models.FloatField(blank=True, null=True)
    qt_quantidade = models.FloatField(blank=True, null=True)
    vl_unitario = models.FloatField(blank=True, null=True)
    vl_total = models.FloatField(blank=True, null=True)
    ds_justificativa = models.CharField(max_length=60, blank=True, null=True)
    cd_tamanho_codigo = models.FloatField(blank=True, null=True)
    cd_termo = models.CharField(max_length=12, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_outras_despesas_ans_temp'


class TbPac1(models.Model):
    cd_paciente = models.FloatField()
    nm_paciente = models.CharField(max_length=45)
    carteira = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pac1'


class TbPaciente(models.Model):
    cd_paciente = models.IntegerField(primary_key=True)
    nm_paciente = models.CharField(max_length=45)
    dt_nascimento = models.DateField()
    cd_sexo = models.CharField(max_length=1)
    nm_municipio = models.ForeignKey(TbCepLocalidade, models.DO_NOTHING, db_column='nm_municipio')
    cd_uf = models.ForeignKey(TbCepLocalidade, models.DO_NOTHING, db_column='cd_uf')
    cd_estado_civil = models.ForeignKey(TbEstadoCivil, models.DO_NOTHING, db_column='cd_estado_civil', blank=True, null=True)
    cd_cor = models.ForeignKey(TbCor, models.DO_NOTHING, db_column='cd_cor', blank=True, null=True)
    fl_tipo_sanguineo = models.CharField(max_length=2, blank=True, null=True)
    fl_fator_rh = models.CharField(max_length=1, blank=True, null=True)
    cd_profissao = models.ForeignKey(TbCbo, models.DO_NOTHING, db_column='cd_profissao', blank=True, null=True)
    nm_pai = models.CharField(max_length=45, blank=True, null=True)
    nm_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_prof_pai = models.ForeignKey(TbCbo, models.DO_NOTHING, db_column='cd_prof_pai', blank=True, null=True)
    cd_prof_mae = models.ForeignKey(TbCbo, models.DO_NOTHING, db_column='cd_prof_mae', blank=True, null=True)
    cd_tipo_endereco = models.ForeignKey('TbTipoLogradouro', models.DO_NOTHING, db_column='cd_tipo_endereco', blank=True, null=True)
    nm_endereco = models.CharField(max_length=60, blank=True, null=True)
    nu_endereco = models.CharField(max_length=10, blank=True, null=True)
    nm_complemento_end = models.CharField(max_length=60, blank=True, null=True)
    nm_bairro = models.CharField(max_length=60, blank=True, null=True)
    nu_cep = models.CharField(max_length=8, blank=True, null=True)
    nu_telefone = models.CharField(max_length=20, blank=True, null=True)
    nu_ramal = models.CharField(max_length=4, blank=True, null=True)
    nm_ponto_referencia = models.CharField(max_length=60, blank=True, null=True)
    ds_local_trabalho_paciente = models.CharField(max_length=45, blank=True, null=True)
    nu_telefone_trabalho = models.CharField(max_length=10, blank=True, null=True)
    cd_nacionalidade = models.ForeignKey(TbNacionalidade, models.DO_NOTHING, db_column='cd_nacionalidade', blank=True, null=True)
    nu_rg = models.BigIntegerField(blank=True, null=True)
    cd_orgao_expedidor = models.CharField(max_length=45, blank=True, null=True)
    cd_uf_orgao = models.CharField(max_length=2, blank=True, null=True)
    nu_cgc_cpf = models.BigIntegerField(blank=True, null=True)
    nu_carteira_prof = models.IntegerField(blank=True, null=True)
    nu_serie = models.IntegerField(blank=True, null=True)
    cd_religiao = models.ForeignKey('TbReligiao', models.DO_NOTHING, db_column='cd_religiao', blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    cd_raca_cor = models.FloatField(blank=True, null=True)
    cd_usu_liberou_imagem = models.CharField(max_length=10, blank=True, null=True)
    ds_just_sem_imagem = models.CharField(max_length=500, blank=True, null=True)
    nm_paciente_fonetico = models.CharField(max_length=100, blank=True, null=True)
    dt_expedicao_rg = models.DateField(blank=True, null=True)
    cd_uf_res = models.CharField(max_length=2, blank=True, null=True)
    nm_municipio_res = models.CharField(max_length=60, blank=True, null=True)
    nu_telefone_ddd = models.CharField(max_length=2, blank=True, null=True)
    fl_rn_ok = models.CharField(max_length=1, blank=True, null=True)
    ds_endereco_eletronico = models.CharField(max_length=60, blank=True, null=True)
    nm_social = models.CharField(max_length=45, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_paciente'


class TbPacienteAcompanhante(models.Model):
    cd_acompanhante = models.FloatField(primary_key=True)
    cd_paciente = models.ForeignKey(TbPaciente, models.DO_NOTHING, db_column='cd_paciente')
    ds_grau_parentesco = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_paciente_acompanhante'
        unique_together = (('cd_acompanhante', 'cd_paciente'),)


class TbPacienteAux(models.Model):
    cd_paciente = models.IntegerField(primary_key=True)
    nm_paciente = models.CharField(max_length=45)
    dt_nascimento = models.DateField()
    cd_sexo = models.CharField(max_length=1)
    nm_municipio = models.ForeignKey(TbCepLocalidade, models.DO_NOTHING, db_column='nm_municipio')
    cd_uf = models.ForeignKey(TbCepLocalidade, models.DO_NOTHING, db_column='cd_uf')
    cd_estado_civil = models.ForeignKey(TbEstadoCivil, models.DO_NOTHING, db_column='cd_estado_civil', blank=True, null=True)
    cd_cor = models.ForeignKey(TbCor, models.DO_NOTHING, db_column='cd_cor', blank=True, null=True)
    fl_tipo_sanguineo = models.CharField(max_length=2, blank=True, null=True)
    fl_fator_rh = models.CharField(max_length=1, blank=True, null=True)
    cd_profissao = models.ForeignKey(TbCbo, models.DO_NOTHING, db_column='cd_profissao', blank=True, null=True)
    nm_pai = models.CharField(max_length=45, blank=True, null=True)
    nm_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_prof_pai = models.ForeignKey(TbCbo, models.DO_NOTHING, db_column='cd_prof_pai', blank=True, null=True)
    cd_prof_mae = models.ForeignKey(TbCbo, models.DO_NOTHING, db_column='cd_prof_mae', blank=True, null=True)
    cd_tipo_endereco = models.ForeignKey('TbTipoLogradouro', models.DO_NOTHING, db_column='cd_tipo_endereco', blank=True, null=True)
    nm_endereco = models.CharField(max_length=60, blank=True, null=True)
    nu_endereco = models.CharField(max_length=10, blank=True, null=True)
    nm_complemento_end = models.CharField(max_length=60, blank=True, null=True)
    nm_bairro = models.CharField(max_length=60, blank=True, null=True)
    nu_cep = models.CharField(max_length=8, blank=True, null=True)
    nu_telefone = models.CharField(max_length=20, blank=True, null=True)
    nu_ramal = models.CharField(max_length=4, blank=True, null=True)
    nm_ponto_referencia = models.CharField(max_length=60, blank=True, null=True)
    ds_local_trabalho_paciente = models.CharField(max_length=45, blank=True, null=True)
    nu_telefone_trabalho = models.CharField(max_length=10, blank=True, null=True)
    cd_nacionalidade = models.ForeignKey(TbNacionalidade, models.DO_NOTHING, db_column='cd_nacionalidade', blank=True, null=True)
    nu_rg = models.BigIntegerField(blank=True, null=True)
    cd_orgao_expedidor = models.CharField(max_length=45, blank=True, null=True)
    cd_uf_orgao = models.CharField(max_length=2, blank=True, null=True)
    nu_cgc_cpf = models.BigIntegerField(blank=True, null=True)
    nu_carteira_prof = models.IntegerField(blank=True, null=True)
    nu_serie = models.IntegerField(blank=True, null=True)
    cd_religiao = models.ForeignKey('TbReligiao', models.DO_NOTHING, db_column='cd_religiao', blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_paciente_aux'


class TbPacoteAtendimento(models.Model):
    cd_convenio = models.IntegerField(primary_key=True)
    cd_pessoa = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa')
    cd_tipo_pacote = models.IntegerField()
    dt_vigencia = models.DateField()
    vl_pacote = models.DecimalField(max_digits=12, decimal_places=2)
    cd_motivo_atendimento = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pacote_atendimento'
        unique_together = (('cd_convenio', 'cd_pessoa', 'cd_tipo_pacote', 'dt_vigencia'),)


class TbPacs(models.Model):
    cd_pacs = models.IntegerField(primary_key=True)
    nm_pacs = models.CharField(max_length=45, blank=True, null=True)
    ds_pacs = models.CharField(max_length=120, blank=True, null=True)
    nm_executavel = models.CharField(max_length=45, blank=True, null=True)
    ds_path = models.CharField(max_length=250, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pacs'


class TbPadraoCcihFicha(models.Model):
    cd_padrao_ccih_ficha = models.IntegerField(primary_key=True)
    cd_cid10 = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cd_cid10', blank=True, null=True)
    nm_indicacao = models.CharField(max_length=1000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_padrao_ccih_ficha'


class TbPadraoCcihFichaItem(models.Model):
    cd_padrao_ccih_ficha = models.ForeignKey(TbPadraoCcihFicha, models.DO_NOTHING, db_column='cd_padrao_ccih_ficha', primary_key=True)
    cd_ocorrencia = models.IntegerField()
    cd_material = models.FloatField(blank=True, null=True)
    cd_tipo_acesso = models.ForeignKey('TbTipoAcesso', models.DO_NOTHING, db_column='cd_tipo_acesso', blank=True, null=True)
    qt_dosagem = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_unidade_dosagem = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_dosagem', blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    qt_duracao_dias = models.IntegerField(blank=True, null=True)
    fl_tipo_terapia = models.NullBooleanField()
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)
    cd_padrao_ccih_ficha_rel = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_padrao_ccih_ficha_rel', blank=True, null=True)
    cd_ocorrencia_rel = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_ocorrencia_rel', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_padrao_ccih_ficha_item'
        unique_together = (('cd_padrao_ccih_ficha', 'cd_ocorrencia'),)


class TbPapel(models.Model):
    cd_papel = models.IntegerField(primary_key=True)
    nm_papel = models.CharField(max_length=60)
    cd_papel_pai = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_papel_pai', blank=True, null=True)
    fl_admin_sis = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_papel'


class TbPapelAvaliacao(models.Model):
    cd_papel = models.ForeignKey(TbPapel, models.DO_NOTHING, db_column='cd_papel', primary_key=True)
    cd_avaliacao = models.ForeignKey(TbAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao')

    class Meta:
        managed = False
        db_table = 'tb_papel_avaliacao'
        unique_together = (('cd_papel', 'cd_avaliacao'),)


class TbPapelOperador(models.Model):
    cd_papel = models.ForeignKey(TbPapel, models.DO_NOTHING, db_column='cd_papel', primary_key=True)
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador')
    fl_padrao = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_papel_operador'
        unique_together = (('cd_papel', 'nm_operador'),)


class TbParamAjusteBalanco(models.Model):
    cd_usuario = models.CharField(primary_key=True, max_length=10)
    cd_setor = models.CharField(max_length=6)
    dt_validade = models.DateField(blank=True, null=True)
    fl_iniciar_balanco = models.CharField(max_length=1, blank=True, null=True)
    fl_contar_item = models.CharField(max_length=1, blank=True, null=True)
    fl_fechar_balanco = models.CharField(max_length=1, blank=True, null=True)
    fl_reabrir_balanco = models.CharField(max_length=1, blank=True, null=True)
    fl_incluir_remover = models.CharField(max_length=1, blank=True, null=True)
    fl_ajustar_estoque = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_ajuste_balanco'
        unique_together = (('cd_usuario', 'cd_setor'),)


class TbParamAjusteEstoque(models.Model):
    cd_usuario = models.CharField(primary_key=True, max_length=10)
    dt_validade = models.DateField()
    dt_validade_regra = models.DateField(blank=True, null=True)
    cd_setor = models.CharField(max_length=6)

    class Meta:
        managed = False
        db_table = 'tb_param_ajuste_estoque'
        unique_together = (('cd_usuario', 'cd_setor'),)


class TbParamApresentMaterial(models.Model):
    cd_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_convenio')
    cd_plano_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano_convenio')
    cd_apresentacao = models.ForeignKey(TbApresentacao, models.DO_NOTHING, db_column='cd_apresentacao')
    qt_menor_fracao_contagem = models.IntegerField(blank=True, null=True)
    qt_menor_fracao_cobranca = models.IntegerField(blank=True, null=True)
    cd_classificacao = models.ForeignKey(TbClassificacao, models.DO_NOTHING, db_column='cd_classificacao', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_apresent_material'
        unique_together = (('cd_convenio', 'cd_plano_convenio', 'cd_apresentacao', 'cd_classificacao'),)


class TbParamAssinaturaDigital(models.Model):
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    cd_papel = models.ForeignKey(TbPapel, models.DO_NOTHING, db_column='cd_papel')
    nu_qtde_documentos = models.FloatField()
    cd_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='cd_operador')
    dt_atualizacao = models.DateField()
    qt_tmp_bloq_falta_certificado = models.IntegerField(blank=True, null=True)
    tp_tmp_bloq_falta_certificado = models.CharField(max_length=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_assinatura_digital'
        unique_together = (('cd_filial', 'cd_papel'),)


class TbParamCentralLaudos(models.Model):
    fl_libera_laudo = models.CharField(max_length=1, blank=True, null=True)
    dt_libera_laudo = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_central_laudos'


class TbParamCid(models.Model):
    cid10 = models.CharField(primary_key=True, max_length=4)
    dias = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_cid'


class TbParamClasseDiluicao(models.Model):
    cd_principio_ativo = models.ForeignKey(TbAdministracaoDiluicao, models.DO_NOTHING, db_column='cd_principio_ativo', primary_key=True)
    cd_ocorrencia_diluicao = models.ForeignKey(TbAdministracaoDiluicao, models.DO_NOTHING, db_column='cd_ocorrencia_diluicao')
    cd_ordem_administracao = models.ForeignKey(TbAdministracaoDiluicao, models.DO_NOTHING, db_column='cd_ordem_administracao')
    cd_classe_acomodacao = models.ForeignKey(TbClasseAcomodacao, models.DO_NOTHING, db_column='cd_classe_acomodacao')
    fl_uso = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_param_classe_diluicao'
        unique_together = (('cd_principio_ativo', 'cd_ocorrencia_diluicao', 'cd_ordem_administracao', 'cd_classe_acomodacao'),)


class TbParamControlePerdas(models.Model):
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    cd_usuario = models.CharField(max_length=10)
    fl_requisicao = models.CharField(max_length=1, blank=True, null=True)
    fl_liberar = models.CharField(max_length=1, blank=True, null=True)
    fl_ger_hospital = models.CharField(max_length=1, blank=True, null=True)
    fl_ger_logistica = models.CharField(max_length=1, blank=True, null=True)
    cd_user = models.CharField(max_length=10, blank=True, null=True)
    dt_user = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_controle_perdas'


class TbParamControlePermissao(models.Model):
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', primary_key=True)
    dt_inicio = models.DateField()
    dt_fim = models.DateField()
    hr_inicio = models.IntegerField()
    hr_fim = models.IntegerField()
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador')
    usuario_gravou = models.CharField(max_length=10, blank=True, null=True)
    dt_usuario_gravou = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_controle_permissao'
        unique_together = (('cd_setor', 'dt_inicio', 'dt_fim', 'hr_inicio', 'hr_fim', 'nm_operador'),)


class TbParamConvenioDiarias(models.Model):
    cd_convenio = models.IntegerField(primary_key=True)
    cd_diaria_uti = models.CharField(max_length=10, blank=True, null=True)
    cd_diaria_uti_neo = models.CharField(max_length=10, blank=True, null=True)
    cd_diaria_bercario = models.CharField(max_length=10, blank=True, null=True)
    cd_diaria_enf_int = models.CharField(max_length=10, blank=True, null=True)
    cd_diaria_enf_day = models.CharField(max_length=10, blank=True, null=True)
    cd_diaria_apt_int = models.CharField(max_length=10, blank=True, null=True)
    cd_diaria_apt_day = models.CharField(max_length=10, blank=True, null=True)
    cd_taxa_rec_ate_4_hrs = models.CharField(max_length=10, blank=True, null=True)
    cd_taxa_rec_ate_6_hrs = models.CharField(max_length=10, blank=True, null=True)
    cd_taxa_rec_apos_6_hrs = models.CharField(max_length=10, blank=True, null=True)
    cd_taxa_obs_ate_4_hrs = models.CharField(max_length=10, blank=True, null=True)
    cd_taxa_obs_ate_6_hrs = models.CharField(max_length=10, blank=True, null=True)
    cd_taxa_obs_ate_12_hrs = models.CharField(max_length=10, blank=True, null=True)
    cd_taxa_obs_apos_3_hrs = models.CharField(max_length=10, blank=True, null=True)
    cd_taxa_aparelho_ecg = models.CharField(max_length=10, blank=True, null=True)
    cd_diaria_acomp = models.CharField(max_length=10, blank=True, null=True)
    cd_plantonista_amb = models.CharField(max_length=10, blank=True, null=True)
    cd_plantonista_cbhpm = models.CharField(max_length=10, blank=True, null=True)
    cd_taxa_sala_quimio = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_convenio_diarias'


class TbParamConvenioMatMed(models.Model):
    cd_param_grupo_proc = models.ForeignKey('TbParamGrupoProc', models.DO_NOTHING, db_column='cd_param_grupo_proc', primary_key=True)
    cd_convenio = models.IntegerField()
    cd_mat_med = models.IntegerField()
    qt_mat_med = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_convenio_mat_med'
        unique_together = (('cd_param_grupo_proc', 'cd_convenio', 'cd_mat_med'),)


class TbParamConvenioTaxas(models.Model):
    cd_param_grupo_proc = models.ForeignKey('TbParamGrupoProc', models.DO_NOTHING, db_column='cd_param_grupo_proc', primary_key=True)
    cd_convenio = models.IntegerField()
    cd_taxas = models.IntegerField()
    qt_taxas = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_convenio_taxas'
        unique_together = (('cd_param_grupo_proc', 'cd_convenio', 'cd_taxas'),)


class TbParamCurvaAbc(models.Model):
    cd_dia = models.NullBooleanField()
    nm_dia = models.CharField(max_length=15, blank=True, null=True)
    nm_setor = models.CharField(max_length=50, blank=True, null=True)
    nm_flag = models.CharField(max_length=50, blank=True, null=True)
    cd_mes = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_param_curva_abc'


class TbParamCurvas(models.Model):
    fl_curva = models.CharField(primary_key=True, max_length=1)
    fl_tipo = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_param_curvas'
        unique_together = (('fl_curva', 'fl_tipo'),)


class TbParamCurvasItem(models.Model):
    fl_tipo = models.CharField(primary_key=True, max_length=1)
    cd_ordem = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_param_curvas_item'
        unique_together = (('fl_tipo', 'cd_ordem'),)


class TbParamDemed(models.Model):
    cd_reg_resp = models.CharField(max_length=5)
    nu_cpf_resp_cnpj = models.IntegerField()
    nm_resp_cnpj = models.CharField(max_length=60)
    nu_ddd_resp_cnpj = models.IntegerField()
    nu_fone_resp = models.IntegerField()
    nu_ramal_resp = models.IntegerField(blank=True, null=True)
    nu_fax_resp = models.IntegerField(blank=True, null=True)
    ds_correio_elet = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_demed'


class TbParamDosagemDiluicao(models.Model):
    cd_principio_ativo = models.ForeignKey(TbAdministracaoDiluicao, models.DO_NOTHING, db_column='cd_principio_ativo', primary_key=True)
    cd_ocorrencia_diluicao = models.ForeignKey(TbAdministracaoDiluicao, models.DO_NOTHING, db_column='cd_ocorrencia_diluicao')
    cd_ordem_administracao = models.ForeignKey(TbAdministracaoDiluicao, models.DO_NOTHING, db_column='cd_ordem_administracao')
    cd_ordem_param = models.IntegerField()
    qt_idade_faixa_inf = models.IntegerField(blank=True, null=True)
    qt_idade_faixa_sup = models.IntegerField(blank=True, null=True)
    qt_dosagem_padrao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_unidade_usual = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_usual', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_dosagem_diluicao'
        unique_together = (('cd_principio_ativo', 'cd_ocorrencia_diluicao', 'cd_ordem_administracao', 'cd_ordem_param'),)


class TbParamEmpresaCobra(models.Model):
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio', primary_key=True)
    cd_empresa_realiza = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_empresa_realiza')
    cd_pessoa_cobra = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa_cobra')
    fl_tipo_atendimento = models.CharField(max_length=1)
    cd_ocorrencia = models.IntegerField()
    cd_grupo_procedimento = models.ForeignKey(TbGrupoProcedimento, models.DO_NOTHING, db_column='cd_grupo_procedimento', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_empresa_cobra'
        unique_together = (('cd_convenio', 'cd_empresa_realiza', 'cd_ocorrencia'),)


class TbParamExecReports(models.Model):
    cd_host = models.CharField(primary_key=True, max_length=60)
    ds_host = models.CharField(max_length=255, blank=True, null=True)
    nm_arquivo_configuracao = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_exec_reports'


class TbParamFilial(models.Model):
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    cd_prof_fisioterapia = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_prof_fisioterapia', blank=True, null=True)
    fl_macrodiag = models.CharField(max_length=1, blank=True, null=True)
    fl_valida_kit = models.CharField(max_length=1, blank=True, null=True)
    qt_tmp_bloq_falta_certificado = models.IntegerField(blank=True, null=True)
    tp_tmp_bloq_falta_certificado = models.CharField(max_length=2, blank=True, null=True)
    nu_horas_atend_contiguo_eme = models.IntegerField(blank=True, null=True)
    qtd_horas_fechamento_ns = models.FloatField(blank=True, null=True)
    fl_internacao_sms = models.CharField(max_length=1, blank=True, null=True)
    qt_dias_limite = models.IntegerField(blank=True, null=True)
    fl_exame_alto_custo = models.CharField(max_length=1)
    temp_refres = models.IntegerField(blank=True, null=True)
    fl_kits_anestesicos = models.CharField(max_length=1)
    fl_dados_mater_rn = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_filial'


class TbParamFilialCustoCompras(models.Model):
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    cd_filial_custo = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial_custo')

    class Meta:
        managed = False
        db_table = 'tb_param_filial_custo_compras'


class TbParamFilialIps(models.Model):
    cd_filial = models.CharField(primary_key=True, max_length=3)
    faixa_ips = models.CharField(unique=True, max_length=15)

    class Meta:
        managed = False
        db_table = 'tb_param_filial_ips'
        unique_together = (('cd_filial', 'faixa_ips'),)


class TbParamFilialSolicOpe(models.Model):
    id_seq_param = models.ForeignKey('TbParamFilialSolicitacao', models.DO_NOTHING, db_column='id_seq_param', primary_key=True)
    id_seq = models.IntegerField()
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador', blank=True, null=True)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    cd_tipo_solicitacao = models.IntegerField(blank=True, null=True)
    cd_grupo_chamado = models.IntegerField(blank=True, null=True)
    nm_operador_chamado = models.CharField(max_length=30, blank=True, null=True)
    cd_setor_executante = models.CharField(max_length=6, blank=True, null=True)
    ds_executante_padrao = models.CharField(max_length=100, blank=True, null=True)
    fl_aviso_inicial = models.CharField(max_length=1, blank=True, null=True)
    fl_avisa_grupo_pai = models.CharField(max_length=1, blank=True, null=True)
    fl_bloqueada_abertura_central = models.CharField(max_length=1, blank=True, null=True)
    fl_conclui_realizado = models.CharField(max_length=1, blank=True, null=True)
    cd_setor_solicitante = models.CharField(max_length=6, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_filial_solic_ope'
        unique_together = (('id_seq_param', 'id_seq'),)


class TbParamFilialSolicitacao(models.Model):
    id_seq_param = models.IntegerField(primary_key=True)
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial', blank=True, null=True)
    cd_tipo_solicitacao = models.ForeignKey('TbTipoSolicServicos', models.DO_NOTHING, db_column='cd_tipo_solicitacao', blank=True, null=True)
    cd_grupo_chamado = models.ForeignKey(TbGrupoOperadorSolicitacao, models.DO_NOTHING, db_column='cd_grupo_chamado', blank=True, null=True)
    nm_operador_chamado = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador_chamado', blank=True, null=True)
    cd_setor_executante = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_executante', blank=True, null=True)
    ds_executante_padrao = models.CharField(max_length=100, blank=True, null=True)
    fl_aviso_inicial = models.CharField(max_length=1, blank=True, null=True)
    fl_avisa_grupo_pai = models.CharField(max_length=1, blank=True, null=True)
    fl_bloqueada_abertura_central = models.CharField(max_length=1, blank=True, null=True)
    fl_conclui_realizado = models.CharField(max_length=1, blank=True, null=True)
    cd_setor_solicitante = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_solicitante', blank=True, null=True)
    nr_periodo_tempo_alerta = models.FloatField(blank=True, null=True)
    cd_unidade_tempo_alerta = models.CharField(max_length=2, blank=True, null=True)
    id_mnemonico_avaliacao = models.CharField(max_length=200, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_filial_solicitacao'


class TbParamGrupoProc(models.Model):
    cd_param_grupo_proc = models.IntegerField(primary_key=True)
    nm_param_grupo_proc = models.CharField(unique=True, max_length=60)
    fl_ativo = models.CharField(max_length=1)
    cd_tipo_grupo_proc = models.CharField(max_length=1, blank=True, null=True)
    fl_sala_trauma_gesso = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_grupo_proc'


class TbParamItensVencidos(models.Model):
    cd_setor = models.CharField(max_length=6, blank=True, null=True)
    nm_email = models.CharField(max_length=100, blank=True, null=True)
    dia_do_mes_1 = models.IntegerField(blank=True, null=True)
    dia_do_mes_2 = models.IntegerField(blank=True, null=True)
    dia_do_mes_3 = models.IntegerField(blank=True, null=True)
    dia_do_mes_4 = models.IntegerField(blank=True, null=True)
    dia_do_mes_5 = models.IntegerField(blank=True, null=True)
    dia_do_mes_0 = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_itens_vencidos'


class TbParamKitCirurgico(models.Model):
    cd_usuario = models.CharField(primary_key=True, max_length=10)
    dt_validade = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_param_kit_cirurgico'


class TbParamLaboratorio(models.Model):
    fl_certifica_por_exame = models.CharField(max_length=1, blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    nu_tempo_emergencia = models.FloatField(blank=True, null=True)
    nu_tempo_eletivo = models.FloatField(blank=True, null=True)
    nu_mudanca_emergencia = models.FloatField(blank=True, null=True)
    nu_mudanca_eletivo = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_laboratorio'


class TbParamMaterialGasto(models.Model):
    cd_material = models.ForeignKey(TbMaterialGasto, models.DO_NOTHING, db_column='cd_material', primary_key=True)
    cd_mat_med = models.ForeignKey(TbMaterialGasto, models.DO_NOTHING, db_column='cd_mat_med')
    cd_classe_acomodacao = models.ForeignKey(TbClasseAcomodacao, models.DO_NOTHING, db_column='cd_classe_acomodacao')

    class Meta:
        managed = False
        db_table = 'tb_param_material_gasto'
        unique_together = (('cd_material', 'cd_mat_med', 'cd_classe_acomodacao'),)


class TbParamMovProibicao(models.Model):
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', primary_key=True)
    dt_inicio = models.DateField()
    dt_fim = models.DateField()
    hr_inicio = models.IntegerField()
    hr_fim = models.IntegerField()
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador')
    usuario_gravou = models.CharField(max_length=10, blank=True, null=True)
    dt_usuario_gravou = models.DateField(blank=True, null=True)
    fl_liberado = models.CharField(max_length=1, blank=True, null=True)
    usuario_liberou = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='usuario_liberou', blank=True, null=True)
    dt_liberacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_mov_proibicao'
        unique_together = (('cd_setor', 'dt_inicio', 'dt_fim', 'hr_inicio', 'hr_fim', 'nm_operador'),)


class TbParamParametroReferencia(models.Model):
    cd_ref = models.FloatField(primary_key=True)
    cd_procedimento = models.ForeignKey(TbMetodoProcedimento, models.DO_NOTHING, db_column='cd_procedimento')
    cd_metodo_realizado = models.ForeignKey(TbMetodoProcedimento, models.DO_NOTHING, db_column='cd_metodo_realizado')
    cd_sexo = models.CharField(max_length=1)
    fl_unidade_tempo = models.CharField(max_length=1)
    qt_idade_inicial = models.IntegerField()
    qt_idade_final = models.IntegerField()
    fl_datacheck = models.CharField(max_length=1, blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_mnemonico_exame = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_parametro_referencia'


class TbParamPlantaoMedico(models.Model):
    cd_medico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    cd_um_vl = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_vl')
    vl_plantao = models.DecimalField(max_digits=14, decimal_places=2)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    fl_status_aud = models.FloatField(blank=True, null=True)
    ds_negativa_aud = models.CharField(max_length=300, blank=True, null=True)
    auditor_regra = models.CharField(max_length=50, blank=True, null=True)
    cd_protocolo = models.FloatField(blank=True, null=True)
    ds_motivo_aud = models.CharField(max_length=2000, blank=True, null=True)
    dt_auditor = models.DateField(blank=True, null=True)
    fl_complemento = models.CharField(max_length=1, blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_plantao_medico'
        unique_together = (('cd_medico', 'dt_ini_vigencia'),)


class TbParamProdClinica(models.Model):
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    cd_especialidade = models.ForeignKey(TbClinica, models.DO_NOTHING, db_column='cd_especialidade')
    nu_seq_dia = models.IntegerField()
    nu_dia_semana = models.BooleanField()
    hr_inicial_esp = models.IntegerField(blank=True, null=True)
    hr_final_esp = models.IntegerField(blank=True, null=True)
    fl_tipo_valor = models.CharField(max_length=1, blank=True, null=True)
    vl_nao_cooperados = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    vl_cooperados = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    vl_demais_convenios = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    vl_derm_card_otorrino = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    vl_perc_glosa = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    vl_cons_eletiva = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    vl_cons_noturna = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    vl_cons_feriado = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    vl_ecg_emerg = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_prod_clinica'
        unique_together = (('cd_filial', 'cd_especialidade', 'nu_seq_dia'),)


class TbParamProdmedDesconto(models.Model):
    cd_medico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    fl_pessoa_fisica_juridica = models.CharField(max_length=1)
    fl_cobra_ir = models.CharField(max_length=1)
    pct_desconto_ir = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    fl_cobra_iss = models.CharField(max_length=1)
    pct_desconto_iss = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    fl_isento = models.CharField(max_length=1)
    cd_cedente_sacado = models.ForeignKey(TbCedenteSacado, models.DO_NOTHING, db_column='cd_cedente_sacado', blank=True, null=True)
    fl_tipo_ir = models.FloatField(blank=True, null=True)
    fl_cobra_cofins = models.CharField(max_length=1, blank=True, null=True)
    pct_desconto_cofins = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    fl_cobra_pis = models.CharField(max_length=1, blank=True, null=True)
    pct_desconto_pis = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    fl_cobra_csll = models.CharField(max_length=1, blank=True, null=True)
    pct_desconto_csll = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pct_desconto_base_iss = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_prodmed_desconto'
        unique_together = (('cd_medico', 'dt_ini_vigencia'),)


class TbParamProdmedGrupoProced(models.Model):
    cd_medico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    cd_grupo_procedimento = models.ForeignKey(TbGrupoProduto, models.DO_NOTHING, db_column='cd_grupo_procedimento')
    cd_tipo_produtividade = models.BooleanField()
    cd_tabela_procedimento = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_procedimento', blank=True, null=True)
    cd_um = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um', blank=True, null=True)
    pct_fixo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    vl_fixo = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    fl_filme = models.CharField(max_length=1, blank=True, null=True)
    cd_um_ac = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_ac', blank=True, null=True)
    cd_tabela_ac = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_ac', blank=True, null=True)
    pct_acrescimo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    fl_status_aud = models.FloatField(blank=True, null=True)
    ds_negativa_aud = models.CharField(max_length=300, blank=True, null=True)
    auditor_regra = models.CharField(max_length=50, blank=True, null=True)
    cd_protocolo = models.FloatField(blank=True, null=True)
    ds_motivo_aud = models.CharField(max_length=2000, blank=True, null=True)
    dt_auditor = models.DateField(blank=True, null=True)
    fl_complemento = models.CharField(max_length=1, blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_prodmed_grupo_proced'
        unique_together = (('cd_medico', 'cd_grupo_procedimento', 'dt_ini_vigencia'),)


class TbParamProdmedPlantaoVar(models.Model):
    cd_medico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    cd_grupo_procedimento = models.ForeignKey(TbGrupoProduto, models.DO_NOTHING, db_column='cd_grupo_procedimento')
    cd_um_vl = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_vl', blank=True, null=True)
    vl_plantao = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_procedimento_plantao = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    fl_status_aud = models.FloatField(blank=True, null=True)
    ds_negativa_aud = models.CharField(max_length=300, blank=True, null=True)
    auditor_regra = models.CharField(max_length=50, blank=True, null=True)
    cd_protocolo = models.FloatField(blank=True, null=True)
    ds_motivo_aud = models.CharField(max_length=2000, blank=True, null=True)
    cd_tipo_regra = models.CharField(max_length=2)
    dt_auditor = models.DateField(blank=True, null=True)
    fl_complemento = models.CharField(max_length=1, blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_prodmed_plantao_var'
        unique_together = (('cd_medico', 'cd_grupo_procedimento', 'dt_ini_vigencia', 'cd_tipo_regra'),)


class TbParamProdmedProcedimento(models.Model):
    cd_medico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')
    cd_tipo_produtividade = models.BooleanField()
    cd_tabela_procedimento = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_procedimento', blank=True, null=True)
    cd_um_proc = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_proc', blank=True, null=True)
    pct_fixo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    vl_fixo = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    fl_filme = models.CharField(max_length=1, blank=True, null=True)
    cd_um_ac = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_ac', blank=True, null=True)
    cd_tabela_ac = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_ac', blank=True, null=True)
    pct_acrescimo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    vl_exame_plantao = models.FloatField(blank=True, null=True)
    pct_part_out_conv = models.FloatField(blank=True, null=True)
    pct_part_out_conv_plan = models.FloatField(blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    fl_status_aud = models.FloatField(blank=True, null=True)
    ds_negativa_aud = models.CharField(max_length=300, blank=True, null=True)
    auditor_regra = models.CharField(max_length=50, blank=True, null=True)
    cd_protocolo = models.FloatField(blank=True, null=True)
    ds_motivo_aud = models.CharField(max_length=2000, blank=True, null=True)
    dt_auditor = models.DateField(blank=True, null=True)
    fl_complemento = models.CharField(max_length=1, blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_prodmed_procedimento'
        unique_together = (('cd_medico', 'cd_procedimento', 'dt_ini_vigencia'),)


class TbParamProdmedSetGrProced(models.Model):
    cd_medico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    cd_setor = models.CharField(max_length=6)
    cd_grupo_procedimento = models.ForeignKey(TbGrupoProduto, models.DO_NOTHING, db_column='cd_grupo_procedimento')
    cd_tipo_produtividade = models.BooleanField()
    cd_tabela_procedimento = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_procedimento', blank=True, null=True)
    cd_um = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um', blank=True, null=True)
    pct_fixo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    vl_fixo = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    fl_filme = models.CharField(max_length=1, blank=True, null=True)
    cd_um_ac = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_ac', blank=True, null=True)
    cd_tabela_ac = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_ac', blank=True, null=True)
    pct_acrescimo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    fl_status_aud = models.FloatField(blank=True, null=True)
    ds_negativa_aud = models.CharField(max_length=300, blank=True, null=True)
    auditor_regra = models.CharField(max_length=50, blank=True, null=True)
    cd_protocolo = models.FloatField(blank=True, null=True)
    ds_motivo_aud = models.CharField(max_length=2000, blank=True, null=True)
    dt_auditor = models.DateField(blank=True, null=True)
    fl_complemento = models.CharField(max_length=1, blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_prodmed_set_gr_proced'
        unique_together = (('cd_medico', 'cd_setor', 'cd_grupo_procedimento', 'dt_ini_vigencia'),)


class TbParamProdmedSetProced(models.Model):
    cd_medico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    cd_setor = models.CharField(max_length=6)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')
    cd_tipo_produtividade = models.BooleanField()
    cd_tabela_procedimento = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_procedimento', blank=True, null=True)
    cd_um_proc = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_proc', blank=True, null=True)
    pct_fixo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    vl_fixo = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    fl_filme = models.CharField(max_length=1, blank=True, null=True)
    cd_um_ac = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_ac', blank=True, null=True)
    cd_tabela_ac = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_ac', blank=True, null=True)
    pct_acrescimo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    fl_status_aud = models.FloatField(blank=True, null=True)
    ds_negativa_aud = models.CharField(max_length=300, blank=True, null=True)
    auditor_regra = models.CharField(max_length=50, blank=True, null=True)
    cd_protocolo = models.FloatField(blank=True, null=True)
    ds_motivo_aud = models.CharField(max_length=2000, blank=True, null=True)
    dt_auditor = models.DateField(blank=True, null=True)
    fl_complemento = models.CharField(max_length=1, blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_prodmed_set_proced'
        unique_together = (('cd_medico', 'cd_setor', 'cd_procedimento', 'dt_ini_vigencia'),)


class TbParamProdmedValorFixo(models.Model):
    cd_medico = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_medico', blank=True, null=True)
    cd_tipo_valor_fixo = models.ForeignKey('TbTipoValorFixo', models.DO_NOTHING, db_column='cd_tipo_valor_fixo', blank=True, null=True)
    cd_um_vl = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_vl')
    vl_fixo = models.DecimalField(max_digits=14, decimal_places=2)
    dt_ini_vigencia = models.DateField()
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    fl_status_aud = models.FloatField(blank=True, null=True)
    ds_negativa_aud = models.CharField(max_length=300, blank=True, null=True)
    auditor_regra = models.CharField(max_length=50, blank=True, null=True)
    cd_protocolo = models.FloatField(blank=True, null=True)
    ds_motivo_aud = models.CharField(max_length=2000, blank=True, null=True)
    cd_empresa = models.FloatField(blank=True, null=True)
    dt_auditor = models.DateField(blank=True, null=True)
    fl_complemento = models.CharField(max_length=1, blank=True, null=True)
    cd_op_solicitante = models.CharField(max_length=30, blank=True, null=True)
    dt_solicitacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_prodmed_valor_fixo'
        unique_together = (('cd_medico', 'cd_tipo_valor_fixo', 'dt_ini_vigencia', 'cd_empresa'),)


class TbParamProdutividade(models.Model):
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    vl_nao_cooperados = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    vl_cooperados = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    vl_demais_convenios = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    vl_derm_card_otorrino = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    vl_perc_glosa = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    vl_cons_eletiva = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    cd_especialidade = models.ForeignKey(TbEspecialidade, models.DO_NOTHING, db_column='cd_especialidade')
    fl_tipo_valor = models.CharField(max_length=1, blank=True, null=True)
    vl_cons_noturna = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_produtividade'
        unique_together = (('cd_filial', 'cd_especialidade'),)


class TbParamRepasse(models.Model):
    dt_vigencia = models.DateField(primary_key=True)
    vl_max_cobra_percent = models.DecimalField(max_digits=18, decimal_places=2)
    vl_percentual = models.DecimalField(max_digits=3, decimal_places=1)
    vl_percent_ir = models.DecimalField(max_digits=3, decimal_places=1)

    class Meta:
        managed = False
        db_table = 'tb_param_repasse'


class TbParamSequenciaProcAtend(models.Model):
    cd_sequencia = models.FloatField(primary_key=True)
    ds_sequencia = models.CharField(max_length=1000, blank=True, null=True)
    nu_ordem_padrao = models.IntegerField(blank=True, null=True)
    cd_mnemonico_sequencia = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_sequencia_proc_atend'


class TbParamSetor(models.Model):
    fl_certificacao_bercario = models.CharField(max_length=1, blank=True, null=True)
    cd_setor = models.CharField(primary_key=True, max_length=6)
    hr_prescricao_continuidade = models.IntegerField(blank=True, null=True)
    qt_hr_devolucao_automatica = models.IntegerField(blank=True, null=True)
    nu_dias_aviso = models.FloatField(blank=True, null=True)
    fl_leitura_pulseira = models.CharField(max_length=1, blank=True, null=True)
    fl_solic_ficha_intern = models.CharField(max_length=1, blank=True, null=True)
    fl_hab_quest_satisf_mob = models.CharField(max_length=1, blank=True, null=True)
    fl_pesq_satisfacao = models.CharField(max_length=1, blank=True, null=True)
    fl_agenda_oncologia = models.CharField(max_length=1, blank=True, null=True)
    fl_hab_boletim_uti_mob = models.CharField(max_length=1, blank=True, null=True)
    fl_bio_paciente_partograma = models.CharField(max_length=1, blank=True, null=True)
    fl_bio_alta_adm = models.CharField(max_length=1, blank=True, null=True)
    fl_revisita = models.CharField(max_length=1, blank=True, null=True)
    hr_inicio_revisita = models.FloatField(blank=True, null=True)
    hr_final_revisita = models.FloatField(blank=True, null=True)
    fl_bio_agenda_oncologia = models.CharField(max_length=1, blank=True, null=True)
    fl_hab_vis_acolhimento_eme = models.CharField(max_length=1, blank=True, null=True)
    fl_novosam = models.CharField(max_length=1, blank=True, null=True)
    fl_presc_check_evolucao = models.CharField(max_length=1, blank=True, null=True)
    fl_presc_check_boletim = models.CharField(max_length=1, blank=True, null=True)
    fl_presc_check_check_cir = models.CharField(max_length=1, blank=True, null=True)
    fl_presc_check_peri = models.CharField(max_length=1, blank=True, null=True)
    fl_obriga_bio_digital_eme = models.CharField(max_length=1, blank=True, null=True)
    fl_hab_bioface_vis_aco_int = models.CharField(max_length=1, blank=True, null=True)
    fl_abre_novo_sam = models.CharField(max_length=1, blank=True, null=True)
    fl_bio_transf_posto_pac = models.CharField(max_length=1, blank=True, null=True)
    fl_gerar_cirurgia = models.CharField(max_length=1, blank=True, null=True)
    fl_reabre_atendimento = models.CharField(max_length=1, blank=True, null=True)
    cd_setor_rep_carrop = models.CharField(max_length=6, blank=True, null=True)
    hr_devolver_procmed_nao_adm = models.IntegerField(blank=True, null=True)
    qt_hr_devolver_limite = models.IntegerField(blank=True, null=True)
    fl_bio_face_transf_posto_pac = models.CharField(max_length=1, blank=True, null=True)
    fl_utiliza_higienizacao_app = models.CharField(max_length=1, blank=True, null=True)
    fl_qrcode_higienizacao_app = models.CharField(max_length=1, blank=True, null=True)
    fl_hab_bioface_vis_aco_eme = models.CharField(max_length=1, blank=True, null=True)
    fl_posto_deshospitalizacao = models.CharField(max_length=1, blank=True, null=True)
    fl_obriga_bio_facial = models.CharField(max_length=1, blank=True, null=True)
    nu_fat_multi_med_bi_pri = models.IntegerField(blank=True, null=True)
    nu_fat_multi_med_bi_out = models.IntegerField(blank=True, null=True)
    nr_periodo_tempo_alerta = models.FloatField(blank=True, null=True)
    cd_unidade_tempo_alerta = models.CharField(max_length=2, blank=True, null=True)
    nr_periodo_tempo_alerta22 = models.FloatField(blank=True, null=True)
    cd_unidade_tempo_alerta22 = models.CharField(max_length=2, blank=True, null=True)
    fl_visualiza_todos_hr_checagem = models.CharField(max_length=1, blank=True, null=True)
    cd_unidade_tempo_hr_checagem = models.CharField(max_length=2, blank=True, null=True)
    nr_periodo_tempo_hr_checagem = models.IntegerField(blank=True, null=True)
    fl_perm_estoq_lote_negativo = models.CharField(max_length=1, blank=True, null=True)
    fl_checagem_beira_leito = models.CharField(max_length=1, blank=True, null=True)
    fl_deshosp_domiciliar = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_setor'


class TbParamSetorAssDigital(models.Model):
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', primary_key=True)
    cd_papel = models.ForeignKey(TbParamAssinaturaDigital, models.DO_NOTHING, db_column='cd_papel')
    cd_filial = models.ForeignKey(TbParamAssinaturaDigital, models.DO_NOTHING, db_column='cd_filial')
    nu_qtde_documentos = models.FloatField()
    cd_operador = models.CharField(max_length=10)
    dt_atualizacao = models.DateField()
    qt_tmp_bloq_falta_certificado = models.IntegerField(blank=True, null=True)
    tp_tmp_bloq_falta_certificado = models.CharField(max_length=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_setor_ass_digital'
        unique_together = (('cd_setor', 'cd_papel', 'cd_filial'),)


class TbParamSolicParecer(models.Model):
    id_param_solic_parecer = models.IntegerField(primary_key=True)
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial', blank=True, null=True)
    cd_especialidade = models.ForeignKey(TbEspecialidade, models.DO_NOTHING, db_column='cd_especialidade', blank=True, null=True)
    cd_tipo_parecer = models.ForeignKey('TbTipoParecer', models.DO_NOTHING, db_column='cd_tipo_parecer', blank=True, null=True)
    cd_parecerista = models.ForeignKey('TbParecerista', models.DO_NOTHING, db_column='cd_parecerista', blank=True, null=True)
    cd_especialidade_detalhe = models.ForeignKey(TbEspecialidadeDetalhe, models.DO_NOTHING, db_column='cd_especialidade_detalhe', blank=True, null=True)
    dt_criacao = models.DateField(blank=True, null=True)
    nm_operador_criacao = models.CharField(max_length=10, blank=True, null=True)
    dt_ult_atu = models.DateField(blank=True, null=True)
    nm_operador_atu = models.CharField(max_length=10, blank=True, null=True)
    fl_ativado = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_solic_parecer'


class TbParamTelaProtocolo(models.Model):
    cd_param_tela_protocolo = models.FloatField(primary_key=True)
    nm_tela = models.CharField(max_length=100, blank=True, null=True)
    tp_servico = models.CharField(max_length=20, blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_tela_protocolo'


class TbParamUnidAtendOperador(models.Model):
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento', primary_key=True)
    fl_selecionado = models.CharField(max_length=1, blank=True, null=True)
    nu_tempo = models.FloatField(blank=True, null=True)
    nm_operador = models.ForeignKey('TbOperador', models.DO_NOTHING, db_column='nm_operador')

    class Meta:
        managed = False
        db_table = 'tb_param_unid_atend_operador'
        unique_together = (('cd_unidade_atendimento', 'nm_operador'),)


class TbParamUsuarioCompras(models.Model):
    nm_operador = models.CharField(primary_key=True, max_length=10)
    cd_setor = models.CharField(max_length=6)
    fl_autoriza_limite = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_usuario_compras'
        unique_together = (('nm_operador', 'cd_setor'),)


class TbParamUsuarioPend(models.Model):
    nm_operador = models.CharField(primary_key=True, max_length=10)
    cd_setor_controle = models.CharField(max_length=6)
    hr_inicial = models.FloatField()
    hr_final = models.FloatField()
    dt_dia_semana = models.FloatField()
    fl_pendencia_exclusao = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tb_param_usuario_pend'


class TbParamVlFixoProcedimento(models.Model):
    cd_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_convenio', primary_key=True)
    cd_plano_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano_convenio')
    dt_vigencia_proced = models.DateField()
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')
    cd_tabela_proced = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_proced', blank=True, null=True)
    pc_desconto_proced = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_um_proced = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_proced', blank=True, null=True)
    vl_procedimento = models.FloatField(blank=True, null=True)
    nm_operador = models.CharField(max_length=10, blank=True, null=True)
    dt_audit = models.DateField(blank=True, null=True)
    fl_proc_guia_unica = models.CharField(max_length=1, blank=True, null=True)
    fl_pacote = models.CharField(max_length=1, blank=True, null=True)
    qt_dia_pacote = models.FloatField(blank=True, null=True)
    fl_mat_med = models.CharField(max_length=1, blank=True, null=True)
    fl_taxa = models.CharField(max_length=1, blank=True, null=True)
    fl_honorario = models.CharField(max_length=1, blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    vl_acres_pre_fixo = models.FloatField(blank=True, null=True)
    fl_vl_fixo_sem_pacote = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_param_vl_fixo_procedimento'
        unique_together = (('cd_convenio', 'cd_plano_convenio', 'dt_vigencia_proced', 'cd_procedimento'),)


class TbParametDiaria(models.Model):
    cd_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_convenio', primary_key=True)
    cd_plano_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano_convenio')
    cd_tipo_classe = models.ForeignKey('TbTipoClasseAcomodacao', models.DO_NOTHING, db_column='cd_tipo_classe')
    hr_vencimento = models.IntegerField()
    qt_fracao_diaria = models.IntegerField()
    hr_tolerancia = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_paramet_diaria'
        unique_together = (('cd_convenio', 'cd_plano_convenio', 'cd_tipo_classe'),)


class TbParametroCalendario(models.Model):
    cd_pessoa_cobra = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa_cobra', primary_key=True)
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio')
    cd_ordem = models.FloatField()
    nu_dia_remessa = models.IntegerField(blank=True, null=True)
    cd_dia_remessa = models.NullBooleanField()
    qt_dia_remessa = models.IntegerField(blank=True, null=True)
    qt_dia_pagamento = models.IntegerField(blank=True, null=True)
    nu_dia_pagamento = models.IntegerField(blank=True, null=True)
    qt_dias = models.FloatField(blank=True, null=True)
    cd_classe_atendimento = models.ForeignKey(TbClasseRemessaAtendimento, models.DO_NOTHING, db_column='cd_classe_atendimento', blank=True, null=True)
    fl_gerar_automaticamente = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tb_parametro_calendario'
        unique_together = (('cd_pessoa_cobra', 'cd_convenio', 'cd_ordem'),)


class TbParametroConvenio(models.Model):
    cd_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_convenio', primary_key=True)
    cd_plano_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano_convenio')
    dt_vigencia_parametro = models.DateField()
    cd_tabela_proced = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_proced', blank=True, null=True)
    pc_desconto_proced = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_um_proced = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_proced', blank=True, null=True)
    cd_tabela_taxa = models.ForeignKey('TbTabelaTaxa', models.DO_NOTHING, db_column='cd_tabela_taxa')
    pc_desconto_taxa = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_um_taxa = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_taxa')
    cd_tabela_mat_med = models.ForeignKey('TbTabelaMatMed', models.DO_NOTHING, db_column='cd_tabela_mat_med')
    pc_desconto_mat_med = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_um_mat_med = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_mat_med')
    cd_tabela_medicamento = models.ForeignKey('TbTabelaMatMed', models.DO_NOTHING, db_column='cd_tabela_medicamento')
    pc_desconto_medicamento = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_um_medicamento = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_medicamento')
    cd_um_proced_filme = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_proced_filme', blank=True, null=True)
    cd_material_tab_ref_ans = models.ForeignKey('TbTabelaReferenciaAns', models.DO_NOTHING, db_column='cd_material_tab_ref_ans', blank=True, null=True)
    cd_medicamento_tab_ref_ans = models.ForeignKey('TbTabelaReferenciaAns', models.DO_NOTHING, db_column='cd_medicamento_tab_ref_ans', blank=True, null=True)
    cd_taxa_tab_ref_ans = models.ForeignKey('TbTabelaReferenciaAns', models.DO_NOTHING, db_column='cd_taxa_tab_ref_ans', blank=True, null=True)
    pc_acrescimo_taxa = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_acrescimo_mat_med = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    pc_acrescimo_medicamento = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_parametro_convenio'
        unique_together = (('cd_convenio', 'cd_plano_convenio', 'dt_vigencia_parametro'),)


class TbParametroFormulario(models.Model):
    cd_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', blank=True, null=True)
    cd_formulario = models.ForeignKey('TbVigenciaFormulario', models.DO_NOTHING, db_column='cd_formulario', primary_key=True)
    dt_vigencia = models.ForeignKey('TbVigenciaFormulario', models.DO_NOTHING, db_column='dt_vigencia')
    cd_parametro = models.CharField(max_length=30)
    cd_nivel_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_nivel_avaliacao', blank=True, null=True)
    cd_ordem = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_ordem', blank=True, null=True)
    fl_largura_fixa = models.CharField(max_length=1, blank=True, null=True)
    qt_largura_fixa = models.FloatField(blank=True, null=True)
    qt_max_laugura = models.FloatField(blank=True, null=True)
    cd_funcao = models.CharField(max_length=30, blank=True, null=True)
    qt_coluna = models.FloatField(blank=True, null=True)
    fl_type = models.CharField(max_length=30, blank=True, null=True)
    fl_required = models.CharField(max_length=30, blank=True, null=True)
    fl_read_only = models.CharField(max_length=30, blank=True, null=True)
    ds_valor_posivel = models.CharField(max_length=4000, blank=True, null=True)
    nm_item_parametro_formulario = models.CharField(max_length=256, blank=True, null=True)
    nm_lista = models.ForeignKey(TbListaValores, models.DO_NOTHING, db_column='nm_lista', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_parametro_formulario'
        unique_together = (('cd_formulario', 'dt_vigencia', 'cd_parametro'),)


class TbParametroGeraisFilial(models.Model):
    cd_filial = models.CharField(primary_key=True, max_length=5)
    cd_parametro = models.CharField(max_length=100)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)
    dt_criacao = models.DateField(blank=True, null=True)
    dt_ativacao = models.DateField(blank=True, null=True)
    cd_user_ativou = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_parametro_gerais_filial'
        unique_together = (('cd_filial', 'cd_parametro'),)


class TbParametroItemAvaliacao(models.Model):
    cd_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao', primary_key=True)
    cd_nivel_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_ordem')
    cd_parametro = models.CharField(max_length=30)
    nm_parametro = models.CharField(max_length=100)
    ds_valida_parametro = models.CharField(max_length=2000, blank=True, null=True)
    ds_query_parametro = models.CharField(max_length=2000, blank=True, null=True)
    ds_mensagem_parametro = models.CharField(max_length=500, blank=True, null=True)
    fl_tipo_parametro = models.CharField(max_length=10)
    fl_obrigatorio = models.CharField(max_length=1)
    fl_tipo_parametro_inicio = models.CharField(max_length=10, blank=True, null=True)
    nm_parametro_inicial = models.CharField(max_length=240, blank=True, null=True)
    nu_ordem = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_parametro_item_avaliacao'
        unique_together = (('cd_avaliacao', 'cd_nivel_avaliacao', 'cd_ordem', 'cd_parametro'),)


class TbParametroProcedimento(models.Model):
    cd_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_convenio', primary_key=True)
    cd_plano_convenio = models.ForeignKey('TbPlanoConvenio', models.DO_NOTHING, db_column='cd_plano_convenio')
    dt_vigencia_proced = models.DateField()
    cd_grupo_procedimento = models.ForeignKey(TbGrupoProcedimento, models.DO_NOTHING, db_column='cd_grupo_procedimento')
    cd_tabela_proced = models.ForeignKey('TbTabelaProcedimento', models.DO_NOTHING, db_column='cd_tabela_proced')
    pc_desconto_proced = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    cd_um_proced = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um_proced')
    cd_procedimento_tab_ref_ans = models.ForeignKey('TbTabelaReferenciaAns', models.DO_NOTHING, db_column='cd_procedimento_tab_ref_ans', blank=True, null=True)
    cd_uco_grupo = models.FloatField(blank=True, null=True)
    pc_cd_uco_grupo = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_parametro_procedimento'
        unique_together = (('cd_convenio', 'cd_plano_convenio', 'dt_vigencia_proced', 'cd_grupo_procedimento'),)


class TbParametroReferencia(models.Model):
    cd_parametro_referencia = models.IntegerField(primary_key=True)
    ds_parametro_referencia = models.CharField(max_length=60)
    dt_vigencia = models.DateField(blank=True, null=True)
    dt_fim_vigencia = models.DateField(blank=True, null=True)
    cd_principio_ativo = models.IntegerField(blank=True, null=True)
    nm_abreviatura = models.CharField(max_length=5, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_parametro_referencia'


class TbParametroResultado(models.Model):
    cd_procedimento = models.CharField(primary_key=True, max_length=8)
    cd_parametro_referencia = models.IntegerField()
    cd_laboratorio_apoio = models.FloatField()
    cd_resultado_lap = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'tb_parametro_resultado'
        unique_together = (('cd_procedimento', 'cd_parametro_referencia', 'cd_laboratorio_apoio'),)


class TbParametrosGerais(models.Model):
    cd_parametro = models.CharField(primary_key=True, max_length=100)
    ds_parametro = models.CharField(max_length=1000)

    class Meta:
        managed = False
        db_table = 'tb_parametros_gerais'


class TbParametrosProc(models.Model):
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_grupo_produto = models.IntegerField(blank=True, null=True)
    qt_dias_internos = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    qt_dias_terceirizados = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    terceirizado = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_parametros_proc'


class TbPardiniDescmat(models.Model):
    cd_material_pardini = models.CharField(max_length=20, blank=True, null=True)
    cd_mnemonico_pardini = models.CharField(max_length=20, blank=True, null=True)
    ds_material = models.CharField(max_length=100, blank=True, null=True)
    conservante = models.CharField(max_length=100, blank=True, null=True)
    inf_adicional = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pardini_descmat'


class TbPardiniEtiquetaUnidade(models.Model):
    cd_unidade_atendimento = models.CharField(max_length=3)
    dt_operacao = models.DateField()
    nm_operador = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'tb_pardini_etiqueta_unidade'


class TbPardiniExame(models.Model):
    dt_geracao = models.CharField(max_length=10, blank=True, null=True)
    hr_geracao = models.CharField(max_length=10, blank=True, null=True)
    cd_mnemonico_mat = models.CharField(max_length=20, blank=True, null=True)
    cd_mnemonico_exame = models.CharField(max_length=20, blank=True, null=True)
    nm_exame = models.CharField(max_length=240, blank=True, null=True)
    nm_origem_admissivel = models.CharField(max_length=20, blank=True, null=True)
    cd_laboratorio_ter = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pardini_exame'


class TbPardiniHapMaterial(models.Model):
    cd_mnemonico_mat = models.CharField(max_length=20, blank=True, null=True)
    cd_mnemonico_exame = models.CharField(max_length=20, blank=True, null=True)
    nm_material = models.CharField(max_length=240, blank=True, null=True)
    cd_grupo = models.CharField(max_length=10, blank=True, null=True)
    nm_condicao = models.CharField(max_length=50, blank=True, null=True)
    nm_conservante = models.CharField(max_length=50, blank=True, null=True)
    cd_laboratorio_apoio = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pardini_hap_material'


class TbPardiniInfoXml(models.Model):
    nm_link = models.CharField(max_length=100)
    nm_login = models.CharField(max_length=10, blank=True, null=True)
    nm_senha = models.CharField(max_length=10, blank=True, null=True)
    cd_laboratorio_ter = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pardini_info_xml'


class TbPardiniMaterial(models.Model):
    cd_mnemonico_mat = models.CharField(max_length=20, blank=True, null=True)
    cd_mnemonico_exame = models.CharField(max_length=20, blank=True, null=True)
    nm_material = models.CharField(max_length=240, blank=True, null=True)
    cd_grupo = models.CharField(max_length=10, blank=True, null=True)
    nm_condicao = models.CharField(max_length=50, blank=True, null=True)
    nm_conservante = models.CharField(max_length=50, blank=True, null=True)
    cd_laboratorio_ter = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pardini_material'


class TbPardiniRegiao(models.Model):
    cd_mnemonico_mat = models.CharField(max_length=20, blank=True, null=True)
    cd_mnemonico_exame = models.CharField(max_length=20, blank=True, null=True)
    cd_regiao_produtiva = models.CharField(max_length=3, blank=True, null=True)
    cd_unidade_produtiva = models.CharField(max_length=3, blank=True, null=True)
    cd_laboratorio_ter = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pardini_regiao'


class TbParecerista(models.Model):
    cd_parecerista = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_parecerista', primary_key=True)

    class Meta:
        managed = False
        db_table = 'tb_parecerista'


class TbPediatriaMaterial(models.Model):
    cd_faixa = models.FloatField(primary_key=True)
    nm_faixa = models.CharField(max_length=128, blank=True, null=True)
    mes_ini = models.FloatField(blank=True, null=True)
    mes_fin = models.FloatField(blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fin_vigencia = models.DateField(blank=True, null=True)
    user_ini = models.CharField(max_length=10, blank=True, null=True)
    user_fin = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pediatria_material'


class TbPedidoExame(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.IntegerField()
    nu_pedido = models.FloatField()
    dt_pedido = models.DateField()
    nm_operador = models.CharField(max_length=8, blank=True, null=True)
    cd_ocorrencia_ocupacao = models.ForeignKey(TbOcupacaoAcomodacao, models.DO_NOTHING, db_column='cd_ocorrencia_ocupacao', blank=True, null=True)
    cd_tipo_exame = models.NullBooleanField()
    cd_tipo_entrega = models.NullBooleanField()
    nu_prescricao_medica = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='nu_prescricao_medica', blank=True, null=True)
    fl_tubos = models.CharField(max_length=1, blank=True, null=True)
    fl_laminas = models.CharField(max_length=1, blank=True, null=True)
    ds_inf_adicionais = models.CharField(max_length=500, blank=True, null=True)
    ds_senha_result = models.CharField(max_length=10, blank=True, null=True)
    hr_pedido = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pedido_exame'
        unique_together = (('nu_pedido', 'dt_pedido'), ('cd_atendimento', 'cd_ocorrencia'),)


class TbPedidoExameSinval(models.Model):
    cd_atendimento = models.IntegerField(blank=True, null=True)
    cd_ocorrencia = models.IntegerField(blank=True, null=True)
    nu_pedido = models.FloatField()
    dt_pedido = models.DateField()
    nm_operador = models.CharField(max_length=8, blank=True, null=True)
    cd_ocorrencia_ocupacao = models.IntegerField(blank=True, null=True)
    cd_tipo_exame = models.NullBooleanField()
    cd_tipo_entrega = models.NullBooleanField()
    nu_prescricao_medica = models.IntegerField(blank=True, null=True)
    fl_tubos = models.CharField(max_length=1, blank=True, null=True)
    fl_laminas = models.CharField(max_length=1, blank=True, null=True)
    ds_inf_adicionais = models.CharField(max_length=500, blank=True, null=True)
    ds_senha_result = models.CharField(max_length=10, blank=True, null=True)
    hr_pedido = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pedido_exame_sinval'


class TbPedidoHistoricoBio(models.Model):
    cd_atendimento = models.IntegerField()
    cd_ocorrencia = models.IntegerField()
    nu_pedido = models.FloatField()
    cd_bioquimico = models.FloatField()
    nm_operador = models.CharField(max_length=10)
    dt_historico = models.DateField()
    dt_historico_fim = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pedido_historico_bio'
# Unable to inspect table 'tb_pedido_nota'
# The error was: 'orders'


class TbPedidoNotaDel(models.Model):
    cd_nota = models.FloatField(blank=True, null=True)
    cd_pedido = models.FloatField(blank=True, null=True)
    vl_pedido = models.FloatField(blank=True, null=True)
    fl_atendimento = models.CharField(max_length=1, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_lancamento = models.DateField(blank=True, null=True)
    nu_orcamento = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pedido_nota_del'


class TbPedidoOperacaoOrcamento(models.Model):
    cd_pedido = models.ForeignKey('TbPedidoOrcamento', models.DO_NOTHING, db_column='cd_pedido', primary_key=True)
    nu_orcamento = models.ForeignKey('TbPedidoOrcamento', models.DO_NOTHING, db_column='nu_orcamento')
    cd_operacao = models.ForeignKey(TbOperacao, models.DO_NOTHING, db_column='cd_operacao')
    mesano = models.CharField(max_length=6)
    cd_periodo = models.IntegerField()
    vl_pedido_operacao = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_util_pedido = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    vl_util_pedido_sp = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pedido_operacao_orcamento'
        unique_together = (('cd_pedido', 'nu_orcamento', 'cd_operacao', 'mesano', 'cd_periodo'),)


class TbPedidoOrcamento(models.Model):
    cd_pedido = models.ForeignKey('TmPedidoFornecedor', models.DO_NOTHING, db_column='cd_pedido', primary_key=True)
    nu_orcamento = models.IntegerField()
    fl_status = models.CharField(max_length=1)
    fl_esperando_liberacao = models.CharField(max_length=1, blank=True, null=True)
    ds_motivo = models.CharField(max_length=500, blank=True, null=True)
    nu_liberacao = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pedido_orcamento'
        unique_together = (('cd_pedido', 'nu_orcamento'),)


class TbPedidoPrazoEntrega(models.Model):
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento')
    nu_pedido = models.ForeignKey(TbPedidoExame, models.DO_NOTHING, db_column='nu_pedido')
    dt_pedido = models.ForeignKey(TbPedidoExame, models.DO_NOTHING, db_column='dt_pedido')
    dt_prazo = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_pedido_prazo_entrega'


class TbPendenciaAssinatura(models.Model):
    nu_pendencia_assinatura = models.FloatField(primary_key=True)
    nu_documento = models.ForeignKey(TbDocumentoProntuario, models.DO_NOTHING)
    nm_operador = models.CharField(max_length=30)
    ds_operador = models.CharField(max_length=100, blank=True, null=True)
    user_id = models.CharField(max_length=4000, blank=True, null=True)
    ds_motivo_assinatura = models.TextField(blank=True, null=True)
    ds_local_assinatura = models.CharField(max_length=100, blank=True, null=True)
    cd_nivel = models.IntegerField(blank=True, null=True)
    ds_status = models.CharField(max_length=80, blank=True, null=True)
    dt_regerado_pdf = models.DateField(blank=True, null=True)
    user_id_a1 = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pendencia_assinatura'


class TbPendenciaAssinaturaBkp(models.Model):
    nu_pendencia_assinatura = models.FloatField()
    nu_documento_id = models.FloatField()
    nm_operador = models.CharField(max_length=30)
    ds_operador = models.CharField(max_length=100, blank=True, null=True)
    user_id = models.CharField(max_length=4000, blank=True, null=True)
    ds_motivo_assinatura = models.TextField(blank=True, null=True)
    ds_local_assinatura = models.CharField(max_length=100, blank=True, null=True)
    cd_nivel = models.IntegerField(blank=True, null=True)
    ds_status = models.CharField(max_length=80, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pendencia_assinatura_bkp'


class TbPendenciaAssinaturaLog(models.Model):
    nu_pendencia_assinatura = models.FloatField(primary_key=True)
    cd_ordem_log = models.FloatField()
    dt_log = models.DateField()
    fl_tipo_log = models.CharField(max_length=1, blank=True, null=True)
    ds_log = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pendencia_assinatura_log'
        unique_together = (('nu_pendencia_assinatura', 'cd_ordem_log'),)


class TbPendenciaCl(models.Model):
    nu_pendencia = models.FloatField(primary_key=True)
    cd_atendimento = models.ForeignKey('TmAtendimento', models.DO_NOTHING, db_column='cd_atendimento')
    cd_convenio_pagador = models.ForeignKey(TbConvenioPagador, models.DO_NOTHING, db_column='cd_convenio_pagador')
    cd_pessoa_cobra = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa_cobra')
    dt_registro = models.DateField()
    cd_motivo_pendencia = models.ForeignKey(TbMotivoPendencia, models.DO_NOTHING, db_column='cd_motivo_pendencia')
    fl_situacao = models.CharField(max_length=1, blank=True, null=True)
    ds_observacao = models.CharField(max_length=50, blank=True, null=True)
    cd_convenio = models.IntegerField(blank=True, null=True)
    cd_ocorrencia_pedido = models.ForeignKey(TbPedidoExame, models.DO_NOTHING, db_column='cd_ocorrencia_pedido', blank=True, null=True)
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', blank=True, null=True)
    cd_usuario_digitador = models.CharField(max_length=30, blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_senha_autoriza = models.CharField(max_length=20, blank=True, null=True)
    cd_cobranca = models.ForeignKey(TbCobrancaPaciente, models.DO_NOTHING, db_column='cd_cobranca', blank=True, null=True)
    fl_status_cobranca = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pendencia_cl'


class TbPendenciaMedica(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_pendencia = models.IntegerField()
    dt_criacao = models.DateField()
    cd_operador_cria = models.CharField(max_length=10)
    observacao = models.CharField(max_length=500)
    dt_final = models.DateField(blank=True, null=True)
    cd_operador_final = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pendencia_medica'
        unique_together = (('cd_atendimento', 'cd_pendencia', 'dt_criacao', 'cd_operador_cria'),)


class TbPerdEstabOncoHist(models.Model):
    cd_setor = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor', primary_key=True)
    cd_requisicao = models.FloatField()
    cd_mat_med = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_mat_med')
    cd_agenda = models.FloatField()
    dt_agenda = models.DateField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    cd_unidade_atendimento = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_unidade_atendimento', blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    cd_paciente = models.ForeignKey(TbPaciente, models.DO_NOTHING, db_column='cd_paciente', blank=True, null=True)
    cd_pessoa_hosp = models.ForeignKey('TbPessoa', models.DO_NOTHING, db_column='cd_pessoa_hosp', blank=True, null=True)
    cd_pessoa_hap = models.FloatField(blank=True, null=True)
    nm_pessoa = models.CharField(max_length=45, blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    nome_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_estoq = models.FloatField(blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    prc_mat_med_estoq = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_perd_estab_onco_hist'
        unique_together = (('cd_setor', 'cd_requisicao', 'cd_mat_med', 'cd_agenda'),)


class TbPerfilCuidadoPaciente(models.Model):
    cd_perfil_cuidado = models.IntegerField(primary_key=True)
    nm_perfil_cuidado = models.CharField(max_length=500, blank=True, null=True)
    nu_frequencia_visita = models.IntegerField(blank=True, null=True)
    cd_unidade_frequencia_visita = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_frequencia_visita', blank=True, null=True)
    nu_margem_frequencia = models.IntegerField(blank=True, null=True)
    nu_tempo_alerta = models.IntegerField(blank=True, null=True)
    cd_unidade_tempo_alerta = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_tempo_alerta', blank=True, null=True)
    nm_observacao = models.CharField(max_length=2000, blank=True, null=True)
    fl_ativo = models.CharField(max_length=1, blank=True, null=True)
    hr_inicio_visita = models.IntegerField(blank=True, null=True)
    nu_vigencia_pos = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_perfil_cuidado_paciente'


class TbPerfilGrupoOperador(models.Model):
    cd_perfil_grupo = models.IntegerField(primary_key=True)
    nm_perfil_grupo = models.CharField(max_length=100)
    qt_tempo_alerta = models.IntegerField(blank=True, null=True)
    cd_unidade_tempo_alerta = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_tempo_alerta', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_perfil_grupo_operador'


class TbPeriodoOrcamento(models.Model):
    cd_periodo = models.IntegerField(primary_key=True)
    pc_periodo = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    dia_inicial = models.IntegerField(blank=True, null=True)
    dia_final = models.IntegerField(blank=True, null=True)
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial')

    class Meta:
        managed = False
        db_table = 'tb_periodo_orcamento'
        unique_together = (('cd_periodo', 'cd_filial'),)


class TbPeriodosOncologia(models.Model):
    cd_setor = models.CharField(primary_key=True, max_length=6)
    dt_inicial = models.DateField()
    dt_final = models.DateField()
    cd_ordem = models.IntegerField()
    cd_cotacao = models.FloatField(blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_periodos_oncologia'
        unique_together = (('cd_setor', 'dt_inicial', 'dt_final', 'cd_ordem'),)


class TbPermissaoLiberarLaudo(models.Model):
    nm_operador = models.CharField(primary_key=True, max_length=10)
    dt_inicio = models.DateField()
    nm_operador_permissao = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'tb_permissao_liberar_laudo'


class TbPermissaoOncologia(models.Model):
    cd_setor = models.CharField(max_length=6)
    cd_usuario = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_permissao_oncologia'


class TbPermissaoTrocarBio(models.Model):
    nm_operador = models.CharField(max_length=10)
    dt_inicio = models.DateField()
    nm_operador_permissao = models.CharField(max_length=10)
    fl_trocar_metodo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_permissao_trocar_bio'


class TbPessoa(models.Model):
    cd_pessoa = models.FloatField(primary_key=True)
    nu_cgc_cpf = models.FloatField(unique=True, blank=True, null=True)
    dt_nascimento_fundacao = models.DateField(blank=True, null=True)
    nm_pessoa_razao_social = models.CharField(max_length=45)
    nm_fantasia = models.CharField(max_length=20)
    nm_pai = models.CharField(max_length=45, blank=True, null=True)
    nm_mae = models.CharField(max_length=45, blank=True, null=True)
    fl_sexo = models.CharField(max_length=1, blank=True, null=True)
    nu_alvara_vig_sanitaria = models.CharField(max_length=15, blank=True, null=True)
    dt_alvara_vig_sanitaria = models.DateField(blank=True, null=True)
    nu_ident_insc_est = models.CharField(max_length=20, blank=True, null=True)
    nm_orgao_expedidor_ident = models.CharField(max_length=45, blank=True, null=True)
    cd_uf_orgao_expedidor_ident = models.ForeignKey('TbUf', models.DO_NOTHING, db_column='cd_uf_orgao_expedidor_ident', blank=True, null=True)
    fl_tipo_pessoa = models.BooleanField()
    fl_empresa = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pessoa'


class TbPessoaAux(models.Model):
    cd_pessoa = models.FloatField(primary_key=True)
    imagem = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pessoa_aux'


class TbPessoaConvenio(models.Model):
    cd_pessoa = models.ForeignKey(TbPessoa, models.DO_NOTHING, db_column='cd_pessoa', primary_key=True)
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio')
    fl_credenciado = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pessoa_convenio'
        unique_together = (('cd_pessoa', 'cd_convenio'),)


class TbPessoaTest(models.Model):
    id_pessoa = models.FloatField(blank=True, null=True)
    imagem = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pessoa_test'


class TbPghIndicadores(models.Model):
    cd_pgh_indicador = models.FloatField(primary_key=True)
    ds_pgh_indicador = models.CharField(max_length=100, blank=True, null=True)
    ds_sigla = models.CharField(max_length=20, blank=True, null=True)
    cd_tipo = models.FloatField(blank=True, null=True)
    cd_evento_monitor_hosp = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pgh_indicadores'


class TbPghIndicadoresOperUni(models.Model):
    cd_pgh_indicador = models.FloatField(primary_key=True)
    nm_operador = models.CharField(max_length=10)
    cd_unidade_atendimento = models.CharField(max_length=3)

    class Meta:
        managed = False
        db_table = 'tb_pgh_indicadores_oper_uni'
        unique_together = (('cd_pgh_indicador', 'nm_operador', 'cd_unidade_atendimento'),)


class TbPghIndicadoresRes(models.Model):
    cd_pgh_indicador = models.ForeignKey(TbPghIndicadores, models.DO_NOTHING, db_column='cd_pgh_indicador', primary_key=True)
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento')
    dt_apuracao = models.DateField()
    vl_numerador = models.FloatField(blank=True, null=True)
    vl_denominador = models.FloatField(blank=True, null=True)
    vl_multiplicador = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pgh_indicadores_res'
        unique_together = (('cd_pgh_indicador', 'cd_unidade_atendimento', 'dt_apuracao'),)


class TbPixeonComunicacao(models.Model):
    na_accessionumber = models.CharField(primary_key=True, max_length=16)
    na_unit_n3 = models.CharField(max_length=255, blank=True, null=True)
    exam_available_n3 = models.CharField(max_length=1, blank=True, null=True)
    dt_integ_n3 = models.DateField(blank=True, null=True)
    na_unit_n2 = models.CharField(max_length=255, blank=True, null=True)
    exam_available_n2 = models.CharField(max_length=1, blank=True, null=True)
    dt_integ_n2 = models.DateField(blank=True, null=True)
    na_unit_n1 = models.CharField(max_length=255, blank=True, null=True)
    exam_available_n1 = models.CharField(max_length=1, blank=True, null=True)
    dt_integ_n1 = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pixeon_comunicacao'


class TbPixeonEquipDias(models.Model):
    cd_pixeon_equipamento = models.ForeignKey('TbPixeonEquipamentos', models.DO_NOTHING, db_column='cd_pixeon_equipamento')
    cd_dia_semana = models.BooleanField()
    hr_inicio = models.IntegerField()
    hr_fim = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_pixeon_equip_dias'
        unique_together = (('cd_pixeon_equipamento', 'cd_dia_semana', 'hr_inicio'),)


class TbPixeonEquipamentos(models.Model):
    cd_pixeon_equipamento = models.FloatField(primary_key=True)
    nm_equipamento = models.CharField(max_length=60)
    nm_modelo_equipamento = models.CharField(max_length=40)
    cd_unidade_atendimento = models.ForeignKey('TbUnidadeAtendimento', models.DO_NOTHING, db_column='cd_unidade_atendimento')
    cd_uf_localidade = models.ForeignKey(TbCepLocalidade, models.DO_NOTHING, db_column='cd_uf_localidade')
    nm_localidade = models.ForeignKey(TbCepLocalidade, models.DO_NOTHING, db_column='nm_localidade')
    fl_tipo_exame = models.CharField(max_length=2)
    hr_funcionamento = models.IntegerField()
    hr_setup = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_pixeon_equipamentos'
        unique_together = (('nm_equipamento', 'cd_unidade_atendimento', 'fl_tipo_exame'),)


class TbPlanOncoHist(models.Model):
    cd_setor = models.ForeignKey(TbItemPlanejOncologia, models.DO_NOTHING, db_column='cd_setor', primary_key=True)
    dt_inicial = models.ForeignKey(TbItemPlanejOncologia, models.DO_NOTHING, db_column='dt_inicial')
    dt_final = models.ForeignKey(TbItemPlanejOncologia, models.DO_NOTHING, db_column='dt_final')
    cd_ordem = models.ForeignKey(TbItemPlanejOncologia, models.DO_NOTHING, db_column='cd_ordem')
    cd_material = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_material')
    fl_estabilidade = models.ForeignKey(TbItemPlanejOncologia, models.DO_NOTHING, db_column='fl_estabilidade')
    qt_estabilidade = models.ForeignKey(TbItemPlanejOncologia, models.DO_NOTHING, db_column='qt_estabilidade')
    dt_agenda = models.ForeignKey(TbItemPlanejOncologia, models.DO_NOTHING, db_column='dt_agenda')
    cd_unidade_atendimento = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_unidade_atendimento', blank=True, null=True)
    nm_unidade_atendimento = models.CharField(max_length=45, blank=True, null=True)
    cd_paciente = models.ForeignKey(TbPaciente, models.DO_NOTHING, db_column='cd_paciente')
    dt_planejamento = models.DateField(blank=True, null=True)
    cd_agenda = models.FloatField(blank=True, null=True)
    nm_mat_med = models.CharField(max_length=55, blank=True, null=True)
    qtd_mat_med = models.FloatField(blank=True, null=True)
    cd_unidade_dosagem = models.CharField(max_length=2, blank=True, null=True)
    cd_pessoa_hosp = models.ForeignKey(TbPessoa, models.DO_NOTHING, db_column='cd_pessoa_hosp', blank=True, null=True)
    cd_pessoa_hap = models.FloatField(blank=True, null=True)
    nm_pessoa = models.CharField(max_length=45, blank=True, null=True)
    dt_nascimento = models.DateField(blank=True, null=True)
    nu_carteira_convenio = models.CharField(max_length=20, blank=True, null=True)
    nome_mae = models.CharField(max_length=45, blank=True, null=True)
    cd_sexo = models.CharField(max_length=1, blank=True, null=True)
    cd_brasindice = models.FloatField(blank=True, null=True)
    cd_complemento_brasindice = models.CharField(max_length=4, blank=True, null=True)
    ds_produto = models.CharField(max_length=100, blank=True, null=True)
    ds_embalagem = models.CharField(max_length=60, blank=True, null=True)
    prc_mat_med = models.FloatField(blank=True, null=True)
    qtd_mat_med_estoq = models.FloatField(blank=True, null=True)
    prc_mat_med_estoq = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_plan_onco_hist'
        unique_together = (('cd_setor', 'dt_inicial', 'dt_final', 'cd_ordem', 'cd_material', 'fl_estabilidade', 'qt_estabilidade', 'dt_agenda', 'cd_paciente'),)


class TbPlanejamentoFinDet(models.Model):
    cd_filial = models.ForeignKey('TbPlanejamentoFinanceiro', models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    dt_mes = models.ForeignKey('TbPlanejamentoFinanceiro', models.DO_NOTHING, db_column='dt_mes')
    cd_operacao = models.ForeignKey(TbOperacao, models.DO_NOTHING, db_column='cd_operacao')
    vl_planejado = models.FloatField()
    vl_realizado = models.FloatField()
    cd_um = models.ForeignKey('TbUm', models.DO_NOTHING, db_column='cd_um')
    vl_fluxo = models.FloatField()
    vl_previsto = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_planejamento_fin_det'
        unique_together = (('cd_filial', 'dt_mes', 'cd_operacao'),)


class TbPlanejamentoFinanceiro(models.Model):
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    dt_mes = models.DateField()
    vl_inicial = models.FloatField()
    vl_inicial_realizado = models.FloatField()
    vl_final = models.FloatField()
    vl_final_realizado = models.FloatField()
    fl_calculo = models.NullBooleanField()
    vl_inicial_fluxo = models.FloatField()
    vl_final_fluxo = models.FloatField()
    vl_inicial_previsto = models.FloatField()
    vl_final_previsto = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_planejamento_financeiro'
        unique_together = (('cd_filial', 'dt_mes'),)


class TbPlanejamentoOncologia(models.Model):
    cd_setor = models.CharField(primary_key=True, max_length=6)
    dt_inicial = models.DateField()
    dt_final = models.DateField()
    cd_ordem = models.IntegerField()
    cd_material = models.FloatField()
    fl_estabilidade = models.CharField(max_length=1)
    qt_estabilidade = models.FloatField()
    cd_unidade = models.CharField(max_length=2, blank=True, null=True)
    qt_estab_padrao = models.FloatField(blank=True, null=True)
    qt_padrao = models.FloatField(blank=True, null=True)
    qt_dosagem = models.FloatField(blank=True, null=True)
    qt_frasco = models.FloatField(blank=True, null=True)
    qt_sobras = models.FloatField(blank=True, null=True)
    vl_unitario = models.FloatField(blank=True, null=True)
    vl_total = models.FloatField(blank=True, null=True)
    cd_cotacao = models.FloatField(blank=True, null=True)
    cd_grupo = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_planejamento_oncologia'
        unique_together = (('cd_setor', 'dt_inicial', 'dt_final', 'cd_ordem', 'cd_material', 'fl_estabilidade', 'qt_estabilidade'),)


class TbPlanilhaAtuDataCheck(models.Model):
    codigo_procedimento = models.CharField(max_length=3000, blank=True, null=True)
    codigo_metodo = models.CharField(max_length=3000, blank=True, null=True)
    alterar_descricao_metodo = models.CharField(max_length=3000, blank=True, null=True)
    nome_item_resultado = models.CharField(max_length=3000, blank=True, null=True)
    nome_unidade_medida = models.CharField(max_length=3000, blank=True, null=True)
    alteracao_qtd_casas_decimais = models.CharField(max_length=3000, blank=True, null=True)
    alteracao_valor_inter_inicial = models.CharField(max_length=3000, blank=True, null=True)
    alteracao_valor_inter_fim = models.CharField(max_length=3000, blank=True, null=True)
    alteracao_valor_referencia = models.CharField(max_length=3000, blank=True, null=True)
    atualizado_valor = models.CharField(max_length=1, blank=True, null=True)
    atualizado_metodo = models.CharField(max_length=1, blank=True, null=True)
    atualizado_qntd = models.CharField(max_length=1, blank=True, null=True)
    versao = models.CharField(max_length=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_planilha_atu_data_check'


class TbPlanoConvenio(models.Model):
    cd_convenio = models.ForeignKey('TmConvenio', models.DO_NOTHING, db_column='cd_convenio', primary_key=True)
    cd_plano_convenio = models.IntegerField()
    ds_plano_convenio = models.CharField(max_length=45)
    fl_tipo_classe = models.CharField(max_length=1, blank=True, null=True)
    dt_ini_vigencia = models.DateField(blank=True, null=True)
    dt_fin_vigencia = models.DateField(blank=True, null=True)
    fl_custo_operacional = models.CharField(max_length=1, blank=True, null=True)
    fl_hapvida_sem_direito = models.CharField(max_length=1, blank=True, null=True)
    fl_hapvida_sem_direito_senha = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_plano_convenio'
        unique_together = (('cd_convenio', 'cd_plano_convenio'),)


class TbPlanoTratAcomp(models.Model):
    cd_atendimento = models.ForeignKey('TbPlanoTratUsoOcorrencia', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPlanoTratUsoOcorrencia', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem = models.IntegerField()
    cd_plano_trat_ocorrencia = models.ForeignKey('TbPlanoTratUsoOcorrencia', models.DO_NOTHING, db_column='cd_plano_trat_ocorrencia')
    cd_cid10 = models.CharField(max_length=4, blank=True, null=True)
    ds_motivo_internacao = models.CharField(max_length=1000, blank=True, null=True)
    ds_antecedentes = models.CharField(max_length=1000, blank=True, null=True)
    cd_profissional_iniciou = models.CharField(max_length=100, blank=True, null=True)
    hr_inicio = models.IntegerField(blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    dt_transacao_inicio = models.DateField(blank=True, null=True)
    hr_fim = models.IntegerField(blank=True, null=True)
    dt_fim = models.DateField(blank=True, null=True)
    dt_transacao_fim = models.DateField(blank=True, null=True)
    cd_profissional_fim = models.CharField(max_length=100, blank=True, null=True)
    fl_suspenso = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_plano_trat_acomp'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem'),)


class TbPlanoTratAcompItem(models.Model):
    cd_atendimento = models.ForeignKey(TbPlanoTratAcomp, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey(TbPlanoTratAcomp, models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem = models.ForeignKey(TbPlanoTratAcomp, models.DO_NOTHING, db_column='cd_ordem')
    cd_ordem_trat_item = models.IntegerField()
    hr_inicio = models.IntegerField(blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    dt_transacao_inicio = models.DateField(blank=True, null=True)
    cd_profissional_iniciou = models.CharField(max_length=100, blank=True, null=True)
    ds_problema_ativo = models.CharField(max_length=3000, blank=True, null=True)
    ds_acao_implementada = models.CharField(max_length=3000, blank=True, null=True)
    ds_resultado_esperado = models.CharField(max_length=3000, blank=True, null=True)
    hr_avaliacao_resultado = models.IntegerField(blank=True, null=True)
    dt_avaliacao_resultado = models.DateField(blank=True, null=True)
    ds_avaliacao_resultado = models.CharField(max_length=3000, blank=True, null=True)
    ds_justificativa_avaliacao_res = models.CharField(max_length=3000, blank=True, null=True)
    cd_profissional_fim = models.CharField(max_length=100, blank=True, null=True)
    dt_transacao_fim = models.DateField(blank=True, null=True)
    fl_suspenso = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_plano_trat_acomp_item'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem', 'cd_ordem_trat_item'),)


class TbPlanoTratUsoOcorrencia(models.Model):
    cd_atendimento = models.ForeignKey('TbPlanoTratamentoUso', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPlanoTratamentoUso', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem = models.IntegerField()
    cd_modelo = models.ForeignKey(TbModeloPlanoTratamento, models.DO_NOTHING, db_column='cd_modelo', blank=True, null=True)
    fl_tipo_modelo = models.ForeignKey('TbTipoModelo', models.DO_NOTHING, db_column='fl_tipo_modelo', blank=True, null=True)
    cd_perfil_cuidado_paciente = models.ForeignKey(TbPerfilCuidadoPaciente, models.DO_NOTHING, db_column='cd_perfil_cuidado_paciente', blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    hr_inicio_fechado = models.IntegerField(blank=True, null=True)
    cd_setor_alocacao_paciente = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_setor_alocacao_paciente', blank=True, null=True)
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional', blank=True, null=True)
    dt_confirmacao_profissional = models.DateField(blank=True, null=True)
    dt_termino = models.DateField(blank=True, null=True)
    fl_gerado_automatico = models.CharField(max_length=1, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    nu_dias_plano_terap = models.IntegerField(blank=True, null=True)
    fl_mews_pews = models.CharField(max_length=1, blank=True, null=True)
    fl_class_pos_cirurgica = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_plano_trat_uso_ocorrencia'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem'),)


class TbPlanoTratamentoUso(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_ocorrencia_plano = models.IntegerField()
    ds_tratamento = models.CharField(max_length=2000)
    nu_tempo_estimado = models.IntegerField()
    fl_unidade_tempo = models.CharField(max_length=1, blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    dt_fim = models.DateField(blank=True, null=True)
    fl_local_tratamento = models.CharField(max_length=1, blank=True, null=True)
    cd_diagnostico = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cd_diagnostico', blank=True, null=True)
    fl_requer_quitacao = models.CharField(max_length=1)
    ds_observacao = models.CharField(max_length=240, blank=True, null=True)
    cd_modelo = models.ForeignKey(TbModeloPlanoTratamento, models.DO_NOTHING, db_column='cd_modelo', blank=True, null=True)
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional', blank=True, null=True)
    dt_aceitacao_plano = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_plano_tratamento_uso'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano'),)


class TbPlantaoMedico(models.Model):
    cd_medico = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    cd_dia_semana = models.ForeignKey(TbDiaSemana, models.DO_NOTHING, db_column='cd_dia_semana')
    hr_inicial = models.IntegerField()
    hr_final = models.IntegerField()
    nu_atendimentos_dia = models.IntegerField(blank=True, null=True)
    dt_ano = models.ForeignKey('TbSemanaAno', models.DO_NOTHING, db_column='dt_ano')
    cd_semana = models.ForeignKey('TbSemanaAno', models.DO_NOTHING, db_column='cd_semana')

    class Meta:
        managed = False
        db_table = 'tb_plantao_medico'
        unique_together = (('cd_medico', 'dt_ano', 'cd_semana', 'cd_dia_semana', 'hr_inicial', 'hr_final'),)


class TbPlantoesMedico(models.Model):
    cd_medico = models.ForeignKey(TbAnoMesPlantao, models.DO_NOTHING, db_column='cd_medico', primary_key=True)
    ano_referencia = models.ForeignKey(TbAnoMesPlantao, models.DO_NOTHING, db_column='ano_referencia')
    mes_referencia = models.ForeignKey(TbAnoMesPlantao, models.DO_NOTHING, db_column='mes_referencia')
    nu_plantoes = models.IntegerField()
    dt_inicio_plantao = models.DateField()
    hr_inicio_plantao = models.IntegerField()
    dt_fim_plantao = models.DateField()
    hr_fim_plantao = models.IntegerField()
    dt_processamento = models.DateField(blank=True, null=True)
    cd_usuario = models.CharField(max_length=30, blank=True, null=True)
    terminal = models.CharField(max_length=30, blank=True, null=True)
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial', blank=True, null=True)
    cd_grupo_procedimento = models.ForeignKey(TbGrupoProduto, models.DO_NOTHING, db_column='cd_grupo_procedimento', blank=True, null=True)
    cd_empresa = models.FloatField(blank=True, null=True)
    cd_tipo_regra = models.CharField(max_length=2, blank=True, null=True)
    tempo = models.FloatField(blank=True, null=True)
    tempo_considerado = models.FloatField(blank=True, null=True)
    valor = models.FloatField(blank=True, null=True)
    fl_sobre_aviso = models.CharField(max_length=1, blank=True, null=True)
    dt_aprovacao = models.DateField(blank=True, null=True)
    cd_aprovador = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_plantoes_medico'
        unique_together = (('cd_medico', 'ano_referencia', 'mes_referencia', 'nu_plantoes'),)


class TbPontoCirParamAtProc(models.Model):
    id_ponto_cir_param_at_proc = models.IntegerField(primary_key=True)
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial')
    cd_tipo_ato_profissional = models.ForeignKey('TbTipoAtoProfissional', models.DO_NOTHING, db_column='cd_tipo_ato_profissional')
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')

    class Meta:
        managed = False
        db_table = 'tb_ponto_cir_param_at_proc'
        unique_together = (('cd_filial', 'cd_tipo_ato_profissional', 'cd_procedimento'),)


class TbPontoCirParamExigirAto(models.Model):
    id_ponto_cir_param_exigir_ato = models.IntegerField(primary_key=True)
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial')
    cd_tipo_ato_profissional = models.ForeignKey('TbTipoAtoProfissional', models.DO_NOTHING, db_column='cd_tipo_ato_profissional')
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento')

    class Meta:
        managed = False
        db_table = 'tb_ponto_cir_param_exigir_ato'
        unique_together = (('cd_filial', 'cd_tipo_ato_profissional', 'cd_procedimento'),)


class TbPontoCirurgAtoDinamico(models.Model):
    cd_filial = models.ForeignKey('TbPontoCirurgiaParametros', models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    cd_grupo_ato = models.ForeignKey('TbPontoCirurgParamGrupos', models.DO_NOTHING, db_column='cd_grupo_ato')
    fl_insere_dinamico = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ponto_cirurg_ato_dinamico'
        unique_together = (('cd_filial', 'cd_grupo_ato'),)


class TbPontoCirurgParamAtoProf(models.Model):
    cd_filial = models.ForeignKey('TbPontoCirurgiaParametros', models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    cd_tipo_ato_profissional = models.ForeignKey('TbTipoAtoProfissional', models.DO_NOTHING, db_column='cd_tipo_ato_profissional')
    fl_participa_cirurgia = models.CharField(max_length=1, blank=True, null=True)
    cd_grupo_ato_profissional = models.ForeignKey('TbPontoCirurgParamGrupos', models.DO_NOTHING, db_column='cd_grupo_ato_profissional', blank=True, null=True)
    fl_verificar_lista_branca = models.CharField(max_length=1, blank=True, null=True)
    fl_verificar_lista_negra = models.CharField(max_length=1, blank=True, null=True)
    fl_obrigar_conselho = models.CharField(max_length=1, blank=True, null=True)
    fl_visualizar_materiais_kit = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem = models.IntegerField(blank=True, null=True)
    fl_msg_alerta_faturamento = models.CharField(max_length=1, blank=True, null=True)
    fl_msg_alerta_docs_pep = models.CharField(max_length=1, blank=True, null=True)
    fl_finalizar_cirurgia_sozinho = models.CharField(max_length=1, blank=True, null=True)
    fl_exigir_presenca = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ponto_cirurg_param_ato_prof'
        unique_together = (('cd_filial', 'cd_tipo_ato_profissional'),)


class TbPontoCirurgParamGrupos(models.Model):
    cd_grupo_ato = models.IntegerField(primary_key=True)
    nm_grupo_ato = models.CharField(unique=True, max_length=255)
    fl_can_delete = models.CharField(max_length=1)
    cd_ato_prof_hapvida = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ponto_cirurg_param_grupos'


class TbPontoCirurgia(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_ocorrencia = models.IntegerField()
    id_kit = models.IntegerField()
    cd_sala_cirurgia = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_sala_cirurgia')
    dt_transacao = models.DateField()
    fl_status = models.IntegerField()
    nu_evolucao = models.ForeignKey(TbEvolucao, models.DO_NOTHING, db_column='nu_evolucao', blank=True, null=True)
    cd_atendimento_antigo = models.IntegerField(blank=True, null=True)
    dt_finalizacao = models.DateField(blank=True, null=True)
    cd_pessoa_final_cirurgia = models.FloatField(blank=True, null=True)
    ds_justificativa_cancel = models.CharField(max_length=4000, blank=True, null=True)
    cd_sala_cirurgia_antiga = models.CharField(max_length=6, blank=True, null=True)
    cd_operador_mudou_sala = models.CharField(max_length=10, blank=True, null=True)
    dt_mudanca_sala = models.DateField(blank=True, null=True)
    cd_motivo_canc_cirurgia = models.ForeignKey(TbMotivoCirurgia, models.DO_NOTHING, db_column='cd_motivo_canc_cirurgia', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ponto_cirurgia'
        unique_together = (('cd_atendimento', 'cd_ocorrencia'),)


class TbPontoCirurgiaBoletimCc(models.Model):
    id_ponto_cirurgia_boletim_cc = models.IntegerField(primary_key=True)
    cd_atendimento = models.ForeignKey(TbPontoCirurgia, models.DO_NOTHING, db_column='cd_atendimento')
    cd_ocorrencia = models.ForeignKey(TbPontoCirurgia, models.DO_NOTHING, db_column='cd_ocorrencia')
    nu_evolucao = models.ForeignKey(TbEvolucao, models.DO_NOTHING, db_column='nu_evolucao')

    class Meta:
        managed = False
        db_table = 'tb_ponto_cirurgia_boletim_cc'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'nu_evolucao'),)


class TbPontoCirurgiaCadRapido(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_ocorrencia = models.IntegerField()
    cd_pessoa_hospital = models.FloatField()
    cd_pessoa_hapvida = models.FloatField()
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField()
    cd_equipe = models.IntegerField(blank=True, null=True)
    cd_enfermeiro_hospital = models.FloatField(blank=True, null=True)
    cd_enfermeiro_hapvida = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ponto_cirurgia_cad_rapido'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_pessoa_hospital', 'cd_pessoa_hapvida'),)


class TbPontoCirurgiaEquipes(models.Model):
    cd_atendimento = models.ForeignKey(TbPontoCirurgia, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey(TbPontoCirurgia, models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_equipe = models.IntegerField()
    descr_equipe = models.CharField(max_length=255)
    cd_pessoa_aut_sem_guia = models.FloatField(blank=True, null=True)
    dt_autorizacao_sem_guia = models.DateField(blank=True, null=True)
    fl_status = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tb_ponto_cirurgia_equipes'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_equipe'),)


class TbPontoCirurgiaErrorLog(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    id_kit = models.IntegerField()
    cd_sala_cirurgica = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_sala_cirurgica')
    dt_log = models.DateField()
    descr_error = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ponto_cirurgia_error_log'
        unique_together = (('cd_atendimento', 'id_kit', 'cd_sala_cirurgica', 'dt_log'),)


class TbPontoCirurgiaJustific(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_ocorrencia = models.IntegerField()
    fl_realizou_cirurgia = models.CharField(max_length=1)
    cd_motivo_canc_cirurgia = models.IntegerField(blank=True, null=True)
    ds_justificativa = models.CharField(max_length=4000, blank=True, null=True)
    cd_operador = models.CharField(max_length=10, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ponto_cirurgia_justific'
        unique_together = (('cd_atendimento', 'cd_ocorrencia'),)


class TbPontoCirurgiaParametros(models.Model):
    cd_filial = models.ForeignKey(TbFilial, models.DO_NOTHING, db_column='cd_filial', primary_key=True)
    qt_tempo_bloqueio_ponto_ent = models.IntegerField(blank=True, null=True)
    tp_tempo_bloqueio_ponto_ent = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='tp_tempo_bloqueio_ponto_ent', blank=True, null=True)
    qt_tempo_tornar_pendencia = models.IntegerField(blank=True, null=True)
    tp_tempo_tornar_pendencia = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='tp_tempo_tornar_pendencia', blank=True, null=True)
    fl_obriga_boletim = models.FloatField(blank=True, null=True)
    cd_setor_padrao = models.CharField(max_length=6, blank=True, null=True)
    fl_verificar_listas_filial = models.CharField(max_length=1, blank=True, null=True)
    fl_nova_dispensacao_kit = models.CharField(max_length=1, blank=True, null=True)
    fl_abrir_tela_biometria = models.CharField(max_length=1, blank=True, null=True)
    fl_verificar_auxiliares = models.CharField(max_length=1, blank=True, null=True)
    fl_desabilitar_biometria = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ponto_cirurgia_parametros'


class TbPontoCirurgiaProcedimento(models.Model):
    cd_atendimento = models.IntegerField()
    cd_ocorrencia = models.IntegerField()
    cd_procedimento = models.CharField(max_length=8)
    nm_procedimento = models.CharField(max_length=240, blank=True, null=True)
    nu_guia = models.CharField(max_length=15, blank=True, null=True)
    dt_procedimento_realizado = models.DateField(blank=True, null=True)
    fl_realizado = models.CharField(max_length=1)
    fl_mudou_cirurgia = models.CharField(max_length=1)
    cd_equipe = models.IntegerField()
    cd_ordem_proc_real = models.IntegerField(blank=True, null=True)
    dt_autorizacao_guia = models.DateField(blank=True, null=True)
    cd_ordem = models.IntegerField()
    cd_ocorrencia_proc_real = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ponto_cirurgia_procedimento'


class TbPontoCirurgiaRegMedico(models.Model):
    cd_atendimento = models.ForeignKey(TbPontoCirurgiaEquipes, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey(TbPontoCirurgiaEquipes, models.DO_NOTHING, db_column='cd_ocorrencia')
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional', blank=True, null=True)
    cd_tipo_ato_profissional = models.ForeignKey('TbTipoAtoProfissional', models.DO_NOTHING, db_column='cd_tipo_ato_profissional')
    dt_entrada = models.DateField(blank=True, null=True)
    hr_entrada = models.IntegerField(blank=True, null=True)
    dt_saida = models.DateField(blank=True, null=True)
    hr_saida = models.IntegerField(blank=True, null=True)
    cd_equipe = models.ForeignKey(TbPontoCirurgiaEquipes, models.DO_NOTHING, db_column='cd_equipe')
    cd_ordem = models.IntegerField(blank=True, null=True)
    fl_adicionado_dinamico = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ponto_cirurgia_reg_medico'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_equipe', 'cd_tipo_ato_profissional'),)


class TbPontoEvolucao(models.Model):
    cd_atendimento = models.ForeignKey(TbPontoCirurgia, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia = models.ForeignKey(TbPontoCirurgia, models.DO_NOTHING, db_column='cd_ocorrencia')
    nu_evolucao = models.ForeignKey(TbEvolucao, models.DO_NOTHING, db_column='nu_evolucao')

    class Meta:
        managed = False
        db_table = 'tb_ponto_evolucao'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'nu_evolucao'),)


class TbPontoOperadorAtendSa(models.Model):
    cd_ponto_atendimento = models.IntegerField(primary_key=True)
    cd_local_atendimento = models.IntegerField()
    cd_operador = models.CharField(max_length=20)
    ds_ponto_atendimento = models.CharField(max_length=40)
    fl_tipo = models.NullBooleanField()
    fl_imp_ativa = models.NullBooleanField()
    nm_maquina = models.CharField(max_length=40, blank=True, null=True)
    fl_imp_digital = models.CharField(max_length=1, blank=True, null=True)
    fl_imagem_foto = models.CharField(max_length=1, blank=True, null=True)
    cd_grupo_consultorio = models.IntegerField(blank=True, null=True)
    fl_status = models.FloatField(blank=True, null=True)
    ult_operador = models.CharField(max_length=20, blank=True, null=True)
    fl_novosam = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_ponto_operador_atend_sa'
        unique_together = (('cd_ponto_atendimento', 'cd_local_atendimento'),)


class TbPorteAnestesia(models.Model):
    cd_porte_anestesia = models.BooleanField(primary_key=True)
    qt_ch = models.FloatField()
    cd_porte_cbhpm = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_porte_anestesia'


class TbPorteCirurgia(models.Model):
    cd_porte_cirurgia = models.IntegerField(primary_key=True)
    nm_porte_cirurgia = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_porte_cirurgia'


class TbPorteHonorarioCbhpm(models.Model):
    cd_porte = models.CharField(primary_key=True, max_length=3)
    vl_porte = models.DecimalField(max_digits=8, decimal_places=2)
    dt_vigencia = models.DateField()
    cd_tabela_procedimento = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_porte_honorario_cbhpm'
        unique_together = (('cd_porte', 'vl_porte', 'dt_vigencia'),)


class TbPosicaoCirurgica(models.Model):
    id_posicao_cirurgica = models.IntegerField(primary_key=True)
    ds_posicao_cirurgica = models.CharField(unique=True, max_length=255)

    class Meta:
        managed = False
        db_table = 'tb_posicao_cirurgica'


class TbPosicaoEstoqueTmp(models.Model):
    cd_usuario = models.CharField(primary_key=True, max_length=10)
    cd_material = models.FloatField()
    cd_setor = models.CharField(max_length=6)
    cd_filial = models.CharField(max_length=3, blank=True, null=True)
    qt_material_periodo = models.FloatField(blank=True, null=True)
    qt_material_30_dias = models.FloatField(blank=True, null=True)
    dt_inicial = models.DateField(blank=True, null=True)
    dt_final = models.DateField(blank=True, null=True)
    vl_material_periodo = models.FloatField(blank=True, null=True)
    vl_material_30_dias = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_posicao_estoque_tmp'
        unique_together = (('cd_usuario', 'cd_material', 'cd_setor'),)


class TbPostoClinica(models.Model):
    cd_posto = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_posto', primary_key=True)
    cd_clinica = models.ForeignKey(TbClinica, models.DO_NOTHING, db_column='cd_clinica')

    class Meta:
        managed = False
        db_table = 'tb_posto_clinica'
        unique_together = (('cd_posto', 'cd_clinica'),)


class TbPraca(models.Model):
    cd_praca = models.FloatField(primary_key=True)
    ds_praca = models.CharField(max_length=150)

    class Meta:
        managed = False
        db_table = 'tb_praca'


class TbPracaUnidade(models.Model):
    cd_praca = models.ForeignKey(TbPraca, models.DO_NOTHING, db_column='cd_praca')
    cd_unidade_atendimento = models.CharField(unique=True, max_length=3)

    class Meta:
        managed = False
        db_table = 'tb_praca_unidade'


class TbPrazoExame(models.Model):
    cd_atendimento = models.FloatField(primary_key=True)
    cd_ocorrencia = models.FloatField()
    cd_ordem = models.FloatField()
    cd_procedimento = models.CharField(max_length=8)
    dt_inicio = models.DateField()
    nu_dias = models.FloatField(blank=True, null=True)
    nu_horas = models.FloatField(blank=True, null=True)
    dt_prazo = models.DateField()
    fl_origem = models.CharField(max_length=1, blank=True, null=True)
    dt_processamento = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_prazo_exame'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem'),)


class TbPrazoExamePercentual(models.Model):
    cd_atendimento = models.FloatField(primary_key=True)
    cd_ocorrencia = models.FloatField()
    cd_ordem = models.FloatField()
    cd_procedimento = models.CharField(max_length=8)
    dt_prazo_50 = models.DateField(blank=True, null=True)
    dt_prazo_75 = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prazo_exame_percentual'
        unique_together = (('cd_atendimento', 'cd_ocorrencia', 'cd_ordem'),)


class TbPrazoNotas(models.Model):
    cd_filial = models.CharField(primary_key=True, max_length=20)
    cd_setor = models.CharField(max_length=20)
    nu_dias = models.FloatField()
    dt_cadastro = models.DateField()
    cd_usuario = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tb_prazo_notas'
        unique_together = (('cd_filial', 'cd_setor'),)


class TbPreCadUsuario(models.Model):
    cd_pessoa_pes = models.FloatField(blank=True, null=True)
    nu_cgc_cpf_pes = models.FloatField(blank=True, null=True)
    nm_pessoa_razao_social_pes = models.CharField(max_length=45, blank=True, null=True)
    nm_fantasia_pes = models.CharField(max_length=20, blank=True, null=True)
    fl_tipo_pessoa_pes = models.NullBooleanField()
    nm_operador_ope = models.CharField(max_length=10, blank=True, null=True)
    cd_menu_ope = models.CharField(max_length=5, blank=True, null=True)
    cd_classe_ope = models.NullBooleanField()
    cd_nivel_tela_ope = models.NullBooleanField()
    cd_senha_ope = models.CharField(max_length=6, blank=True, null=True)
    fl_status_ope = models.NullBooleanField()
    cd_setor_ope = models.CharField(max_length=6, blank=True, null=True)
    ds_operador_ope = models.CharField(max_length=45, blank=True, null=True)
    cd_unidade_atendimento_ope = models.CharField(max_length=3, blank=True, null=True)
    cod_grupo_ope = models.IntegerField(blank=True, null=True)
    cd_pessoa_ope = models.FloatField(blank=True, null=True)
    fl_autoriza_digital_ope = models.CharField(max_length=1, blank=True, null=True)
    fl_multiempresa_ope = models.CharField(max_length=1, blank=True, null=True)
    nu_conexao_ope = models.FloatField(blank=True, null=True)
    email_ope = models.CharField(max_length=100, blank=True, null=True)
    cod_usuario_usu = models.CharField(max_length=10, blank=True, null=True)
    cod_grupo_usu = models.IntegerField(blank=True, null=True)
    nm_operador_acesso_emp = models.CharField(max_length=8, blank=True, null=True)
    cd_unidade_atend_acesso_emp = models.CharField(max_length=3, blank=True, null=True)
    cd_filial_emp = models.CharField(max_length=3, blank=True, null=True)
    cd_terminal_emp = models.CharField(max_length=30, blank=True, null=True)
    dt_ultimo_login_emp = models.DateField(blank=True, null=True)
    cd_profissional_pro = models.IntegerField(blank=True, null=True)
    cd_crm_profissional_pro = models.CharField(max_length=8, blank=True, null=True)
    fl_auditor_sus_pro = models.CharField(max_length=1, blank=True, null=True)
    fl_interno_pro = models.CharField(max_length=1, blank=True, null=True)
    f_ativo_pro = models.CharField(max_length=1, blank=True, null=True)
    cd_uf_conselho_pro = models.CharField(max_length=2, blank=True, null=True)
    cd_conselho_pro = models.CharField(max_length=10, blank=True, null=True)
    fl_status_profissional_pro = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_esp = models.IntegerField(blank=True, null=True)
    cd_especialidade_esp = models.IntegerField(blank=True, null=True)
    fl_esp_principal_esp = models.CharField(max_length=1, blank=True, null=True)
    fl_status = models.CharField(max_length=1, blank=True, null=True)
    dt_cadastro = models.DateField(blank=True, null=True)
    hr_cadastro = models.FloatField(blank=True, null=True)
    nm_usuario = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_pre_cad_usuario'


class TbPreCadUsuarioPapelOpe(models.Model):
    cd_papel = models.IntegerField()
    nm_operador = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'tb_pre_cad_usuario_papel_ope'


class TbPrecoExameLaboratorio(models.Model):
    cd_laboratorio_ter = models.ForeignKey(TbLaboratorioTerceirizado, models.DO_NOTHING, db_column='cd_laboratorio_ter')
    ds_tabela = models.CharField(max_length=50, blank=True, null=True)
    dt_inicio = models.DateField(blank=True, null=True)
    dt_fim = models.DateField(blank=True, null=True)
    cd_mnemonico_mat = models.CharField(max_length=20, blank=True, null=True)
    cd_mnemonico_exame = models.CharField(max_length=20, blank=True, null=True)
    vl_exame = models.FloatField(blank=True, null=True)
    nm_exame = models.CharField(max_length=80, blank=True, null=True)
    ds_situacao = models.CharField(max_length=20, blank=True, null=True)
    cd_user = models.CharField(max_length=30)
    dt_importacao = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_preco_exame_laboratorio'


class TbPrecoMatera(models.Model):
    id_cotacao = models.FloatField(primary_key=True)
    cd_filial = models.CharField(max_length=3)
    cd_material = models.FloatField()
    dt_cotacao = models.DateField()
    vlr_unit = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tb_preco_matera'
        unique_together = (('id_cotacao', 'cd_filial'),)


class TbPrenotifCritNniss(models.Model):
    cd_prenotif_crit = models.FloatField(primary_key=True)
    cd_atendimento = models.ForeignKey('TbPrenotifSitiosNniss', models.DO_NOTHING, db_column='cd_atendimento')
    cd_ocorrencia_plano = models.ForeignKey('TbPrenotifSitiosNniss', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_prenotif_sitio = models.ForeignKey('TbPrenotifSitiosNniss', models.DO_NOTHING, db_column='cd_prenotif_sitio')
    cd_criterio_inicial = models.ForeignKey(TbCriteriosIniciaisNniss, models.DO_NOTHING, db_column='cd_criterio_inicial')
    cd_condicao_sitio = models.ForeignKey(TbCondicoesSitiosNniss, models.DO_NOTHING, db_column='cd_condicao_sitio')
    cd_criterio_condicao = models.ForeignKey(TbCriteriosCondicoesNniss, models.DO_NOTHING, db_column='cd_criterio_condicao')
    cd_criterio = models.ForeignKey(TbCriteriosNniss, models.DO_NOTHING, db_column='cd_criterio')
    fl_checado = models.CharField(max_length=1)
    fl_exame_colhido = models.CharField(max_length=1, blank=True, null=True)
    fl_exame_positivo = models.CharField(max_length=1, blank=True, null=True)
    cd_operador = models.CharField(max_length=45)
    dt_transacao = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_prenotif_crit_nniss'


class TbPrenotifSitiosNniss(models.Model):
    cd_atendimento = models.FloatField(primary_key=True)
    cd_ocorrencia_plano = models.FloatField()
    cd_prenotif_sitio = models.FloatField()
    cd_prenotificacao = models.ForeignKey('TbPrenotificacaoCcih', models.DO_NOTHING, db_column='cd_prenotificacao')
    cd_sitio_p = models.ForeignKey('TbSitiosPrincipalEspecifico', models.DO_NOTHING, db_column='cd_sitio_p')
    cd_sitio_e = models.ForeignKey('TbSitiosPrincipalEspecifico', models.DO_NOTHING, db_column='cd_sitio_e')
    cd_operador = models.CharField(max_length=45)
    dt_transacao = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_prenotif_sitios_nniss'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_prenotif_sitio'),)


class TbPrenotificacaoCcih(models.Model):
    cd_prenotificacao = models.FloatField(primary_key=True)
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional')
    cd_atendimento = models.IntegerField()
    cd_ocorrencia_plano = models.IntegerField()
    cd_solicitacao = models.ForeignKey(TbMedAntimicrobiano, models.DO_NOTHING, db_column='cd_solicitacao')
    cd_posto = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_posto')
    cd_sitio_principal = models.ForeignKey('TbSitiosNniss', models.DO_NOTHING, db_column='cd_sitio_principal', blank=True, null=True)
    cd_sitio_especifico = models.ForeignKey('TbSitiosNniss', models.DO_NOTHING, db_column='cd_sitio_especifico', blank=True, null=True)
    dt_infeccao = models.DateField(blank=True, null=True)
    tp_infeccao = models.CharField(max_length=1, blank=True, null=True)
    dt_transacao = models.DateField()

    class Meta:
        managed = False
        db_table = 'tb_prenotificacao_ccih'


class TbPrescDietaModelo(models.Model):
    cd_plano_modelo = models.ForeignKey(TbModeloPlanoTratamento, models.DO_NOTHING, db_column='cd_plano_modelo', primary_key=True)
    cd_tipo_dieta = models.ForeignKey('TbTipoDieta', models.DO_NOTHING, db_column='cd_tipo_dieta')
    nu_frequencia = models.IntegerField()
    qt_dieta = models.IntegerField(blank=True, null=True)
    ds_observacao = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_presc_dieta_modelo'
        unique_together = (('cd_plano_modelo', 'cd_tipo_dieta'),)


class TbPrescMedicaHvAgd(models.Model):
    cd_agenda = models.IntegerField(primary_key=True)
    cd_modelo = models.IntegerField()
    cd_ordem_prescricao = models.IntegerField(blank=True, null=True)
    cd_ordem_hv = models.IntegerField()
    vig = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    volume_total = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    fl_frequencia_uso = models.CharField(max_length=3, blank=True, null=True)
    qt_gotejamento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.IntegerField(blank=True, null=True)
    fl_bomba_infusao = models.CharField(max_length=1, blank=True, null=True)
    qt_soro_s_glicose = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_soro_c_glicose = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_prescreve = models.IntegerField(blank=True, null=True)
    cd_profissional_valida = models.IntegerField(blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.IntegerField(blank=True, null=True)
    cd_tipo_acesso_infusao = models.CharField(max_length=1, blank=True, null=True)
    cd_tipo_fase = models.CharField(max_length=1, blank=True, null=True)
    dt_hr_suspensao = models.DateField(blank=True, null=True)
    qt_tempo_fase_rapida = models.IntegerField(blank=True, null=True)
    cd_unid_tempo_fase_rapida = models.CharField(max_length=2, blank=True, null=True)
    fl_necessario = models.CharField(max_length=1, blank=True, null=True)
    fl_acm = models.CharField(max_length=1, blank=True, null=True)
    dt_libera_sn = models.DateField(blank=True, null=True)
    hr_libera_sn = models.IntegerField(blank=True, null=True)
    cd_profissional_libera_sn = models.IntegerField(blank=True, null=True)
    cd_tipo_hv = models.CharField(max_length=1, blank=True, null=True)
    qt_quota = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_presc_medica_hv_agd'
        unique_together = (('cd_agenda', 'cd_modelo', 'cd_ordem_hv'),)


class TbPrescMedicaItemNaopadrao(models.Model):
    cd_atendimento = models.ForeignKey('TbPrescMedicaNaoPadrao', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPrescMedicaNaoPadrao', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbPrescMedicaNaoPadrao', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_ficha = models.ForeignKey('TbPrescMedicaNaoPadrao', models.DO_NOTHING, db_column='cd_ordem_ficha')
    cd_ordem_item_ficha = models.IntegerField()
    nu_produto = models.ForeignKey('TbProduto', models.DO_NOTHING, db_column='nu_produto')
    qt_dosagem = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_unidade_usual = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_usual', blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    fl_frequencia_uso = models.CharField(max_length=3, blank=True, null=True)
    cd_tipo_acesso = models.ForeignKey('TbTipoAcesso', models.DO_NOTHING, db_column='cd_tipo_acesso', blank=True, null=True)
    qt_tempo_uso = models.IntegerField()
    cd_unidade_tempo = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_tempo', blank=True, null=True)
    ds_justificativa = models.CharField(max_length=2000, blank=True, null=True)
    cd_profissional_valida = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_valida', blank=True, null=True)
    dt_hr_validacao = models.DateField(blank=True, null=True)
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)
    dt_hr_cancelamento = models.DateField(blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_operador = models.CharField(max_length=20, blank=True, null=True)
    fl_liberado_farmacia = models.CharField(max_length=1, blank=True, null=True)
    cd_usuario_liberou = models.CharField(max_length=10, blank=True, null=True)
    dt_liberacao = models.DateField(blank=True, null=True)
    cd_ordem_prescricao_plano = models.IntegerField(blank=True, null=True)
    cd_mat_med = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_presc_medica_item_naopadrao'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_ficha', 'cd_ordem_item_ficha'),)


class TbPrescMedicaNaoPadrao(models.Model):
    cd_atendimento = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_ficha = models.IntegerField()
    nu_ficha_nao_padrao = models.IntegerField()
    dt_ficha_nao_padrao = models.DateField()
    hr_ficha_nao_padrao = models.IntegerField()
    cd_diagnostico = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cd_diagnostico', blank=True, null=True)
    nm_complemento_diagnostico = models.CharField(max_length=2000, blank=True, null=True)
    cd_profissional_cria_ficha = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cria_ficha', blank=True, null=True)
    dt_hr_cria_ficha = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_imprime', blank=True, null=True)
    dt_hr_imprime = models.DateField(blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    nu_comanda = models.CharField(max_length=8, blank=True, null=True)
    cd_usuario_libera_nao_padrao = models.CharField(max_length=8, blank=True, null=True)
    dt_libera_ficha_nao_padrao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_presc_medica_nao_padrao'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_ficha'),)


class TbPrescPlanoHistoricoGotej(models.Model):
    cd_atendimento = models.IntegerField(primary_key=True)
    cd_ocorrencia_plano = models.IntegerField()
    cd_ordem_prescricao = models.IntegerField()
    cd_ordem_prescricao_plano = models.IntegerField()
    cd_ordem_gotej = models.IntegerField()
    qt_gotejamento_anterior = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_gotejamento_anterior = models.ForeignKey(TbGotejamento, models.DO_NOTHING, db_column='cd_gotejamento_anterior', blank=True, null=True)
    qt_gotejamento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.ForeignKey(TbGotejamento, models.DO_NOTHING, db_column='cd_gotejamento', blank=True, null=True)
    cd_profissional_altera = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_altera', blank=True, null=True)
    cd_operador = models.CharField(max_length=40, blank=True, null=True)
    cd_terminal = models.CharField(max_length=40, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_presc_plano_historico_gotej'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_prescricao_plano', 'cd_ordem_gotej'),)


class TbPrescricaoAcrescimo(models.Model):
    cd_atendimento = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem = models.IntegerField()
    cd_ordem_prescricao_plano = models.IntegerField(blank=True, null=True)
    cd_ordem_proc_plano_uso = models.IntegerField(blank=True, null=True)
    nu_prescricao_medica = models.IntegerField(blank=True, null=True)
    nu_comanda = models.CharField(max_length=8, blank=True, null=True)
    nu_produto = models.IntegerField(blank=True, null=True)
    cd_procedimento = models.CharField(max_length=8, blank=True, null=True)
    cd_mat_med = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_mat_med', blank=True, null=True)
    qt_acrescimo = models.IntegerField(blank=True, null=True)
    dt_acrescimo = models.DateField(blank=True, null=True)
    hr_acrescimo = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    dt_apraza = models.DateField(blank=True, null=True)
    hr_apraza = models.IntegerField(blank=True, null=True)
    fl_tipo_aprazamento = models.CharField(max_length=1, blank=True, null=True)
    fl_turno = models.CharField(max_length=1, blank=True, null=True)
    dt_apraza_real = models.DateField(blank=True, null=True)
    hr_apraza_real = models.FloatField(blank=True, null=True)
    fl_automatico = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_acrescimo'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem'),)


class TbPrescricaoAlta(models.Model):
    cd_atendimento = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_alta = models.IntegerField()
    cd_tipo_alta = models.ForeignKey('TbTipoAlta', models.DO_NOTHING, db_column='cd_tipo_alta')
    cd_posto_destino = models.ForeignKey('TmSetor', models.DO_NOTHING, db_column='cd_posto_destino', blank=True, null=True)
    dt_alta_medica = models.DateField(blank=True, null=True)
    hr_alta_medica = models.IntegerField(blank=True, null=True)
    cd_profissional_alta = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_alta', blank=True, null=True)
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_imprime', blank=True, null=True)
    hr_alta_apartir = models.IntegerField(blank=True, null=True)
    ds_observacao_alta = models.CharField(max_length=2000, blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    fl_previsao_alta = models.CharField(max_length=1, blank=True, null=True)
    dt_previsao_alta = models.DateField(blank=True, null=True)
    hr_previsao_alta = models.IntegerField(blank=True, null=True)
    cd_cid10_alta = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cd_cid10_alta', blank=True, null=True)
    cd_cid10_alta_sec = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cd_cid10_alta_sec', blank=True, null=True)
    cd_tipo_obito = models.IntegerField(blank=True, null=True)
    fl_int_rn = models.CharField(max_length=1, blank=True, null=True)
    fl_int_mae = models.CharField(max_length=1, blank=True, null=True)
    dt_obito = models.DateField(blank=True, null=True)
    hr_obito = models.FloatField(blank=True, null=True)
    nu_evolucao = models.IntegerField(blank=True, null=True)
    fl_int_rn2 = models.CharField(max_length=1, blank=True, null=True)
    fl_int_rn3 = models.CharField(max_length=1, blank=True, null=True)
    fl_int_rn4 = models.CharField(max_length=1, blank=True, null=True)
    dt_obito_rn = models.DateField(blank=True, null=True)
    dt_obito_rn2 = models.DateField(blank=True, null=True)
    dt_obito_rn3 = models.DateField(blank=True, null=True)
    dt_obito_rn4 = models.DateField(blank=True, null=True)
    hr_obito_rn = models.FloatField(blank=True, null=True)
    hr_obito_rn2 = models.FloatField(blank=True, null=True)
    hr_obito_rn3 = models.FloatField(blank=True, null=True)
    hr_obito_rn4 = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_alta'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_alta'),)


class TbPrescricaoAvaliacao(models.Model):
    cd_atendimento = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_avaliacao = models.IntegerField()
    cd_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_avaliacao')
    cd_nivel_avaliacao = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_nivel_avaliacao')
    cd_ordem = models.ForeignKey(TbItemAvaliacao, models.DO_NOTHING, db_column='cd_ordem')
    dt_inicio_avaliacao = models.DateField()
    hr_inicio_avaliacao = models.IntegerField()
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    fl_periodo = models.CharField(max_length=1, blank=True, null=True)
    dt_fim_avaliacao = models.DateField()
    hr_fim_avaliacao = models.IntegerField()
    ds_observacao = models.CharField(max_length=2000, blank=True, null=True)
    fl_uso = models.CharField(max_length=1, blank=True, null=True)
    cd_operador = models.CharField(max_length=30)
    cd_terminal = models.CharField(max_length=30)
    dt_transacao = models.DateField()
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)
    fl_tipo_aprazamento = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_prescreve = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_prescreve', blank=True, null=True)
    cd_profissional_valida = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_valida', blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    qt_frequencia_totalizacao = models.IntegerField(blank=True, null=True)
    vl_total_nivel_avaliacao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    ds_complemento_item_avaliacao = models.CharField(max_length=200, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_avaliacao'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_avaliacao'),)


class TbPrescricaoGastoExtra(models.Model):
    cd_atendimento = models.ForeignKey('TbPrescricaoMedicaHv', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbPrescricaoMedicaHv', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbPrescricaoMedicaHv', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_gasto = models.IntegerField()
    cd_mat_med = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_mat_med', blank=True, null=True)
    cd_procedimento = models.ForeignKey('TbProcedimento', models.DO_NOTHING, db_column='cd_procedimento', blank=True, null=True)
    dt_prescricao_gasto = models.DateField()
    hr_prescricao_gasto = models.IntegerField()
    qt_gasto_extra = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_profissional_autoriza = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_autoriza', blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    fl_automatico = models.CharField(max_length=1, blank=True, null=True)
    nu_prescricao_medica = models.ForeignKey('TbPrescricaoMedica', models.DO_NOTHING, db_column='nu_prescricao_medica')
    cd_ordem_prescricao_plano = models.ForeignKey('TbPrescricaoPlano', models.DO_NOTHING, db_column='cd_ordem_prescricao_plano', blank=True, null=True)
    cd_ordem_proc_plano_uso = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_ordem_proc_plano_uso', blank=True, null=True)
    nu_comanda = models.ForeignKey(TbComanda, models.DO_NOTHING, db_column='nu_comanda', blank=True, null=True)
    cd_taxa = models.ForeignKey('TbTaxas', models.DO_NOTHING, db_column='cd_taxa', blank=True, null=True)
    cd_ordem_dieta = models.ForeignKey(TbDietaPaciente, models.DO_NOTHING, db_column='cd_ordem_dieta', blank=True, null=True)
    qt_requisicao = models.IntegerField(blank=True, null=True)
    fl_controle_aparelhos = models.CharField(max_length=1, blank=True, null=True)
    dt_lig_aparelho = models.DateField(blank=True, null=True)
    hr_lig_aparelho = models.IntegerField(blank=True, null=True)
    dt_desl_aparelho = models.DateField(blank=True, null=True)
    hr_desl_aparelho = models.IntegerField(blank=True, null=True)
    cd_aparelho = models.ForeignKey(TbAparelhosGasesTaxas, models.DO_NOTHING, db_column='cd_aparelho', blank=True, null=True)
    cd_ordem_hv = models.ForeignKey('TbPrescricaoMedicaHv', models.DO_NOTHING, db_column='cd_ordem_hv', blank=True, null=True)
    cd_mat_med_ori = models.IntegerField(blank=True, null=True)
    cd_ordem_hora_med = models.IntegerField(blank=True, null=True)
    cd_ordem_hora_msp = models.IntegerField(blank=True, null=True)
    cd_ordem_hora_die = models.IntegerField(blank=True, null=True)
    ds_justificativa_solic_adic = models.CharField(max_length=2000, blank=True, null=True)
    fl_farmacia_ja_analisou_solic = models.CharField(max_length=1, blank=True, null=True)
    ds_resposta_farmacia_solic = models.CharField(max_length=2000, blank=True, null=True)
    dt_farmacia_analisou_solic = models.DateField(blank=True, null=True)
    qt_entregue = models.IntegerField(blank=True, null=True)
    fl_acrescimo = models.CharField(max_length=1, blank=True, null=True)
    cd_motivo_solicitacao = models.FloatField(blank=True, null=True)
    qt_carro_parada = models.FloatField(blank=True, null=True)
    fl_carro_parada = models.CharField(max_length=1, blank=True, null=True)
    dt_devolucao_automatica = models.DateField(blank=True, null=True)
    fl_carro_parada_c = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_gasto_extra'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_gasto'),)


class TbPrescricaoIsolamento(models.Model):
    cd_atendimento = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_isolamento = models.IntegerField()
    cd_tipo_isolamento = models.IntegerField()
    ds_motivo_isolamento = models.CharField(max_length=500)
    nu_dias_previstos = models.IntegerField()
    dt_previsao_termino = models.DateField()
    cd_cid10 = models.ForeignKey(TbCid10, models.DO_NOTHING, db_column='cd_cid10')
    cd_ordem_proc_plano_uso = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_ordem_proc_plano_uso')
    cd_profissional_valida = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_valida', blank=True, null=True)
    dt_suspensao_isolamento = models.DateField(blank=True, null=True)
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_isolamento'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_isolamento'),)


class TbPrescricaoMedica(models.Model):
    cd_atendimento = models.ForeignKey(TbPlanoTratamentoUso, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey(TbPlanoTratamentoUso, models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_prescricao_pai = models.IntegerField(blank=True, null=True)
    nu_prescricao_medica = models.IntegerField(unique=True)
    dt_prescricao = models.DateField()
    hr_prescricao = models.IntegerField()
    fl_prescricao_medica = models.CharField(max_length=1)
    fl_status_prescricao = models.CharField(max_length=1)
    cd_avaliacao = models.IntegerField(blank=True, null=True)
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional')
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    ds_observacao = models.TextField(blank=True, null=True)
    fl_assinatura = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_aprazamento = models.CharField(max_length=1, blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    dt_inicio_avaliacao = models.DateField(blank=True, null=True)
    hr_inicio_avaliacao = models.IntegerField(blank=True, null=True)
    qt_frequencia_totalizacao = models.IntegerField(blank=True, null=True)
    qt_peso_kg_registrado = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    nu_prescricao_medica_ori = models.IntegerField(blank=True, null=True)
    nu_documento = models.ForeignKey(TbDocumentoProntuario, models.DO_NOTHING, blank=True, null=True)
    nu_documento_id_aprazamento = models.ForeignKey(TbDocumentoProntuario, models.DO_NOTHING, db_column='nu_documento_id_aprazamento', blank=True, null=True)
    fl_prescricao_confirmada = models.CharField(max_length=1, blank=True, null=True)
    dt_prescricao_confirmada = models.DateField(blank=True, null=True)
    nu_prescricao_medica_origem = models.BigIntegerField(blank=True, null=True)
    cd_profissional_presc_conf = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_presc_conf', blank=True, null=True)
    cd_ordem_plano_trat = models.ForeignKey(TbPlanoTratUsoOcorrencia, models.DO_NOTHING, db_column='cd_ordem_plano_trat', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_medica'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao'),)


class TbPrescricaoMedicaAgd(models.Model):
    cd_agenda = models.IntegerField(primary_key=True)
    cd_modelo = models.BigIntegerField()
    ds_modelo = models.CharField(max_length=100, blank=True, null=True)
    fl_prescricao_medica = models.CharField(max_length=1, blank=True, null=True)
    fl_status_prescricao = models.CharField(max_length=1, blank=True, null=True)
    cd_avaliacao = models.IntegerField(blank=True, null=True)
    cd_profissional = models.IntegerField()
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    ds_observacao = models.TextField(blank=True, null=True)
    fl_assinatura = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_aprazamento = models.CharField(max_length=1, blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    dt_inicio_avaliacao = models.DateField(blank=True, null=True)
    hr_inicio_avaliacao = models.IntegerField(blank=True, null=True)
    qt_frequencia_totalizacao = models.IntegerField(blank=True, null=True)
    qt_peso_kg_registrado = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    cd_subgrupo_avaliacao = models.IntegerField(blank=True, null=True)
    esquema_tratamento = models.CharField(max_length=100, blank=True, null=True)
    dt_inicio_tratamento = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_medica_agd'
        unique_together = (('cd_agenda', 'cd_modelo'),)


class TbPrescricaoMedicaDoc(models.Model):
    cd_atendimento = models.ForeignKey(TbPrescricaoMedica, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey(TbPrescricaoMedica, models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey(TbPrescricaoMedica, models.DO_NOTHING, db_column='cd_ordem_prescricao')
    nu_prescricao_medica = models.IntegerField(unique=True)
    ds_obs_doc = models.CharField(max_length=100, blank=True, null=True)
    cd_posto = models.CharField(max_length=6, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_medica_doc'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao'),)


class TbPrescricaoMedicaHv(models.Model):
    cd_atendimento = models.ForeignKey(TbPrescricaoMedica, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey(TbPrescricaoMedica, models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey(TbPrescricaoMedica, models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_hv = models.IntegerField()
    vig = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    volume_total = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    fl_frequencia_uso = models.CharField(max_length=3, blank=True, null=True)
    qt_gotejamento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.ForeignKey(TbGotejamento, models.DO_NOTHING, db_column='cd_gotejamento', blank=True, null=True)
    fl_bomba_infusao = models.CharField(max_length=1, blank=True, null=True)
    qt_soro_s_glicose = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_soro_c_glicose = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_prescreve = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_prescreve', blank=True, null=True)
    cd_profissional_valida = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_valida', blank=True, null=True)
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_imprime', blank=True, null=True)
    cd_tipo_acesso_infusao = models.CharField(max_length=1, blank=True, null=True)
    cd_tipo_fase = models.CharField(max_length=1, blank=True, null=True)
    dt_hr_suspensao = models.DateField(blank=True, null=True)
    qt_tempo_fase_rapida = models.IntegerField(blank=True, null=True)
    cd_unid_tempo_fase_rapida = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unid_tempo_fase_rapida', blank=True, null=True)
    fl_necessario = models.CharField(max_length=1, blank=True, null=True)
    fl_acm = models.CharField(max_length=1, blank=True, null=True)
    dt_libera_sn = models.DateField(blank=True, null=True)
    hr_libera_sn = models.IntegerField(blank=True, null=True)
    cd_profissional_libera_sn = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_libera_sn', blank=True, null=True)
    cd_tipo_hv = models.CharField(max_length=1, blank=True, null=True)
    qt_quota = models.FloatField(blank=True, null=True)
    dt_validacao = models.DateField(blank=True, null=True)
    fl_item_susp_presc_anterior = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_medica_hv'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_hv'),)


class TbPrescricaoMedicaHvModelo(models.Model):
    cd_modelo = models.ForeignKey('TbPrescricaoMedicaModelo', models.DO_NOTHING, db_column='cd_modelo', primary_key=True)
    cd_ordem_hv = models.IntegerField()
    vig = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    volume_total = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    fl_frequencia_uso = models.CharField(max_length=3, blank=True, null=True)
    qt_gotejamento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.ForeignKey(TbGotejamento, models.DO_NOTHING, db_column='cd_gotejamento', blank=True, null=True)
    fl_bomba_infusao = models.CharField(max_length=1, blank=True, null=True)
    qt_soro_s_glicose = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_soro_c_glicose = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    cd_profissional_prescreve = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_prescreve', blank=True, null=True)
    cd_profissional_valida = models.IntegerField(blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.IntegerField(blank=True, null=True)
    cd_tipo_acesso_infusao = models.CharField(max_length=1, blank=True, null=True)
    cd_tipo_fase = models.CharField(max_length=1, blank=True, null=True)
    dt_hr_suspensao = models.DateField(blank=True, null=True)
    qt_tempo_fase_rapida = models.IntegerField(blank=True, null=True)
    cd_unid_tempo_fase_rapida = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unid_tempo_fase_rapida', blank=True, null=True)
    fl_necessario = models.CharField(max_length=1, blank=True, null=True)
    fl_acm = models.CharField(max_length=1, blank=True, null=True)
    dt_libera_sn = models.DateField(blank=True, null=True)
    hr_libera_sn = models.IntegerField(blank=True, null=True)
    cd_profissional_libera_sn = models.IntegerField(blank=True, null=True)
    qt_quota = models.FloatField(blank=True, null=True)
    cd_tipo_hv = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_medica_hv_modelo'
        unique_together = (('cd_modelo', 'cd_ordem_hv'),)


class TbPrescricaoMedicaModelo(models.Model):
    cd_modelo = models.BigIntegerField(primary_key=True)
    ds_modelo = models.CharField(max_length=100, blank=True, null=True)
    fl_prescricao_medica = models.CharField(max_length=1, blank=True, null=True)
    fl_status_prescricao = models.CharField(max_length=1, blank=True, null=True)
    cd_avaliacao = models.IntegerField(blank=True, null=True)
    cd_profissional = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional')
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    ds_observacao = models.TextField(blank=True, null=True)
    fl_assinatura = models.CharField(max_length=1, blank=True, null=True)
    fl_tipo_aprazamento = models.CharField(max_length=1, blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    dt_inicio_avaliacao = models.DateField(blank=True, null=True)
    hr_inicio_avaliacao = models.IntegerField(blank=True, null=True)
    qt_frequencia_totalizacao = models.IntegerField(blank=True, null=True)
    qt_peso_kg_registrado = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    cd_subgrupo_avaliacao = models.ForeignKey('TbSubgrupoAvaliacao', models.DO_NOTHING, db_column='cd_subgrupo_avaliacao', blank=True, null=True)
    ord_rel_oncologia = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_medica_modelo'


class TbPrescricaoModelo(models.Model):
    cd_modelo = models.ForeignKey(TbModeloPlanoTratamento, models.DO_NOTHING, db_column='cd_modelo', primary_key=True)
    cd_mat_med = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_mat_med')
    qt_frequencia_uso = models.IntegerField()
    qt_dosagem = models.IntegerField()
    cd_unidade_usual = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_usual')
    cd_tipo_acesso = models.ForeignKey('TbTipoAcesso', models.DO_NOTHING, db_column='cd_tipo_acesso', blank=True, null=True)
    fl_periodo = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_modelo'
        unique_together = (('cd_modelo', 'cd_mat_med'),)


class TbPrescricaoPlano(models.Model):
    cd_atendimento = models.ForeignKey(TbPrescricaoMedicaHv, models.DO_NOTHING, db_column='cd_atendimento', primary_key=True)
    cd_ocorrencia_plano = models.ForeignKey(TbPrescricaoMedicaHv, models.DO_NOTHING, db_column='cd_ocorrencia_plano')
    cd_ordem_prescricao = models.ForeignKey(TbPrescricaoMedicaHv, models.DO_NOTHING, db_column='cd_ordem_prescricao')
    cd_ordem_prescricao_plano = models.IntegerField()
    cd_prescricao_plano_pai = models.ForeignKey('self', models.DO_NOTHING, db_column='cd_prescricao_plano_pai', blank=True, null=True)
    dt_inicio_uso = models.DateField()
    hr_inicio_uso = models.IntegerField(blank=True, null=True)
    dt_fim_uso = models.DateField(blank=True, null=True)
    hr_fim_uso = models.IntegerField(blank=True, null=True)
    cd_mat_med = models.ForeignKey(TbMatMed, models.DO_NOTHING, db_column='cd_mat_med', blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    cd_unidade_usual = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_usual', blank=True, null=True)
    cd_tipo_acesso = models.ForeignKey('TbTipoAcesso', models.DO_NOTHING, db_column='cd_tipo_acesso', blank=True, null=True)
    qt_dosagem = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_diluicao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.ForeignKey(TbGotejamento, models.DO_NOTHING, db_column='cd_gotejamento', blank=True, null=True)
    qt_gotejamento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    dt_revisao_prescricao = models.DateField(blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    fl_necessario = models.CharField(max_length=1, blank=True, null=True)
    fl_diluicao = models.CharField(max_length=1, blank=True, null=True)
    fl_alergia = models.CharField(max_length=1, blank=True, null=True)
    fl_periodo = models.CharField(max_length=1, blank=True, null=True)
    ds_observacao = models.CharField(max_length=500, blank=True, null=True)
    nu_produto = models.ForeignKey('TbProduto', models.DO_NOTHING, db_column='nu_produto')
    cd_principio_ativo = models.ForeignKey(TbAdministracaoDiluicao, models.DO_NOTHING, db_column='cd_principio_ativo', blank=True, null=True)
    cd_ocorrencia_diluicao = models.ForeignKey(TbAdministracaoDiluicao, models.DO_NOTHING, db_column='cd_ocorrencia_diluicao', blank=True, null=True)
    cd_ordem_administracao = models.ForeignKey(TbAdministracaoDiluicao, models.DO_NOTHING, db_column='cd_ordem_administracao', blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_profissional_cancela = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_cancela', blank=True, null=True)
    qt_mat_med = models.IntegerField(blank=True, null=True)
    cd_apresentacao = models.ForeignKey(TbApresentacao, models.DO_NOTHING, db_column='cd_apresentacao', blank=True, null=True)
    qt_tempo_gotej = models.IntegerField(blank=True, null=True)
    cd_unidade_gotej = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_gotej', blank=True, null=True)
    fl_acm = models.CharField(max_length=1, blank=True, null=True)
    cd_diluente = models.ForeignKey('TbProduto', models.DO_NOTHING, db_column='cd_diluente', blank=True, null=True)
    qt_reconstituicao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_dosagem_med = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_unidade_dosagem_med = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_dosagem_med', blank=True, null=True)
    cd_apresentacao_diluente = models.ForeignKey(TbApresentacao, models.DO_NOTHING, db_column='cd_apresentacao_diluente', blank=True, null=True)
    cd_ordem_proc_plano_uso = models.ForeignKey('TbProcedimentoPlanoUso', models.DO_NOTHING, db_column='cd_ordem_proc_plano_uso', blank=True, null=True)
    cd_profissional_prescreve = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_prescreve', blank=True, null=True)
    cd_profissional_valida = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_valida', blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    fl_bomba_infusao = models.CharField(max_length=1, blank=True, null=True)
    cd_reconstituir = models.ForeignKey('TbProduto', models.DO_NOTHING, db_column='cd_reconstituir', blank=True, null=True)
    qt_reconstituir = models.FloatField(blank=True, null=True)
    cd_reconstituir2 = models.ForeignKey('TbProduto', models.DO_NOTHING, db_column='cd_reconstituir2', blank=True, null=True)
    qt_reconstituir2 = models.FloatField(blank=True, null=True)
    cd_apres_reconstituir = models.ForeignKey(TbApresentacao, models.DO_NOTHING, db_column='cd_apres_reconstituir', blank=True, null=True)
    cd_apres_reconstituir2 = models.ForeignKey(TbApresentacao, models.DO_NOTHING, db_column='cd_apres_reconstituir2', blank=True, null=True)
    fl_frequencia_uso = models.CharField(max_length=3, blank=True, null=True)
    cd_tipo_prescricao_plano = models.ForeignKey('TbTipoPrescricaoPlano', models.DO_NOTHING, db_column='cd_tipo_prescricao_plano')
    qt_dosagem_hv = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_unidade_hv = models.ForeignKey('TbUnidadeUsual', models.DO_NOTHING, db_column='cd_unidade_hv', blank=True, null=True)
    cd_ordem_hv = models.ForeignKey(TbPrescricaoMedicaHv, models.DO_NOTHING, db_column='cd_ordem_hv', blank=True, null=True)
    nu_ordem_apresentacao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_libera_sn = models.DateField(blank=True, null=True)
    hr_libera_sn = models.IntegerField(blank=True, null=True)
    cd_profissional_libera_sn = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_libera_sn', blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.ForeignKey('TbProfissional', models.DO_NOTHING, db_column='cd_profissional_imprime', blank=True, null=True)
    dt_hr_suspensao = models.DateField(blank=True, null=True)
    ds_apres_ud_fazer_retirar = models.CharField(max_length=4, blank=True, null=True)
    fl_bureta = models.CharField(max_length=1, blank=True, null=True)
    fl_inicio_insulina = models.CharField(max_length=1, blank=True, null=True)
    dt_validacao = models.DateField(blank=True, null=True)
    fl_carro_parada_c = models.CharField(max_length=1, blank=True, null=True)
    fl_item_susp_presc_anterior = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_plano'
        unique_together = (('cd_atendimento', 'cd_ocorrencia_plano', 'cd_ordem_prescricao', 'cd_ordem_prescricao_plano'),)


class TbPrescricaoPlanoAgd(models.Model):
    cd_agenda = models.IntegerField(primary_key=True)
    cd_modelo = models.IntegerField()
    cd_ordem_prescricao_plano = models.IntegerField()
    cd_prescricao_plano_pai = models.IntegerField(blank=True, null=True)
    dt_inicio_uso = models.DateField()
    hr_inicio_uso = models.IntegerField(blank=True, null=True)
    dt_fim_uso = models.DateField(blank=True, null=True)
    hr_fim_uso = models.IntegerField(blank=True, null=True)
    cd_mat_med = models.IntegerField(blank=True, null=True)
    qt_frequencia_uso = models.IntegerField(blank=True, null=True)
    cd_unidade_usual = models.CharField(max_length=2, blank=True, null=True)
    cd_tipo_acesso = models.IntegerField()
    qt_dosagem = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_diluicao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_gotejamento = models.IntegerField(blank=True, null=True)
    qt_gotejamento = models.DecimalField(max_digits=7, decimal_places=2, blank=True, null=True)
    dt_revisao_prescricao = models.DateField(blank=True, null=True)
    fl_status_uso = models.CharField(max_length=1, blank=True, null=True)
    fl_necessario = models.CharField(max_length=1, blank=True, null=True)
    fl_diluicao = models.CharField(max_length=1, blank=True, null=True)
    fl_alergia = models.CharField(max_length=1, blank=True, null=True)
    fl_periodo = models.CharField(max_length=1, blank=True, null=True)
    ds_observacao = models.CharField(max_length=500, blank=True, null=True)
    nu_produto = models.IntegerField()
    cd_principio_ativo = models.IntegerField(blank=True, null=True)
    cd_ocorrencia_diluicao = models.IntegerField(blank=True, null=True)
    cd_ordem_administracao = models.IntegerField(blank=True, null=True)
    cd_operador = models.CharField(max_length=30, blank=True, null=True)
    cd_terminal = models.CharField(max_length=30, blank=True, null=True)
    dt_transacao = models.DateField(blank=True, null=True)
    cd_profissional_cancela = models.IntegerField(blank=True, null=True)
    qt_mat_med = models.IntegerField(blank=True, null=True)
    cd_apresentacao = models.CharField(max_length=4, blank=True, null=True)
    qt_tempo_gotej = models.IntegerField(blank=True, null=True)
    cd_unidade_gotej = models.CharField(max_length=2, blank=True, null=True)
    fl_acm = models.CharField(max_length=1, blank=True, null=True)
    cd_diluente = models.IntegerField(blank=True, null=True)
    qt_reconstituicao = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    qt_dosagem_med = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_unidade_dosagem_med = models.CharField(max_length=2, blank=True, null=True)
    cd_apresentacao_diluente = models.CharField(max_length=4, blank=True, null=True)
    cd_ordem_proc_plano_uso = models.IntegerField(blank=True, null=True)
    cd_profissional_prescreve = models.IntegerField(blank=True, null=True)
    cd_profissional_valida = models.IntegerField(blank=True, null=True)
    fl_validado = models.CharField(max_length=1, blank=True, null=True)
    fl_impresso = models.CharField(max_length=1, blank=True, null=True)
    fl_bomba_infusao = models.CharField(max_length=1, blank=True, null=True)
    cd_reconstituir = models.IntegerField(blank=True, null=True)
    qt_reconstituir = models.FloatField(blank=True, null=True)
    cd_reconstituir2 = models.IntegerField(blank=True, null=True)
    qt_reconstituir2 = models.FloatField(blank=True, null=True)
    cd_apres_reconstituir = models.CharField(max_length=4, blank=True, null=True)
    cd_apres_reconstituir2 = models.CharField(max_length=4, blank=True, null=True)
    fl_frequencia_uso = models.CharField(max_length=3, blank=True, null=True)
    cd_tipo_prescricao_plano = models.IntegerField()
    qt_dosagem_hv = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    cd_unidade_hv = models.CharField(max_length=2, blank=True, null=True)
    cd_ordem_hv = models.IntegerField(blank=True, null=True)
    nu_ordem_apresentacao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao = models.IntegerField(blank=True, null=True)
    cd_ordem_impressao_item = models.IntegerField(blank=True, null=True)
    dt_libera_sn = models.DateField(blank=True, null=True)
    hr_libera_sn = models.IntegerField(blank=True, null=True)
    cd_profissional_libera_sn = models.IntegerField(blank=True, null=True)
    dt_impressao = models.DateField(blank=True, null=True)
    cd_profissional_imprime = models.IntegerField(blank=True, null=True)
    dt_hr_suspensao = models.DateField(blank=True, null=True)
    ds_apres_ud_fazer_retirar = models.CharField(max_length=4, blank=True, null=True)
    fl_bureta = models.CharField(max_length=1, blank=True, null=True)
    fl_medicamento_proprio = models.CharField(max_length=1, blank=True, null=True)
    nu_ciclos = models.FloatField(blank=True, null=True)
    nu_ciclo_atual = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tb_prescricao_plano_agd'
        unique_together = (('cd_agenda', 'cd_modelo', 'cd_ordem_prescricao_plano'),)
